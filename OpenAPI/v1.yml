openapi: 3.0.0
info:
  title: Exivity API v1
  description: >-
    <img
    src="https://content.pstmn.io/eeb7303a-367d-4f85-a90c-642ea4d12292/RXhpdml0eUFQSXYxTG9nby5wbmc=">


    This is the Exivity API specification, and should be used as a reference
    guide for creating requests and parsing responses. For a more general
    introduction to Exivity, please refer to our
    [documentation](https://docs.exivity.com/).


    Download latest [Postman
    collection](https://raw.githubusercontent.com/exivity/postman-collections/master/proximity/v1.json)
    from our [GitHub
    repository](https://github.com/exivity/postman-collections).


    # Overview


    1. This API uses principles and constraints of [REST
    APIs](https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints).

    2. You need a valid API token for requests.

    3. The API is rate limited.

    4. Most resource endpoints listen to and responds with data structures as
    defined by the [JSON:API standard](https://jsonapi.org/). You'll recognise
    these endpoints when the documentation lists the following headers:
        

    ```

    Content-Type: application/vnd.api+json

    Accept: application/vnd.api+json

     ```

    # Authentication


    The default method of authentication against the API is done through a
    stateless [JWT token](https://jwt.io/).


    It is also possible to authenticate the API via LDAP or SAML, if your
    administrator has set up access to either of these systems.


    #### **How to use the token**


    The default method of authentication against the API is done through a
    stateless [JWT token](https://jwt.io/), sent along as an Authentication
    header. To obtain a token, a request to the API endpoint `/v1/auth/token`
    should be made with the user credentials.


    Once a token has been generated, please include it in the headers of other
    requests to allow authorization.


    _Example:_


    ```

    Authorization: Bearer [token]

     ```

    The JWT token will expire after _4 hours_ for security reasons. This value
    is configurable. Please see
    [/configuration](#dcc7d52d-c5f5-35bd-a28b-182dbba9eec3) or
    [https://docs.exivity.com/architecture%20concepts/glossary/#authentication-token](https://docs.exivity.com/architecture%20concepts/glossary/#authentication-token)
    for more information.


    # Working with the API


    ## Placeholders


    Different variables have double curly brackets around them (`{{`, `}}`).
    These used for placeholders in this documentation. When working with the
    API, these placeholders should be replaced with real values. Examples
    include:


    `{{base_url}}` - replace this with your API's url


    `{{workflow_id}}`, `{{report_id}}`, `{{account_id}}`, etc - these are
    placeholders for a specific ID for an object.


    ## Query String Parameters


    Some requests using the JSON:API format accept additional query string
    parameters.


    ### Filtering


    To filter results, use the `filter[attribute]` query string parameter.


    The following formats are supported for filtering results:


    | Token | Description | Example |

    | --- | --- | --- |

    | `^` | Field starts with | `filter[name]=^John` |

    | `$` | Field ends with | `filter[name]=$Smith` |

    | `~` | Field contains | `filter[favorite_cheese]=~cheddar` |

    | `<` | Field is less than | `filter[lifetime_value]=<50` |

    | `>` | Field is greater than | `filter[lifetime_value]=>50` |

    | `>=` | Field is greater than or equals | `filter[lifetime_value]=>=50` |

    | `<=` | Field is less than or equals | `filter[lifetime_value]=<=50` |

    | `=` | Field is equal to | `filter[username]==Specific Username` |

    | `!=` | Field is not equal to | `filter[username]=!=common username` |

    | `[...]` | Field is one or more of | `filter[id]=[1,5,10]` |

    | `![...]` | Field is not one of | `filter[id]=![1,5,10]` |

    | `{...,...}` | Between exclusive (e.g. 2 up to 99) | `filter[id]={1,100}` |

    | `={...,...}` | Between inclusive (e.g. 1 up to 100) |
    `filter[id]=={1,100}` |

    | `NULL` | Field is null | `filter[address]=NULL` |

    | `NOT_NULL` | Field is not null | `filter[email]=NOT_NULL` |


    _Example - get accounts that start with W:_


    ```

    GET /accounts?filter[name]=^W

     ```

    #### Multiple filters


    The filter parameter can occur multiple times in a request to filter by
    multiple fields.


    _Example - get accounts that start with W and level is set to one:_


    ```

    GET /accounts?filter[name]=^W&filter[level]==1

     ```

    #### Related entities filters


    A filter can also use related entities (which don't have to be included in
    the request with the `include` parameter).


    _Example - get users with MANAGE_USERS permission, and an email address
    ending with "example.com":_


    ```

    GET
    /user?filter[usergroup.permissions]=~MANAGE_USERS&filter[email_address]=$example.com

     ```

    ### Pagination


    When making requests to endpoints which can return more than one entity,
    results are paginated. The number of results per page and the requested page
    can be adjusted with the `page[limit]` and `page[offset]` query string
    parameters.


    _Example:_


    ```

    GET /user?page[limit]=50&page[offset]=2

     ```

    When the page limit is set to `-1`, all results are returned.


    The `links` element in the JSON response contains references to URLs which
    can be used to navigate the resultset.


    The `meta` element in the JSON response contains a reference to the total
    number of items in the resultset.


    ### Sorting


    It is possible to sort results by using the `sort` query string parameter. A
    descending sort order can be requested by prefixing a hyphen (U+002D).


    _Example:_


    ```

    GET /user?sort=-username

     ```

    ### Include Related Resources


    Inclusion of related resources in the response can be requested with the
    `include` query string parameter. Multiple entities can be specified by
    separating them with a comma (U+002C). Each endpoint definition specifies
    which includes can be requested.


    _Examples:_


    ```

    GET /user?include=usergroup,accounts

    GET /user/[id]?include=usergroup,accounts

     ```

    ### Fetching relationships


    It is also possible to fetch relationship data to a single resource using a
    separate endpoint. Relationships data on resources can be
    [queried](http://jsonapi.org/format/#fetching-relationships) and
    [modified](http://jsonapi.org/format/#crud-updating-relationships) by using
    the `/[resource]/[id]/relationships/[relation]` endpoint structure.


    ```

    GET /user/[id]/usergroup

     ```

    # Error responses


    Errors are returned as a JSON object, following the [JSON:API error
    standard](https://jsonapi.org/format/#errors). We use HTTP error responses
    in the status field, to indicate whether the request was a success (`2xx`)
    or a failure(`4xx`, `5xx`).


    _Example:_


    ``` json

    {
      "errors": [
        {
          "status": "422",
          "title":  "Attribute validation error",
          "detail": "Password must contain at least 8 characters."
        }
      ]
    }

     ```

    Possible response codes:


    | Code | Description |

    | --- | --- |

    | `400 Bad request` | Something in the request is missing or invalid |

    | `401 Unauthorized` | JWT token is missing or invalid |

    | `403 Forbidden` | Missing required permission for this operation |

    | `404 Not found` | Entity can't be found |

    | `409 Conflict` | Entity type or id doesn't match endpoint |

    | `422 Unprocessable Entity` | Parameters validation error |

    | `503 Service Unavailable` | Rate lime exceeded |


    ## Authentication error response


    If an authorization token is missing, expired or malformed, an error
    response will be returned. These errors will always have a `401
    Unauthorised` status.


    _Example:_


    ``` json

    {
        "errors": [
            {
                "status": 401,
                "title": "AuthException",
                "detail": "Invalid token provided, please login again."
            }
        ]
    }

     ```

    ## Authorization error response


    Some endpoints require a different set of permissions than others. If
    insufficient permissions are granted to the authenticated user, a `403
    Forbidden` response is returned.


    # Rate limits


    All API requests are rate limited to avoid overloading the server.  

    The rate at which you can make requests to the API is limited by client IP
    address, and is limited at 10 requests per second. The API allows for short
    request bursts (i.e. you can exceed this limit for a short period of time).
    If you've exceeded your API rate limit, you'll get back a `503 Service
    Unavailable` response.


    Requests containing a user password in the payload are even further rate
    limited to mitigate brute-force attacks in user credentials.


    # Terms of service


    You can find the terms of service [on our
    website](https://www.exivity.com/terms).


    # API Reference
  version: 1.0.0
servers:
  - url: http://{{base_url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: General
  - name: Authentication
    description: >-
      The default method of authentication against the API is done through a
      stateless JWT token.


      Exivity documentation:
      [https://docs.exivity.com/architecture%20concepts/glossary/#authentication](https://docs.exivity.com/architecture%20concepts/glossary/#authentication)
  - name: Authentication > /token
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/Security/Authentication/Token](https://docs.exivity.com/Security/Authentication/Token)


      #### **Token object**


      | **name** | **type** | **description** |

      | --- | --- | --- |

      | token | _string_ | JWT token |

      | permissions | _array_ | What permissions the user has |

      | user | _object_ | See user object for more information. |
  - name: Authentication > /saml
    description: >-
      Endpoints for supporting Single Sign-On authentication flow using SAML.


      Exivity documentation:
      [https://docs.exivity.com/advanced/integrate/sso/](https://desktop.postman.com/?desktopVersion=9.16.0&userId=4939400&teamId=48706)
  - name: Authentication > /resetpassword
    description: >-
      If a user forgets their password, this endpoint can be used to generate a
      new password. There are two steps:


      1.  **Request a password reset** \- this generates a new reset token,
      which is emailed the user.

      2.  **Perform a password reset** - the reset token is used to validate the
      user and then reset their password.
  - name: Reports
  - name: Reports > /reports
    description: >-
      The report object contains the definition of how to generate a report, and
      once the report has run, the report data itself.


      Exivity documentation:
      [https://docs.exivity.com/architecture%20concepts/glossary/#report](https://docs.exivity.com/architecture%20concepts/glossary/#report)


      #### **The report object**


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | name | _string_ | Unique name, max 255 chars |

      | dset | _string_ | Dataset name, max 255 chars |

      | created | _string_ | Date created (UTC) |

      | last_updated | _string_ | Date last updated (UTC) |

      | lvl1_key_col  <br>lvl2_key_col  <br>lvl3_key_col  <br>lvl4_key_col 
      <br>lvl5_key_col | _string_ | Key column, max 255 chars |

      | lvl1_name_col  <br>lvl2_name_col  <br>lvl3_name_col  <br>lvl4_name_col 
      <br>lvl5_name_col | _string_ | Name column, max 255 chars |

      | lvl1_label  <br>lvl2_label  <br>lvl3_label  <br>lvl4_label 
      <br>lvl5_label | _string_ | Label, max 255 chars |

      | lvl1_metadata_definition_id  <br>lvl2_metadata_definition_id 
      <br>lvl3_metadata_definition_id  <br>lvl4_metadata_definition_id 
      <br>lvl5_metadata_definition_id | _int_ | Metadata ID |

      | depth | _int_ |  |

      | data_status | _array of objects_ | See data_status object below |


      #### **The data_status object**


      If a report has data, it will be contained inside data_status objects.


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | first_date | _date_ (ISO string) | The first date of the report data |

      | last_date | _date_ (ISO string) | The last date of the report data |

      | missing | _int_ | The total number of days with missing data |

      | errors | _int_ | The total number of days with errors |

      | status | _array of objects_ | See the status object below |


      #### **The status object**


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | date | _date_ (ISO string) | Data date |

      | missing | _bool_ | True if this day has data |

      | column_status | _string_ | Possible values:  <br>\- unknown  <br>\-
      invalid  <br>\- ok  <br>\- missing |

      | account_sync | _bool_ | True if this day has the accounts synchronized
      (part of preparation) |

      | prepared | _bool_ | True if this day is fully prepared |
  - name: Services
    description: >-
      Categories services can be grouped under. A category can contain multiple
      services, but each service can only be in one category.


      Examples of categories: `Software`, `Web services`
  - name: Services > /servicecategories
    description: "Categories services can be grouped under. A category can contain multiple services, but each service can only be in one category.\n\nExamples of categories: `Software`, `Web services`\n\n#### The Service Category Object\n\n| **attribute** | **type** | **mutability** | **description** |\n| --- | --- | --- | --- |\n| name | *string* | 📝\uFEFF editable | Required, unique name for service category. Max 255 chars. |\n\nThe following resources can be included:\n\n| **relationship** | **cardinality** | **required** |\n| --- | --- | --- |\n| services | 0:n | ❌ |\n| adjustments | n:m | ❌ |\n| budgetitems | n:m | ❌ |"
  - name: Services > /services
    description: >-
      Services can be anything that is a sellable item, that can be consumed.
      And should relate to (extracted) consumption data.


      Exivtiy documentation:
      [https://docs.exivity.com/architecture%20concepts/glossary/#service](https://docs.exivity.com/architecture%20concepts/glossary/#service)


      #### **The Service Object**


      | **attribute** | **type** | **editable** | **description** |

      | --- | --- | --- | --- |

      | key | _string_ | ❌ | Unique identifier, [read
      more](https://docs.exivity.com/transform/language/service/#key) |

      | description | _string_ | ✔️ | Friendly name, [read
      more](https://docs.exivity.com/transform/language/service/#description) |

      | unit_label | _string_ | ❌ | Unit of consumption, [read
      more](https://docs.exivity.com/transform/language/service/#unit_label) |

      | dset | _string_ | ❌ | Dset this service is linked to |

      | type | _enum_ | ❌ | One of `service_name_in_header` or
      `service_name_in_data`, [read
      more](https://docs.exivity.com/transform/language/services/#service_type)
      |

      | usage_col | _string_ | ❌ | Dset column containing keys, [read
      more](https://docs.exivity.com/transform/language/services/#usages_col) |

      | consumption_col | _string_ | ❌ | Dset column containing consumption
      amount, [read
      more](https://docs.exivity.com/transform/language/services/#consumption_col)
      |

      | instance_col | _string_ | ❌ | Dset column containing unique instance
      id's, [read
      more](https://docs.exivity.com/transform/language/services/#instance_col)
      |

      | interval | _enum_ | ❌ | One of `never`, `individually`, `second`,
      `minute`, `hour`, `day`, `week`, `month` or `year`. Currently, only
      `individually`, `day` and `month` are implemented, [read
      more](https://docs.exivity.com/transform/language/services/#consumption_col)
      |

      | charge_type | _enum_ | ❌ | One of `none`, `manual`, `manual_per_unit`,
      `manual_per_interval`, `automatic`, `automatic_per_unit`,
      `automatic_per_interval` or `other`, read more below |

      | cogs_type | _enum_ | ❌ | One of `none`, `manual_per_unit`,
      `manual_per_interval`, `automatic_per_unit` or `automatic_per_interval`,
      read more below |

      | proration_type | _enum_ | ✔️ | One of `none` or `full`. If "full" with
      monthly, only charges for the days used. |

      | created_at | _datetime_ | ❌ | Datetime (UTC) the service was first
      created |

      | updated_at | _datetime_ | ❌ | Datetime (UTC) the service was last
      updated |

      | seen_at | _date_ | ❌ | ISO-8601 date (YYYY-MM-DD) the service was last
      seen in a dset |


      #### Charge and cogs type


      The attributes `charge_type` and `cogs_type` define how the rate is used
      when calculating charge and cogs metrics using consumption of the service.


      - The first part denotes whether the rate is dynamically derived from the
      usage data itself (`automatic`) or specified explicitly in rate entities
      (`manual`).

      - The second part denotes whether an amount per unit of consumption
      (`per_unit`) and/or per interval (`per_interval`) should be applied.
          

      When the second part is omitted, both `per_unit` and `per_interval` are
      used. If no rate should be applied at all, `none` can be used. A value of
      `other` means a configuration is used not currently supported by the API.
  - name: Services > /servicesubscriptions
    description: >-
      Subscriptions enable users to manage one-off and recurring transactions
      for charging non-metered services.


      Exivity documentation:
      [https://docs.exivity.com/services/subscriptions](https://docs.exivity.com/services/subscriptions)


      ⚠️ Available since v3.0.0


      #### The Service Subscription Object


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | name | *string* |  |

      | quantity | *int* |  |

      | rate | *int* |  |

      | cogs | *int* |  |

      | type | recurring/one_off |  |

      | start_date | Y-m-d |  |

      | end_date | Y-m-d |  |

      | alt_interval | day/month/year or null | If not set, the associated
      service interval is used for the subscription. |

      | charge_day | number | Only validated when type=recurring and interval is
      year or month.  <br>Format:  <br>* **year:** *\--MM--DD*, example:
      --01-31  <br>* **month** *number*, examples: 1 or 28. |

      | instance | string |  |
  - name: Services > /rates
    description: >-
      Rates allows you to configure manual rates for services that do not have a
      rate provided with their data source.


      Exivity documentation:
      [https://docs.exivity.com/services/rates](https://docs.exivity.com/services/rates)


      #### The Rate Object


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | rate | _numeric_ |  |

      | rate_col | _string_ |  |

      | threshold | _numeric_ |  |

      | min_commit | _nullable/numeric_ |  |

      | effective_date | _required, format: yyyy-mm(-dd)_ | If a service is
      tiered, rates are applied for whole months. So the format is year-month. |

      | end_date | nullable, format: yyyy-mm(-dd) | This date is inclusive, so
      the rate is also applied to this date/month. Can only be applied to
      account-related rates. If a service is tiered, rates are applied for whole
      months. So the format is year-month. |

      | tier_aggregation_level | _nullable/numeric_ |  |

      | fixed | _numeric_ |  |

      | fixed_col | _string_ |  |

      | cogs_rate | _numeric_ |  |

      | cogs_rate_col | _string_ |  |

      | cogs_fixed | _numeric_ |  |

      | cogs_fixed_col | _string_ |  |
  - name: Services > /ratetiers
    description: >-
      ⚠️ These endpoints are currently in alpha and may change at any time.
      Please don't use in production.
  - name: Services > /adjustments
    description: >-
      Adjustments allow a user to create account-specific rate adjustment
      policies.


      Exivity documentation:
      [https://docs.exivity.com/architecture%20concepts/glossary/#adjustment](https://docs.exivity.com/architecture%20concepts/glossary/#adjustment)


      #### The Adjustment Object


      | **attribute** | **type** | **mutability** | **description** |

      | --- | --- | --- | --- |

      | name | _string_ | 📝 editable | Required |

      | amount | _double_ | 📝 editable | Required |

      | sort | _integer_ | 📝 editable | Required, min: 0 |

      | type | _enum_(`relative`, `absolute`) | 📝 editable | Required |

      | target | _enum_(`charge`, `quantity`) | 📝 editable | Required |

      | first_interval | _string_ | 📝 editable | Required, format: Y-m |

      | last_interval | _string?_ | 📝 editable | Format: Y-m |

      | created_at | _timestamp_ | 👁 read-only |  |

      | updated_at | _timestamp_ | 👁 read-only |  |


      The following resources can be included:


      | **relationship** | **type** | **required** |

      | --- | --- | --- |

      | has one | account | ✔️ |

      | has many | services | ❌ |

      | has many | servicecategories | ❌ |
  - name: Accounts
  - name: Accounts > /accounts
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/reports/accounts](https://docs.exivity.com/reports/accounts)


      #### The Account Object


      | **attribute** | **type** | **mutability** | **description** |

      | --- | --- | --- | --- |

      | name | *string* | 📝 editable | required, max 255 |

      | level | *integer* | 👁 read-only | between 1-5 |

      | lvl1_key  <br>lvl2_key  <br>lvl3_key  <br>lvl4_key  <br>lvl5_key |
      *string* | 👁 read-only |  |
  - name: Accounts > /budgets
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/reports/budget](https://docs.exivity.com/reports/budget)


      #### The Budget Object


      | **attribute** | **type** |

      | --- | --- |

      | interval | *required, in: month, quarter, year* |

      | description | *required, string* |

      | metric | *in: charge, cogs* |
  - name: Accounts > /budgetrevisions
    description: |-
      #### The Budget Review Object

      | **attribute** | **type** |
      | --- | --- |
      | effective_from | required, string, unique with in budget |
  - name: Accounts > /budgetitems
    description: |-
      #### The Budget Item Object

      | **attribute** | **type** |
      | --- | --- |
      | kind | *required, in: account, service category, service* |
      | status | *required, in: regular, excluded, remainder* |
      | filter | *in: none, servicecategory, service* |
      | percent | *required, bool* |
      | amount | *required if* *`percent`* *if true, number 0-100* |
      | distribution | *required, in: none, even, shared* |
  - name: Data pipelines
  - name: Data pipelines > /extractors
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/data-pipelines/extract](https://docs.exivity.com/data-pipelines/extract)


      #### Extractor Attributes


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | name | *string* |  |

      | contents | *string* | Extractor scrip |

      | variables | *array* | Extractor variables |
  - name: Data pipelines > /transformers
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/data-pipelines/transform](https://docs.exivity.com/data-pipelines/transform)


      #### Transformer Attributes


      | **attribute** | **type** |

      | --- | --- |

      | name | string |

      | contents | string |

      | hash | string |

      | last_modified | string |
  - name: Data pipelines > /dsets
  - name: Data pipelines > /file
    description: >-
      ⚡ **Not JSON:API compliant** ⚡


      Atomic support: ❌


      This endpoint lets you work with files in the [Exivity home
      directory](https://docs.exivity.com/getting%20started/installation/1%20node/directory%20structure/#home-directory).
      Currently, only uploading files is supported.


      _Note: starting with Exivity v3.0.0, the response structure for all
      endpoints will be streamlined._
  - name: Data pipelines > /metadatadefinitions
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/data-pipelines/metadata](https://docs.exivity.com/data-pipelines/metadata)


      #### The Metadata Definition Object


      | **attribute** | **type** |

      | --- | --- |

      | name | required, string, unique |

      | fields | required, array of Field Objects |


      #### **The Field Object**


      | **attribute** | **type** |

      | --- | --- |

      | name | required, string |

      | type | required, in: string, list, numeric, date |

      | list | required if type=list |
  - name: Data pipelines > /metadata
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/data-pipelines/metadata](https://docs.exivity.com/data-pipelines/metadata)


      #### The Metadata Object


      | **attribute** | **type** |

      | --- | --- |

      | values | required, array |
  - name: Data pipelines > /workflows
    description: >-
      A workflow allows you to schedule various tasks and execute them at a
      specific date and time.


      Exivity documentation:  

      [https://docs.exivity.com/Architecture%20concepts/Glossary#workflow](https://docs.exivity.com/Architecture%20concepts/Glossary#workflow)


      **To create a workflow**


      1. Create a workflow object
          
      2. Create a workflow schedule
          
      3. Add steps to the workflow
          

      #### The Workflow Object


      | **attribute** | **type** | **mutability** | **description** |

      | --- | --- | --- | --- |

      | name | _string_ | 📝 editable | Required |

      | description | _string_ | 📝 editable |  |

      | created_at | _datetime_ | 👁 read-only |  |

      | updated_at | _datetime_ | 👁 read-only |  |


      The following relationships can be included:


      | **relationship** | **cardinality** | **type** | **required** |

      | --- | --- | --- | --- |

      | steps | hasMany | workflowstep | ❌ |

      | schedules | hasMany | workflowschedule | ❌ |

      | runs | hasMany | workflowrun | ❌ |
  - name: Data pipelines > /workflowschedules
    description: >-
      Exivity documentation:  

      [https://docs.exivity.com/architecture%20concepts/glossary/#workflowschedule](https://docs.exivity.com/architecture%20concepts/glossary/#workflowschedule)


      Schedule how often a workflow should run.


      | **attribute** | **type** | **mutability** | **description** |

      | --- | --- | --- | --- |

      | start_time | _datetime_ | 📝 editable | Required. Earliest time workflow
      can start. |

      | timezone | _timezone_ | 📝 editable | Required. The timezone is used
      only when adjust_for_dst is set to true. If the timezone doesn't use
      daylight saving time _(i.e. (UTC) Coordinated Universal Time, (UTC+01:00)
      West Central Africa etc.)_, no changes are applied when calculating the
      next run. |

      | adjust_for_dst | _boolean_ | 📝 editable | Required.  <br>If true, and
      the timezone uses daylight saving time, the workflow run time is adjusted
      to take this into account.  <br>**Example:**  <br>\* in winter, 00:01 UTC
      means 01:01 in Berlin  <br>\* in summer, 00:01 UTC means 02:01 in Berlin |

      | frequency | _enum_ (`hourly`_,_ `daily`_,_ `monthly`) | 📝 editable |
      Required |

      | frequency_modifier | _integer_ | 📝 editable | Examples 
      <br>_**frequency**_**: daily,** _**frequency_modifier**_**: 2** - the
      workflow will run every two days  <br>  <br>_**frequency**_**: hourly,**
      _**frequency_modifier**_**: 3** - the workflow will run every three hours
      |

      | next_run | _datetime_ | 👁 read-only |  |


      The following relationships can be included:


      | **relationship** | **cardinality** | **type** | **required** |

      | --- | --- | --- | --- |

      | workflow | hasOne | workflow | ✔️ |
  - name: Data pipelines > /workflowsteps
    description: >-
      A workflow requires one or more steps. These steps are executed when a
      workflow is run.


      #### The Workflow Step Object


      | **attribute** | **type** | **mutability** | **description** |

      | --- | --- | --- | --- |

      | type | enum( `extract`, `transform`, `prepare_report`, `execute`,
      `proximity`, `publish_report`, `evaluate_budget` ) | 📝 editable |
      Workflow step type |

      | options | _required, array, values depend on_ `type` | 📝 editable |
      Each different step `type` has different options, which are documentated
      in the "Add a new ... step" sections. |

      | timeout | _integer_ | 📝 editable | In seconds, default: 3600,min:1,
      max:86400 |

      | wait | _boolean_ | 📝 editable | If false, the step will run
      simultaneously with the previous step.  <br>If true, all previous steps
      will finish executing before this steps is started. |

      | ~~sort~~ | ~~_numeric_~~ |  | _deprecated, use previous relationship
      instead_ |


      | **relationship** | **cardinality** | **type** |

      | --- | --- | --- |

      | previous | hasOne | workflowstep |
  - name: Data pipelines > /workflowruns
    description: >-
      ⚠️ **We plan to deprecate these endpoints in the next version of Exivity.
      A new** **`/jobs`** **endpoint will be added which will offer the same
      functionality.**


      Runs contain workflow status information of workflow runs.


      #### The Workflow Run Object


      | **attribute** | **type** | **mutability** |

      | --- | --- | --- |

      | start_date | _datetime_ | 👁 read-only |

      | end_date | _datetime_ | 👁 read-only |

      | status | _enum_ (`started`, `success`, `failed`, `timed_out`, `invalid`,
      `internal_error`, `killed`) | 👁 read-only |


      The following relationships can be included:


      | **relationship** | **cardinality** | **type** | **required** |

      | --- | --- | --- | --- |

      | workflow | hasOne | workflow | ✔️ |

      | steplogs | hasMany | workflowsteplog | ❌ |
  - name: Data pipelines > /workflowsteplogs
    description: >-
      ⚠️ We plan to deprecate these endpoints in the next version of Exivity. A
      new `/jobs` endpoint will be added which will offer the same
      functionality.
  - name: Profile
  - name: Profile > /notificationchannels
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/administration/notifications](https://docs.exivity.com/administration/notifications)
  - name: Profile > /notificationsubscriptions
  - name: Profile > /notifications
  - name: Administration
  - name: Administration > /users
    description: >-
      Everyone connecting to our API needs a valid user account. Users can
      change some of their details themselves.


      Users with the "manage_users" permission can view, create, edit and delete
      users on the system.


      #### The User Object


      | **attribute** | **type** | **description** |

      | --- | --- | --- |

      | id | *guid* | Unique identifier |

      | account_access_type | *in: all/custom* |  |

      | current_password | *string* | Only used when update current user |

      | display_name | *string* |  |

      | email_address | *string* | Unique email address, max 255 characters |

      | password | *string* | Min 8 characters |

      | source | *in: local/ldap/saml* |  |

      | username | *string, unique username, between 2-255 characters* |  |
  - name: Administration > /users > /users/me
  - name: Administration > /usergroups
    description: >-
      It is possible to create custom usergroups, with different permissions.
      Users can be assigned to different usergroups.


      Exivity documentation:
      [https://docs.exivity.com/administration/user-management/groups](https://docs.exivity.com/administration/user-management/groups)


      #### The Usergroup Object


      | **attribute** | **type** |

      | --- | --- |

      | name | required, string, max:255, unique |

      | permissions | array |

      | saml_provisioning | nullable, only with SAML usergroups |


      #### Permissions


      Please see the Exivity documentation for more information on specific
      permissions:
      [https://docs.exivity.com/administration/user-management/groups#user-permissions](https://docs.exivity.com/administration/user-management/groups#user-permissions)


      The following is a list of currently supported permission on our system:


      *   view_audit

      *   view_billing

      *   view_budgets

      *   view_cogs

      *   view_logs

      *   manage_accounts

      *   manage_catalogue

      *   manage_data_sources

      *   manage_datasets

      *   manage_files

      *   manage_metadata_definitions

      *   manage_reports

      *   manage_settings

      *   manage_users

      *   manage_workflows
  - name: Administration > /configuration
    description: >-
      #### Configuration Keys


      The system can be configured using these endpoints.


      | **key** | **type** | **description** |

      | --- | --- | --- |

      | APP_DEBUG | _bool, default_ `false` | Turn debug mode on/off. In debug
      more, a lot more log files are generated. Not recommended for production
      systems. |

      | APP_NAME | _string, default_ `Exivity` | The name of the application |

      | APP_ICON | string, max length: 1024 kilobytes | Inline image, encoded in
      base64 |

      | APP_LOGO | string, max length: 512 kilobytes | Inline image, encoded in
      base64 |

      | APP_FAVICON | string, max length: 5 kilobytes | Website favicon. Inline
      image, encoded in base64 |

      | APP_COLOUR | _string, default_ `#00a8d8` | Brand colour |

      | APP_CSS | _string_ | Custom CSS to use on the website |

      | APP_DOCUMENTATION | _bool, default_ `true` | Enable to show
      documentation link in the website header. |

      | APP_LANGUAGE | _string, default_ `en` |  |

      | FINGERPRINTER | _string, default_ `secure_ip_useragent` | Fingerprint
      algorithm used to verify user location matches location where token was
      generated.  <br>**secure** - checks protocals match (e.g. http/https) 
      <br>**ip** - Checks the IP addresses match.  <br>**useragent** - Checks
      the request is coming from the same user agent.  <br>Possible values:
      `secure_ip_useragent` / `secure_useragent` |

      | PUBLIC_ROOT |  | The default front-end URL clients should connect to.
      Fill out as [https://example.com](https://example.com). |

      | SSO_LOGIN_METHOD | _in: local_user_or_ldap, local_user_only,
      local_user_or_saml, saml_only, local_user_or_ldap_or_saml**Default_
      `local_user_or_ldap` |  |

      | USE_LOCAL_STORAGE |  |  |

      | ANALYTICS |  |  |

      | ANALYTICS_EXTRA_PROPERTY |  |  |

      | ERROR_TRACKING |  | Enabling this option will report anonymous error
      metrics so we can make our product better. |

      | BETA_FEATURES |  |  |

      | USE_CACHE |  |  |

      | CURRENCY | _string, default:_ `EUR` |  |

      | CURRENCY_FORMAT | _string, default:_ `€` |  |

      | DECIMAL_SEPARATOR | _string, default:_ `.` |  |

      | CSV_DELIMITER | _in:_ `,`, `;`, `:`, `\t`, pipe  <br>_Default_: `,` |
      Field delimiter for CSV exports |

      | CSV_DECIMAL_SEPARATOR | _in:_ `,`, `.`  <br>_Default:_ `.` | Decimal
      separator for CSV exports |

      | THOUSAND_SEPARATOR | _nullable, in:_ `,`, `.`, `'` or space 
      <br>_Default:_ `,` |  |

      | RATE_PRECISION | _int, default:_ `8` | Precision for rates as displayed
      on the summary report. |

      | REPORT_PRECISION | _int, default:_ `2` | Precision for currency amounts
      displayed on reports other than summaries. |

      | SUMMARY_PRECISION | _int, default:_ `2` | Precision for currency amounts
      displayed on the summary report. |

      | QUANTITY_PRECISION | _int, default:_ `6` |  |

      | PERCENTAGE_PRECISION | _int, default:_ `2` |  |

      | DATE_FORMAT | _string, default:_ `dd-MM-yyyy` |
      [https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table)
      |

      | SUMMARY_TITLE | _string, default_ `Summary` |  |

      | SUMMARY_ADDRESS |  |  |

      | SUMMARY_IMAGE |  |  |

      | SUMMARY_EXTRA |  |  |

      | SUMMARY_MIN_COMMIT | _string, default_ `Uplift for minimum commitment of
      {quantity} {label}` | Used as line item description for minimum commit
      uplifts. The identifier `{quantity}` will be replaced with the minimum
      commitment quantity, and `{label}` will be replaced with the unit label. |

      | GRAPH_MAX_SERIES | _int, default_ `15` |  |

      | REPORT_START_MONTH | _int, default_ `1` |  |

      | DISCLAIMER_ENABLED | _bool, default_ `false` | Show disclaimer as a page
      overlay once to new users. Users will only be allowed to continue to the
      app if they agree with the disclaimer text. |

      | DISCLAIMER_TITLE | _string, default_ `Disclaimer` | Title shown in the
      disclaimer overlay. |

      | DISCLAIMER_TEXT | _string_ | Main disclaimer text shown in the
      disclaimer overlay. Markdown is supported. |

      | DISCLAIMER_AGREE_BUTTON_TEXT | _string, default_ `I agree` | Button text
      shown in the disclaimer overlay which users have to click in order to
      continue to the app. |

      | TOKEN_TTL | _string, default_ `4 hours` | Token lifetime - Set the token
      expiration time interval. Users will have to login again after their token
      expires. |

      | ALLOW_PERSISTENT_TOKENS | _bool, default_ `false` | Allow users to
      remain logged in for duration of the token lifetime. |

      | PASSWORD_POLICY | _in: length, length_dictionary,
      length_dictionary_entropy.**Default_ `length_dictionary` | `length` - min
      8 characters long  <br>`dictionary` - does not allow comon dictionary
      words.  <br>`entropy` - the [Shannon
      Entropy](https://en.wikipedia.org/wiki/Entropy_(information_theory)) of
      the characters must be greater than 3.5 |

      | MAX_LOGIN_ATTEMPTS | _int, default_ `5` |  |

      | LOGIN_ATTEMPTS_INTERVAL | _string_ | If null, there's no limit,
      otherwise, `15 minutes`, `1 hour`, `2 hours`, `30 minutes`, etc. |

      | BLOCK_LOGIN_DURATION | _string, default_ `15 minutes` | `15 minutes`, `1
      hour`, `2 hours`, `30 minutes`, etc. |
  - name: Administration > /audit
  - name: Administration > /log
    description: >-
      Exivity offers the possibility to get insight into the log files of
      different components. This feature enables the users to identify any
      potential errors on their own, making the overall troubleshooting process
      smoother.


      Exivity documentation:
      [https://docs.exivity.com/troubleshooting/logs](https://docs.exivity.com/troubleshooting/logs)
  - name: Administration > /dump
  - name: Administration > /system
  - name: Administration > /system > /licence
  - name: Administration > /system > /cache
  - name: Administration > /system > /saml
  - name: Administration > /system > /services
  - name: Administration > /translations
    description: >-
      ⚠️ The translations feature is deprecated and not used anymore in new
      releases. The GUI is now available in several languages (beta feature). We
      may add similar functionality in the future, to allow editing some
      terminology used in the GUI.
  - name: Administration > /environments
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/data-pipelines/transform/language/environment](https://docs.exivity.com/data-pipelines/transform/language/environment)
  - name: Administration > /variables
    description: >-
      Exivity documentation:
      [https://docs.exivity.com/administration/settings/global-variables](https://docs.exivity.com/administration/settings/global-variables)
  - name: Administration > /failed-jobs
paths:
  /:
    get:
      tags:
        - General
      summary: Power-on self-test
      description: >-
        A simple test to check the system is set up correctly. If all is well,
        this request should return a simple HTML page with a link to the API
        documentation.


        It is also possible to ask for a JSON response, using the `Accept:
        application/json` header.


        This will return a 204 response if all is good, or a 500 error with a
        JSON error message if something is not correct.


        In debug mode, this will also contain a `meta` field, listing the area
        where the problem is.
      security:
        - noauthAuth: []
      responses:
        '200':
          description: OK
          headers:
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Type:
              schema:
                type: string
                example: text/html; charset=UTF-8
            Date:
              schema:
                type: string
                example: Mon, 05 Mar 2018 19:06:06 GMT
            Server:
              schema:
                type: string
                example: nginx/1.13.5
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            text/plain:
              schema:
                type: string
              example: |-
                <!doctype html>
                <html lang="en">
                <head>
                    <meta charset="utf-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1">
                    <link rel="icon" type="image/png" href="favicon.png">
                    <title>Exivity</title>
                    <style>
                        body {
                            margin: 0;
                            padding: 2rem;
                            font-family: sans-serif;
                            font-size: 100%;
                            background-color: #ffffff;
                            color: #333;
                            text-align: center;
                        }

                        h1 {
                            font-size: 5rem;
                        }

                        pre {
                            display: inline-block;
                            text-align: center;
                        }

                        a {
                            color: black;
                        }

                        .setup {
                            position: absolute;
                            top: 0;
                            right: 0;
                            width: 100%;
                            height: 100%;
                        }
                    </style>
                </head>
                <body>

                <h1><img src="favicon.png" style="height: 1em;"/></h1>

                <pre>
                Exivity API
                <a href="https://api.exivity.com">api reference</a>
                </pre>

                <script>
                    var url = atob('aHR0cHM6Ly9mdGhtYi50cW4uY29tLzBNVTh1b3lNSTZac1MyWkhlYkt2YWNkQmszcz0vMTkyMHgxMDgwL2ZpbHRlcnM6ZmlsbChhdXRvLDEpL2Fib3V0L2Jpb3Mtc2V0dXAtdXRpbGl0eS01N2ZlNjNkYjNkZjc4Y2JjMjg2MDA5YzEuanBn');
                    var img = document.createElement("img");
                    img.className = 'setup';
                    img.src = url;
                    document.onkeyup = function (e) {
                        e = e || window.event;
                        if (e.keyCode === 46)
                            document.body.appendChild(img);
                    };
                </script>

                </body>
                </html>
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 09 Jan 2023 13:27:44 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X7574be9668bd804d63540673a3778baa
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X7574be9668bd804d63540673a3778baa
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-GcXPDxDVPvlZVzRg6hxq4YsvDMi65YWb';style-src 'self'
                  'nonce-GcXPDxDVPvlZVzRg6hxq4YsvDMi65YWb';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: bec46c98-d7be-43ea-8b60-372572c423d1
            Set-Cookie:
              schema:
                type: string
                example: >-
                  bIEYZP21mqjNDnAgsTe1sk4ETsxk3zeqbQhkGJpz=eyJpdiI6IldvbTViajNJNEFXVTdlUFR2NFI1L2c9PSIsInZhbHVlIjoiUVlIcEdUY0FTc0J5R2wxZ3djc3JjN2hDSmd6TTQ2NGFUYkE3QXp6ZU5PdnZvdHMwT1dJRUtEZ1J4Z1MxMWxEVlN5eWd0WW9IcVJQQTBmRWNtMXRzT3Z4RUpGOUtlZG9qNHArR0RBZzk1dWNxSkk5c2V3RXhFakZibkVWQVZZcWxuaFJvRlhnR3lJc0l5ZFdiNHZaZTRLMU1CejBjcVJiSDRqT3NxcHd0OHVhK29hWjBmeko4UmpMamR5bTFVYytQOTVvVVcrK1JCTDU4YVFYNzZlNXJjMHFqOURndjVId21uVURqallodEZOZlBzSndLZmEydjJNRUM0WnlyVzlXc3hhbUFJRE1QYmhCaUhUTnNmY3pDZXFzNFVVRDFzNk1wMzlVYjFjdUQ3d3dhaTJaUCtTeVZ4YUFSOG45bVhjWEZvMUlRRG5SZDh0NUxOcjhBeVYrbk5iOXFnMHVvV0xrTlJnWm84UlZDRndJPSIsIm1hYyI6IjdmMDVjZTVhMmJjOTU3YmNmODczNzcwMzUyMDU0MmMyNmUxY2RkNDc5YWQ1MmExNmJhZDcxMTcwNTQzODNlYmYiLCJ0YWciOiIifQ%3D%3D;
                  expires=Mon, 09 Jan 2023 15:27:44 GMT; Max-Age=7200; path=/;
                  httponly; samesite=lax
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 09 Jan 2023 13:21:50 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X091fff584dd0837c66e0d8e945feabc9
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X091fff584dd0837c66e0d8e945feabc9
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-p8Dp4cU467ZKsv1akFNtUEwVyHEgfkjx';style-src 'self'
                  'nonce-p8Dp4cU467ZKsv1akFNtUEwVyHEgfkjx';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 8f28487f-effe-4485-8ceb-f0c3948b0932
            Set-Cookie:
              schema:
                type: string
                example: >-
                  bIEYZP21mqjNDnAgsTe1sk4ETsxk3zeqbQhkGJpz=eyJpdiI6IkkrU1B6NkpSdHZvN2JnTE9TTytJTnc9PSIsInZhbHVlIjoicHEwb0xOU3Fua2paYncxMXlUQjlBTnE5cENHd3R2MS90aDdqakhjNnl5dDlQYTM5REIwNVBleUNxNzU4Qjd0dms2TDJKTS9iN0g2L0I1MGUycFVlcVlkOWhhaU10a0toWW1Ja055ckZrbWwzTjNMUWZBN0hHVy85WDBqSitqaS9seDFaNWFTNVpIT2Z5OHdjckRndC9CN0dGbXdBRWNKNmI3ZXE5OXdIeFY4YXkvT2h2R1o0b2RJdzVLYmdwMHdWZWJuWGdtY1JLZE9pOURRcFZYMmtBODJoQ2FMMG0wSzhjZmJLbEdIbUFQRmdCODdtd0kwZzcvbTdGZDFZQ0oyU0FlUzhSeXJPTnY5c0swZEVueHoxL1dCVkpsWmd5UlBlQTNHNXRUSXVncDZPZU1kWUNzM2xFZTNyS2NWUURhM1FyclRFU0c1elZvK3BPM21XdE5Rb2JvbUlKOExzTncwbDNtS3lERkorSmFZPSIsIm1hYyI6ImFhZjlhMDA1MmRjM2EwODdjMTEzMmIyYzA4YjJmNGIxMmQxZjVhNjA1ZGQ1ZWE2NzFkYzg2YTE1ZTc3OWUzODMiLCJ0YWciOiIifQ%3D%3D;
                  expires=Mon, 09 Jan 2023 15:21:50 GMT; Max-Age=7200; path=/;
                  httponly; samesite=lax
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  '0':
                    status: 500
                    title: InternalException
                    detail: >-
                      There appears to be a problem with the system set-up.
                      Please check the log files for more information.
                  meta:
                    postgres: true
                    environment: false
                    home_dir: true
                    program_dir: true
  /v1/auth/token:
    post:
      tags:
        - Authentication > /token
      summary: Generate token
      description: Generate a new JWT authentication token.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: string
                  example: '{{username}}'
                password:
                  type: string
                  description: string
                  example: '{{password}}'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.17.4
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.3.10
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Wed, 18 Dec 2019 15:00:14 GMT
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                token: >-
                  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NzY2ODEyMTMsImV4cCI6MTU3NzI4NjAxMywidXNlciI6IjVmNDg1NzU1LTFiZTItNDBjNS05ZGIwLWFmZTcxMDFlOTg0OSJ9.az7bIkGHzmKN0rJzNvRBwmCApyxytly4jiC5igtzeH4
                user:
                  id: 5f485755-1be2-40c5-9db0-afe7101e9849
                  username: admin
                  email_address: somebody@example.com
                  account_access_type: '1'
                  source: local
                permissions:
                  - '*'
    patch:
      tags:
        - Authentication > /token
      summary: Refresh token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 13:15:33 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X757c37d4a2946abcf6494169d55c2f18
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X757c37d4a2946abcf6494169d55c2f18
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-69WXbqhdNLZ0fKilJnTktWxDdMHIm93e';style-src 'self'
                  'nonce-69WXbqhdNLZ0fKilJnTktWxDdMHIm93e';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 74cb7eb3-6ff2-45c2-86e2-3c26b3f87ff2
          content:
            application/json:
              schema:
                type: object
              example:
                token: >-
                  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2NDM2MzQ5MzMsImV4cCI6MTY0MzY0OTMzMywidXNlciI6ImU3N2UzZjkwLTY3NjQtNGM2NS05NTIxLWRhNzBjYzkwMDFhOCIsImZpbmdlcnByaW50IjoiZTE2NjIzYmU4YmYxNjhhYjYyYmRkNWFjZTVmYWU5ODNjNjdhNjZkYSJ9.b3kVFuWumyvtfhan9bP7nguQaZ9g3B2ra1O0UtBnQsE
                user:
                  id: e77e3f90-6764-4c65-9521-da70cc9001a8
                  username: admin
                  email_address: somebody@example.com
                  account_access_type: all
                  source: local
                  display_name: admin
                permissions:
                  - '*'
    delete:
      tags:
        - Authentication > /token
      summary: Revoke token
      description: >-
        On success, a `HTTP 204 No Content` success status response will be
        returned.


        ⚠️ Available since v3.0.0
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 14:06:35 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X0e9d312509bc68d6c95f0bc048d4e5a7
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-zNqUj6Ll5GNyUIITJOa14aHiK61lvZzn';style-src 'self'
                  'nonce-zNqUj6Ll5GNyUIITJOa14aHiK61lvZzn';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: c6f38885-93a3-41b6-9037-de99639dcad3
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/auth/saml/login:
    get:
      tags:
        - Authentication > /saml
      summary: Initiate SAML login request
      description: >-
        Redirects to SAML Identity Provider SSO URL set in the SAML
        configuration. After a successful authentication (possibly interactive),
        it will redirect back to this APIs ACS endpoint.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: return_url
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/auth/saml/logout:
    get:
      tags:
        - Authentication > /saml
      summary: Initiate SAML logout request
      description: >-
        Redirects to SAML Identity Provider SLO URL set in the SAML
        configuration. After the user has been logged out, it will redirect back
        to this APIs SLS endpoint.
      parameters:
        - name: return_url
          in: query
          schema:
            type: string
          description: >-
            Glass URL to return to after logging out. If not specified, inferred
            from Referer header.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/auth/saml/metadata:
    get:
      tags:
        - Authentication > /saml
      summary: Entity ID endpoint
      description: >-
        Metadata about the SAML Service Provider instance will be published at
        this URL.
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/auth/saml/acs:
    post:
      tags:
        - Authentication > /saml
      summary: ACS endpoint
      description: >-
        Assertion Consumer Service. If the received response from the SAML
        Identity Provider is valid, redirects to the Exivity dashboard.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/auth/saml/sls:
    get:
      tags:
        - Authentication > /saml
      summary: SLS endpoint
      description: >-
        Single Logout Service. If the received response from the SAML Identity
        Provider is valid, redirects back to the login screen of Exivity.
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/auth/resetpassword:
    post:
      tags:
        - Authentication > /resetpassword
      summary: Request a password reset
      description: >-
        This request required an email address. It checks that it is valid in
        our system and they email the user a reset token.


        On success, a `HTTP 204 No Content` success status response will be
        returned.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"email_address\": \"somebody@example.com\"\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 15:17:06 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X9864258680cd12b5a15887acf40e19bf
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X9864258680cd12b5a15887acf40e19bf
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-ZCZYDDSg2AV60LgFq6dt0mW9JDAOiLvZ';style-src 'self'
                  'nonce-ZCZYDDSg2AV60LgFq6dt0mW9JDAOiLvZ';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: f941e0e5-ae11-4441-ac49-a8e057dbf1e1
          content:
            text/plain:
              schema:
                type: string
              example: null
    put:
      tags:
        - Authentication > /resetpassword
      summary: Perform a password reset
      description: >-
        This request validates the reset token and username, and then resets a
        users password.


        On success, a `HTTP 204 No Content` success status response will be
        returned.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"token\": \"{{reset_token}}\",\n\t\"username\":
                \"{{username}}\",\n\t\"password\":
                \"{{password}}\",\n\t\"password_confirmation\":
                \"{{password_confirmation}}\"\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/auth/ping:
    get:
      tags:
        - Authentication
      summary: Play pong
      description: >-
        Test authentication is working correctly. If should reply with `pong` if
        all is correct.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 15:34:10 GMT
            Connection:
              schema:
                type: string
                example: close
            Content-Type:
              schema:
                type: string
                example: text/html; charset=UTF-8
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X4e4707e0221c8d8ad7d667c6b49a19bd
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-IZoE9TZlXZ9rH49bIixPxpIUWvnXIUao';style-src 'self'
                  'nonce-IZoE9TZlXZ9rH49bIixPxpIUWvnXIUao';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 2967fc21-90f9-448d-818c-df24cfb75ced
          content:
            text/plain:
              schema:
                type: string
              example: pong
  /v1/reports:
    get:
      tags:
        - Reports > /reports
      summary: Retrieve a list of report definitions
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: >-
            Optionally [filter](#working-with-the-api) results by this
            attribute.
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `accounts`,
            `metadatadefinitions`, `dset`, `budgets`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 02 Jan 2023 10:01:10 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xfae34b907e37d3f28c0a737e04000e0e
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-CdGzsTmhEidwgF3fLxwZUc7aDSu29pOI';style-src 'self'
                  'nonce-CdGzsTmhEidwgF3fLxwZUc7aDSu29pOI';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: eadeb6c1-a4a8-4c89-a30b-079d35abc24b
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: report
                    id: '1'
                    attributes:
                      name: test
                      dset: test.usage
                      created: '2023-01-02T09:43:13Z'
                      last_updated: '2023-01-02T09:43:13Z'
                      lvl1_key_col: Reseller
                      lvl1_name_col: Reseller
                      lvl1_label: Reseller
                      lvl1_metadata_definition_id: null
                      lvl2_key_col: Customer
                      lvl2_name_col: Customer
                      lvl2_label: Customer
                      lvl2_metadata_definition_id: null
                      lvl3_key_col: Region
                      lvl3_name_col: Region
                      lvl3_label: Region
                      lvl3_metadata_definition_id: null
                      lvl4_key_col: Department
                      lvl4_name_col: Department
                      lvl4_label: Department
                      lvl4_metadata_definition_id: null
                      lvl5_key_col: UniqueID
                      lvl5_name_col: UniqueID
                      lvl5_label: UniqueID
                      lvl5_metadata_definition_id: null
                      depth: 5
                      data_status:
                        first_date: '2017-08-25'
                        last_date: '2017-08-27'
                        missing: 0
                        errors: 0
                        status:
                          - date: '2017-08-25'
                            missing: false
                            column_status: ok
                            account_sync: true
                            prepared: false
                          - date: '2017-08-26'
                            missing: false
                            column_status: ok
                            account_sync: true
                            prepared: false
                          - date: '2017-08-27'
                            missing: false
                            column_status: ok
                            account_sync: true
                            prepared: false
                    links:
                      self: http://localhost:8012/v1/reports/1
                    relationships:
                      accounts:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/1/relationships/accounts
                          related: http://localhost:8012/v1/reports/1/accounts
                      metadatadefinitions:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/1/relationships/metadatadefinitions
                          related: >-
                            http://localhost:8012/v1/reports/1/metadatadefinitions
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/1/relationships/dset
                          related: http://localhost:8012/v1/reports/1/dset
                      budgets:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/1/relationships/budgets
                          related: http://localhost:8012/v1/reports/1/budgets
                  - type: report
                    id: '3'
                    attributes:
                      name: Test report - 200
                      dset: test.usage
                      created: '2023-01-02T09:44:47Z'
                      last_updated: '2023-01-02T09:44:47Z'
                      lvl1_key_col: Country
                      lvl1_name_col: Country
                      lvl1_label: Country
                      lvl1_metadata_definition_id: null
                      lvl2_key_col: Reseller
                      lvl2_name_col: Reseller
                      lvl2_label: Reseller
                      lvl2_metadata_definition_id: null
                      lvl3_key_col: ''
                      lvl3_name_col: ''
                      lvl3_label: ''
                      lvl3_metadata_definition_id: null
                      lvl4_key_col: ''
                      lvl4_name_col: ''
                      lvl4_label: ''
                      lvl4_metadata_definition_id: null
                      lvl5_key_col: ''
                      lvl5_name_col: ''
                      lvl5_label: ''
                      lvl5_metadata_definition_id: null
                      depth: 2
                      data_status:
                        first_date: '2017-08-25'
                        last_date: '2017-08-27'
                        missing: 0
                        errors: 0
                        status:
                          - date: '2017-08-25'
                            missing: false
                            column_status: unknown
                            account_sync: false
                            prepared: false
                          - date: '2017-08-26'
                            missing: false
                            column_status: unknown
                            account_sync: false
                            prepared: false
                          - date: '2017-08-27'
                            missing: false
                            column_status: unknown
                            account_sync: false
                            prepared: false
                    links:
                      self: http://localhost:8012/v1/reports/3
                    relationships:
                      accounts:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/3/relationships/accounts
                          related: http://localhost:8012/v1/reports/3/accounts
                      metadatadefinitions:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/3/relationships/metadatadefinitions
                          related: >-
                            http://localhost:8012/v1/reports/3/metadatadefinitions
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/3/relationships/dset
                          related: http://localhost:8012/v1/reports/3/dset
                      budgets:
                        links:
                          self: >-
                            http://localhost:8012/v1/reports/3/relationships/budgets
                          related: http://localhost:8012/v1/reports/3/budgets
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    http://localhost:8012/v1/reports?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    http://localhost:8012/v1/reports?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  last: >-
                    http://localhost:8012/v1/reports?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
    post:
      tags:
        - Reports > /reports
      summary: Add a new report definition
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"report\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"name\": \"Test
                report - {{$randomInt}}\",\r\n\t\t\t\"dset\":
                \"{{dset_id}}\",\r\n\t\t\t\"lvl1_key_col\":
                \"Customer\",\r\n            \"lvl1_name_col\":
                \"Customer\",\r\n            \"lvl1_label\":
                \"Customer\",\r\n            \"lvl2_key_col\":
                \"Reseller\",\r\n            \"lvl2_name_col\":
                \"Reseller\",\r\n            \"lvl3_label\":
                \"Reseller\"\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 15:59:50 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Report/Reports
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X460c10da27ee94e5a7c65b3d7cacd2e5
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-MWxh2sCSlVT2YH9cWmKOd1zmGAxrM3Iw';style-src 'self'
                  'nonce-MWxh2sCSlVT2YH9cWmKOd1zmGAxrM3Iw';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 7d533138-6309-4f22-a6e5-b3c4123d026a
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: report
                  id: '3'
                  attributes:
                    name: Test report - 25
                    dset: test.usage
                    created: '2022-01-31T15:59:49Z'
                    last_updated: '2022-01-31T15:59:49Z'
                    lvl1_key_col: Customer
                    lvl1_name_col: Customer
                    lvl1_label: Customer
                    lvl1_metadata_definition_id: null
                    lvl2_key_col: Reseller
                    lvl2_name_col: Reseller
                    lvl2_label: ''
                    lvl2_metadata_definition_id: null
                    lvl3_key_col: ''
                    lvl3_name_col: ''
                    lvl3_label: Reseller
                    lvl3_metadata_definition_id: null
                    lvl4_key_col: ''
                    lvl4_name_col: ''
                    lvl4_label: ''
                    lvl4_metadata_definition_id: null
                    lvl5_key_col: ''
                    lvl5_name_col: ''
                    lvl5_label: ''
                    lvl5_metadata_definition_id: null
                    depth: 2
                    data_status: []
                  links:
                    self: http://localhost:8012/v1/reports/3
                  relationships:
                    accounts:
                      links:
                        self: >-
                          http://localhost:8012/v1/reports/3/relationships/accounts
                        related: http://localhost:8012/v1/reports/3/accounts
                    metadatadefinitions:
                      links:
                        self: >-
                          http://localhost:8012/v1/reports/3/relationships/metadatadefinitions
                        related: http://localhost:8012/v1/reports/3/metadatadefinitions
                    dset:
                      links:
                        self: http://localhost:8012/v1/reports/3/relationships/dset
                        related: http://localhost:8012/v1/reports/3/dset
                    budgets:
                      links:
                        self: >-
                          http://localhost:8012/v1/reports/3/relationships/budgets
                        related: http://localhost:8012/v1/reports/3/budgets
  /v1/reports/{report_id}:
    get:
      tags:
        - Reports > /reports
      summary: Retrieve a report definition
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: report_id
          in: path
          schema:
            type: string
          required: true
          description: Report ID
          example: '{{report_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Reports > /reports
      summary: Update a report definition
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\": \"report\",\r\n\t\t\"id\":
                \"{{report_id}}\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"name\":
                \"Modified test report\"\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: report_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Reports > /reports
      summary: Delete a report definition
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: report_id
          in: path
          schema:
            type: string
          required: true
          example: '{{report_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 16:58:47 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xa750375a3d42705bf30ac7841176a88c
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-CwFMA0e3udnEBkZWcEFOtVHR0pyZmkiy';style-src 'self'
                  'nonce-CwFMA0e3udnEBkZWcEFOtVHR0pyZmkiy';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 7e5cf6f9-e388-4377-aa04-457a9568bf0e
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/reports/{report_id}/prepare:
    patch:
      tags:
        - Reports > /reports
      summary: Prepare a report
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            The start of the date range (inclusive) you want to prepare the
            report for in `YYYY-MM-DD` format.
          example: '{{start}}'
        - name: end
          in: query
          schema:
            type: string
          description: >-
            The end of the date range (inclusive) you want to prepare the report
            for in `YYYY-MM-DD` format.
          example: '{{end}}'
        - name: report_id
          in: path
          schema:
            type: string
          required: true
          example: '{{report_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/reports/{report_id}/run:
    get:
      tags:
        - Reports > /reports
      summary: Run a report
      description: >-
        ⚠️ The `filter[parent_account_id]` is deprecated. Please use
        `filter[account_id]` instead.


        The output format when either `json` or `csv` is selected as the
        `format` parameter:


        | attribute | type | description |

        | --- | --- | --- |

        | rate_id | _string_ | Key for the applicable rate |

        | service_id | _string_ | Key for the applicable service, only when
        `services` is included in the `dimension` parameter |

        | servicecategory_id | _string_ | Key for the applicable service
        category, only when `services` is included in the `dimension` parameter
        |

        | account_id | _string_ | Key for the applicable account, only when
        `accounts` is included in the `dimension` parameter |

        | instance_value | _string_ | Unique identifier for the applicable
        instance, only when `instances` is included in the `dimension` parameter
        |

        | day | _string_ | The day in `YYYYMMDD` format, only when the
        `timeline` parameter is set to `day` |

        | month | _string_ | The month in `YYYYMM` format, only when the
        `timeline` parameter is set to `month` |

        | subtotal_quantity | _float_ | Quantity before adjustments and mininum
        commit are applied |

        | min_commit_delta_quantity | _float_ | Difference in quantity based on
        applying minimum commit, only populated when `instances` is not included
        in the `dimension` parameter |

        | total_quantity | _float_ | Quantity after adjustments and mininum
        commit are applied. If `instances` is included in the `dimension`
        parameter, equal to _subtotal_quantity_. |

        | unit_based_subtotal_charge | _float_ | Fraction of charge based on a
        per unit rate, before adjustments and mininum commit are applied |

        | interval_based_subtotal_charge | _float_ | Fraction of charge based on
        a per interval rate, before adjustments and mininum commit are applied |

        | avg_unit_based_rate | _float_ | Average per unit rate |

        | subtotal_charge | _float_ | Charge (same as
        `unit_based_subtotal_charge + interval_based_subtotal_charge`) before
        adjustments and mininum commit are applied |

        | min_commit_delta_charge | _float_ | Difference in charge based on
        applying minimum commit, only populated when `instances` is not included
        in the `dimension` parameter |

        | total_charge | _float_ | Charge after adjustments and mininum commit
        are applied. If `instances` is included in the `dimension` parameter,
        equal to _subtotal_charge_. |

        | total_cogs | _float_ | COGS, only if user permissions includes
        `VIEW_COGS` |

        | total_net | _float_ | Net (same as `total_charge - total_cogs`), only
        if user permissions includes `VIEW_COGS` |

        | account_key | _string_ | Key for the applicable account, only when
        `accounts` is included in the `dimension` parameter and `account_key` is
        included in the `include` parameter |

        | account_name | _string_ | Name for the applicable account, only when
        `accounts` is included in the `dimension` parameter and `account_name`
        is included in the `include` parameter |

        | service_key | _string_ | Key for the applicable service, only when
        `services` is included in the `dimension` parameter and `service_key` is
        included in the `include` parameter |

        | service_description | _string_ | Description for the applicable
        service, only when `services` is included in the `dimension` parameter
        and `service_description` is included in the `include` parameter |

        | servicecategory_name | _string_ | Name for the applicable service
        category, only when `services` is included in the `dimension` parameter
        and `servicecategory_name` is included in the `include` parameter |

        | start_date | _string_ | The start of the date range (inclusive), only
        when `start_date` is included in the `include` parameter |

        | end_date | _string_ | The end of the date range (inclusive), only when
        `end_date` is included in the `include` parameter |

        | adjustment_name | _string_ | Comma-separated list of the names of
        applicable adjustments, only when `adjustment_name` is included in the
        `include` parameter |

        | adjustments | _array_ | Adjustments data (see below), only populated
        when `instances` is not included in the `dimension` parameter |

        | breakdown | _object_ | Daily breakdown data of consumed instance
        quantities which are charged monthly (see below), only populated when
        `instances` is included in the `dimension` parameter |

        | tier_breakdown | _array_ | Tier breakdown data (see below) |


        The output format of the embedded adjustments data:


        | attribute | type | description |

        | --- | --- | --- |

        | id | _integer_ | Key for the applicable adjustment |

        | charge | _float_ | Difference in quantity based on applying this
        adjustment |

        | quantity | _float_ | Difference in charge based on applying this
        adjustment |


        The output format of the embedded daily breakdown data:


        | attribute | type | description |

        | --- | --- | --- |

        | date _(object keys)_ | _string_ | Usage date |

        | quantity _(object values)_ | _string_ | Usage quantity |


        The output format of the embedded tier breakdown data:


        | attribute | type | description |

        | --- | --- | --- |

        | id | _integer_ | Key for the applicable rate tier |

        | quantity | _float_ | Quantity in this rate tier |

        | charge | _float_ | Charge for this rate tier |

        | cogs | _float_ | COGS for this rate tier |
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            The start of the date range (inclusive) you want to run the report
            for in `yyyy-mm-dd` format. Defaults to the current date.
          example: '{{start}}'
        - name: end
          in: query
          schema:
            type: string
          description: >-
            The end of the date range (inclusive) you want to run the report for
            in `yyyy-mm-dd` format. Defaults to the current date.
          example: '{{end}}'
        - name: dimension
          in: query
          schema:
            type: string
          description: >-
            The dimension you want to include in the output. One of `accounts`,
            `services` or `instances` (or a combination of those as a comma
            separated list). Defaults to `accounts,services`. When `instances`
            is included, price and quantity adjustments and minimum commit are
            not reflected in the data.
        - name: timeline
          in: query
          schema:
            type: string
          description: One of `day`, `month` or `none`. Defaults to `day`.
        - name: depth
          in: query
          schema:
            type: string
          description: >-
            The depth in the report definition you want to report on. Defaults
            to 1.
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Optionally specify a list of extra fields you want to output with
            the results. Possible fields are `account_key`, `account_name`,
            `service_key`, `service_description`, `servicecategory_name`,
            `start_date`, `end_date`, `adjustment_name` (or a combination of
            those as a comma separated list). The account and service fields are
            only available if their respective dimension is included in the
            request.
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: >-
            Optionally filter the output by the supplied field. Possible fields
            are `account_id`, `parent_account_id`, `service_id`,
            `servicecategory_id`, `instance`. This parameter can occur multiple
            times in a request to filter by multiple fields.
        - name: format
          in: query
          schema:
            type: string
          description: One of `json`, `csv` or `pdf/summary`. Default to `json`.
        - name: precision
          in: query
          schema:
            type: string
          description: >-
            Specify `highest` to get raw precision, use configuration otherwise.
            Defaults to `configuration`.
        - name: progress
          in: query
          schema:
            type: string
          description: >-
            When set to `1` and format is `json`, results will be streamed with
            progress indicator in response body. When format is `csv`, results
            are always streamed without progress indicator, `pdf/ínvoice` is
            never streamed. Defaults to `1`.
        - name: csv_delimiter
          in: query
          schema:
            type: string
          description: >-
            The CSV delimiter to use. Only applicable when `format` is set to
            `csv`. Possible values: `,`, `;`, `:`, `\t`, `|`. Leave blank to use
            configuration.
        - name: csv_decimal_separator
          in: query
          schema:
            type: string
          description: >-
            The decimal separator to use. Only applicable when `format` is set
            to `csv`. Possible values: `,`, `.`. Leave blank to use
            configuration.
        - name: summary_options
          in: query
          schema:
            type: string
          description: >-
            List of options for the pdf/summary format, in a comma seperated
            list. Possible options: `consolidated`, `accounts`, `services`,
            `instances_by_instance` and `instances_by_service`. Defaults to
            `services`.
        - name: report_id
          in: path
          schema:
            type: string
          required: true
          description: ID of report to run
          example: '{{report_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 09 Oct 2023 08:28:48 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X126a7fdd74fff7f092bd0d9414b05159
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X126a7fdd74fff7f092bd0d9414b05159
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-47VAq3vYoEQfUgzAPB5sphguIfMzipJB';style-src 'self'
                  'nonce-47VAq3vYoEQfUgzAPB5sphguIfMzipJB';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 14a0cfad-632d-40d9-b57e-9d249b302f18
          content:
            application/json:
              schema:
                type: object
              example:
                report:
                  - rate_id: null
                    subtotal_quantity: '13.000000'
                    total_quantity: '13.000000'
                    unit_based_subtotal_charge: '32.50'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '32.50'
                    total_charge: '32.50'
                    total_cogs: '28.60'
                    total_net: '3.90'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.50000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '1'
                    service_id: '71'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '6.000000'
                    total_quantity: '6.000000'
                    unit_based_subtotal_charge: '7.20'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '7.20'
                    total_charge: '7.20'
                    total_cogs: '4.80'
                    total_net: '2.40'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '1.20000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '1'
                    service_id: '72'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '116.000000'
                    total_quantity: '116.000000'
                    unit_based_subtotal_charge: '1985.04'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '1985.04'
                    total_charge: '1985.04'
                    total_cogs: '1600.80'
                    total_net: '384.24'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '17.11240000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '1'
                    service_id: '73'
                    servicecategory_id: '54'
                  - rate_id: null
                    subtotal_quantity: '120.000000'
                    total_quantity: '120.000000'
                    unit_based_subtotal_charge: '240.04'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '240.04'
                    total_charge: '240.04'
                    total_cogs: '120.02'
                    total_net: '120.01'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.00030000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '1'
                    service_id: '74'
                    servicecategory_id: '54'
                  - rate_id: null
                    subtotal_quantity: '3.111100'
                    total_quantity: '3.111100'
                    unit_based_subtotal_charge: '7.78'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '7.78'
                    total_charge: '7.78'
                    total_cogs: '6.84'
                    total_net: '0.93'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.50000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '2'
                    service_id: '71'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '1.999900'
                    total_quantity: '1.999900'
                    unit_based_subtotal_charge: '2.40'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '2.40'
                    total_charge: '2.40'
                    total_cogs: '1.60'
                    total_net: '0.80'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '1.20000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '2'
                    service_id: '72'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '10.100000'
                    total_quantity: '10.100000'
                    unit_based_subtotal_charge: '14.81'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '14.81'
                    total_charge: '14.81'
                    total_cogs: '112.21'
                    total_net: '-97.40'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '1.46612903'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170825'
                    account_id: '2'
                    service_id: '75'
                    servicecategory_id: '55'
                  - rate_id: null
                    subtotal_quantity: '13.000000'
                    total_quantity: '13.000000'
                    unit_based_subtotal_charge: '32.50'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '32.50'
                    total_charge: '32.50'
                    total_cogs: '28.60'
                    total_net: '3.90'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.50000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170826'
                    account_id: '1'
                    service_id: '71'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '116.000000'
                    total_quantity: '116.000000'
                    unit_based_subtotal_charge: '1996.77'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '1996.77'
                    total_charge: '1996.77'
                    total_cogs: '1612.43'
                    total_net: '384.33'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '17.21350000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170826'
                    account_id: '1'
                    service_id: '73'
                    servicecategory_id: '54'
                  - rate_id: null
                    subtotal_quantity: '119.798000'
                    total_quantity: '119.798000'
                    unit_based_subtotal_charge: '239.63'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '239.63'
                    total_charge: '239.63'
                    total_cogs: '119.82'
                    total_net: '119.81'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.00030000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170826'
                    account_id: '1'
                    service_id: '74'
                    servicecategory_id: '54'
                  - rate_id: null
                    subtotal_quantity: '3.111100'
                    total_quantity: '3.111100'
                    unit_based_subtotal_charge: '7.78'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '7.78'
                    total_charge: '7.78'
                    total_cogs: '6.84'
                    total_net: '0.93'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.50000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170826'
                    account_id: '2'
                    service_id: '71'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '24.000000'
                    total_quantity: '24.000000'
                    unit_based_subtotal_charge: '60.00'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '60.00'
                    total_charge: '60.00'
                    total_cogs: '52.80'
                    total_net: '7.20'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.50000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170827'
                    account_id: '1'
                    service_id: '71'
                    servicecategory_id: '53'
                  - rate_id: null
                    subtotal_quantity: '116.000000'
                    total_quantity: '116.000000'
                    unit_based_subtotal_charge: '1985.04'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '1985.04'
                    total_charge: '1985.04'
                    total_cogs: '1600.80'
                    total_net: '384.24'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '17.11240000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170827'
                    account_id: '1'
                    service_id: '73'
                    servicecategory_id: '54'
                  - rate_id: null
                    subtotal_quantity: '120.000000'
                    total_quantity: '120.000000'
                    unit_based_subtotal_charge: '240.04'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '240.04'
                    total_charge: '240.04'
                    total_cogs: '120.02'
                    total_net: '120.01'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.00030000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170827'
                    account_id: '1'
                    service_id: '74'
                    servicecategory_id: '54'
                  - rate_id: null
                    subtotal_quantity: '5.111100'
                    total_quantity: '5.111100'
                    unit_based_subtotal_charge: '12.78'
                    interval_based_subtotal_charge: '0.00'
                    subtotal_charge: '12.78'
                    total_charge: '12.78'
                    total_cogs: '11.24'
                    total_net: '1.53'
                    min_commit_delta_quantity: '0.000000'
                    min_commit_delta_charge: '0.00'
                    adjustments: []
                    tier_breakdown: []
                    avg_unit_based_rate: '2.50000000'
                    avg_interval_based_rate: '0.00000000'
                    breakdown: null
                    day: '20170827'
                    account_id: '2'
                    service_id: '71'
                    servicecategory_id: '53'
            text/plain:
              schema:
                type: string
              example: >
                rate_id,subtotal_quantity,total_quantity,unit_based_subtotal_charge,interval_based_subtotal_charge,subtotal_charge,total_charge,total_cogs,total_net,min_commit_delta_quantity,min_commit_delta_charge,adjustments,tier_breakdown,avg_unit_based_rate,avg_interval_based_rate,breakdown,day,account_id,service_id,servicecategory_id

                ,13.000000,13.000000,32.50,0.00,32.50,32.50,28.60,3.90,0.000000,0.00,,,2.50000000,0.00000000,,20170825,1,71,53

                ,6.000000,6.000000,7.20,0.00,7.20,7.20,4.80,2.40,0.000000,0.00,,,1.20000000,0.00000000,,20170825,1,72,53

                ,116.000000,116.000000,1985.04,0.00,1985.04,1985.04,1600.80,384.24,0.000000,0.00,,,17.11240000,0.00000000,,20170825,1,73,54

                ,120.000000,120.000000,240.04,0.00,240.04,240.04,120.02,120.01,0.000000,0.00,,,2.00030000,0.00000000,,20170825,1,74,54

                ,3.111100,3.111100,7.78,0.00,7.78,7.78,6.84,0.93,0.000000,0.00,,,2.50000000,0.00000000,,20170825,2,71,53

                ,1.999900,1.999900,2.40,0.00,2.40,2.40,1.60,0.80,0.000000,0.00,,,1.20000000,0.00000000,,20170825,2,72,53

                ,10.100000,10.100000,14.81,0.00,14.81,14.81,112.21,-97.40,0.000000,0.00,,,1.46612903,0.00000000,,20170825,2,75,55

                ,13.000000,13.000000,32.50,0.00,32.50,32.50,28.60,3.90,0.000000,0.00,,,2.50000000,0.00000000,,20170826,1,71,53

                ,116.000000,116.000000,1996.77,0.00,1996.77,1996.77,1612.43,384.33,0.000000,0.00,,,17.21350000,0.00000000,,20170826,1,73,54

                ,119.798000,119.798000,239.63,0.00,239.63,239.63,119.82,119.81,0.000000,0.00,,,2.00030000,0.00000000,,20170826,1,74,54

                ,3.111100,3.111100,7.78,0.00,7.78,7.78,6.84,0.93,0.000000,0.00,,,2.50000000,0.00000000,,20170826,2,71,53

                ,24.000000,24.000000,60.00,0.00,60.00,60.00,52.80,7.20,0.000000,0.00,,,2.50000000,0.00000000,,20170827,1,71,53

                ,116.000000,116.000000,1985.04,0.00,1985.04,1985.04,1600.80,384.24,0.000000,0.00,,,17.11240000,0.00000000,,20170827,1,73,54

                ,120.000000,120.000000,240.04,0.00,240.04,240.04,120.02,120.01,0.000000,0.00,,,2.00030000,0.00000000,,20170827,1,74,54

                ,5.111100,5.111100,12.78,0.00,12.78,12.78,11.24,1.53,0.000000,0.00,,,2.50000000,0.00000000,,20170827,2,71,53
  /v1/reports/{report_id}/resources:
    get:
      tags:
        - Reports > /reports
      summary: Fetch report resources
      description: >-
        ⚠️ This endpoint is currently in alpha and may change at any time.
        Please don't use in production.


        | **attribute** | **type** | **description** |

        | --- | --- | --- |

        | service_ids | *string\[\]* | Key for the applicable service, only when
        `services` is included in the `dimension` parameter |

        | servicecategory_ids | *string\[\]* | Key for the applicable service
        category, only when `services` is included in the `dimension` parameter
        |

        | account_ids | *string\[\]* | Key for the applicable account, only when
        `accounts` is included in the `dimension` parameter |

        | instance_values | *string\[\]* | Unique identifier for the applicable
        instance, only when `instances` is included in the `dimension` parameter
        |
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            The start of the date range (inclusive) you want to run the report
            for in `yyyy-mm-dd` format. Defaults to the current date.
          example: '{{start}}'
        - name: end
          in: query
          schema:
            type: string
          description: >-
            The end of the date range (inclusive) you want to run the report for
            in `yyyy-mm-dd` format. Defaults to the current date.
          example: '{{end}}'
        - name: dimension
          in: query
          schema:
            type: string
          description: >-
            The dimension you want to include in the output. One of `accounts`,
            `services` or `instances` (or a combination of those as a comma
            separated list). Defaults to `accounts,services`.
        - name: depth
          in: query
          schema:
            type: string
          description: >-
            The depth in the report definition you want to report on. Defaults
            to 1.
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: >-
            Optionally [filter](#working-with-the-api) results by this
            attribute. Possible fields are `account_id`, `parent_account_id`,
            `service_id`, `servicecategory_id`, `instance`. This parameter can
            occur multiple times in a request to filter by multiple fields.
        - name: report_id
          in: path
          schema:
            type: string
          required: true
          description: Report to fetch resources on
          example: '{{report_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 09 Oct 2023 08:31:51 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xabb4d507d53c1e97b3dc3916a7d269de
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xabb4d507d53c1e97b3dc3916a7d269de
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-IORts05ldYH603cbiJCTikss9hK7rq5C';style-src 'self'
                  'nonce-IORts05ldYH603cbiJCTikss9hK7rq5C';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 2da0e8e7-9a52-4f6b-87a1-253f22ea0223
          content:
            application/json:
              schema:
                type: object
              example:
                resources:
                  account_ids:
                    - '1'
                    - '2'
                  service_ids:
                    - '71'
                    - '72'
                    - '73'
                    - '74'
                    - '75'
                  servicecategory_ids:
                    - '53'
                    - '54'
                    - '55'
  /v1/servicecategories:
    get:
      tags:
        - Services > /servicecategories
      summary: Retrieve a list of service categories
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `services`,
            `adjustments`, `budgetitems`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 09 May 2022 13:47:02 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xda57a555dfe588a6a63b8be096de75ad
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-SxUOJsUwdLUGGdVvbN44sVlp3p6YyhsB';style-src 'self'
                  'nonce-SxUOJsUwdLUGGdVvbN44sVlp3p6YyhsB';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: fc2ea5f8-abe5-4824-942a-e0dd74ab2a8a
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: servicecategory
                    id: '241'
                    attributes:
                      name: Web services
                    links:
                      self: http://localhost:8012/v1/servicecategories/241
                    relationships:
                      services:
                        links:
                          self: >-
                            http://localhost:8012/v1/servicecategories/241/relationships/services
                          related: >-
                            http://localhost:8012/v1/servicecategories/241/services
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/servicecategories/241/relationships/adjustments
                          related: >-
                            http://localhost:8012/v1/servicecategories/241/adjustments
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/servicecategories/241/relationships/budgetitems
                          related: >-
                            http://localhost:8012/v1/servicecategories/241/budgetitems
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    http://localhost:8012/v1/servicecategories?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    http://localhost:8012/v1/servicecategories?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  last: >-
                    http://localhost:8012/v1/servicecategories?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
    post:
      tags:
        - Services > /servicecategories
      summary: Add a new service category
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n       
                \"type\":\"servicecategory\",\n        \"attributes\":
                {\n            \"name\": \"Test service category -
                {{$randomInt}}\"\n        }\n    }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 10:21:06 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/ServiceCategory/ServiceCategorys
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X61f0fed58b37d18141732377f72fd23d
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-yfL5bhiLc2sbsbVMAJ4GfWV3idtu3QtY';style-src 'self'
                  'nonce-yfL5bhiLc2sbsbVMAJ4GfWV3idtu3QtY';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: ffa033f8-a617-44b7-b927-ed63832d8d0b
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: servicecategory
                  id: '6'
                  attributes:
                    name: Test service category
                  links:
                    self: http://localhost:8012/v1/servicecategories/6
                  relationships:
                    services:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicecategories/6/relationships/services
                        related: http://localhost:8012/v1/servicecategories/6/services
                    adjustments:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicecategories/6/relationships/adjustments
                        related: >-
                          http://localhost:8012/v1/servicecategories/6/adjustments
                    budgetitems:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicecategories/6/relationships/budgetitems
                        related: >-
                          http://localhost:8012/v1/servicecategories/6/budgetitems
  /v1/servicecategories/{servicecategory_id}:
    get:
      tags:
        - Services > /servicecategories
      summary: Retrieve a service category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `services`,
            `adjustments`, `budgetitems`.
        - name: servicecategory_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicecategory_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 16:36:14 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xe25617240099426c0ce74d47954a2309
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-I7YfiW1sNCbrXwVyW359SFYQ64zI4N03';style-src 'self'
                  'nonce-I7YfiW1sNCbrXwVyW359SFYQ64zI4N03';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: f163278b-4f0f-4b68-beb8-65f5079d1b97
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: servicecategory
                  id: '4'
                  attributes:
                    name: Test serice category - 123
                  links:
                    self: http://localhost:8012/v1/servicecategories/4
                  relationships:
                    services:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicecategories/4/relationships/services
                        related: http://localhost:8012/v1/servicecategories/4/services
                    adjustments:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicecategories/4/relationships/adjustments
                        related: >-
                          http://localhost:8012/v1/servicecategories/4/adjustments
                    budgetitems:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicecategories/4/relationships/budgetitems
                        related: >-
                          http://localhost:8012/v1/servicecategories/4/budgetitems
    patch:
      tags:
        - Services > /servicecategories
      summary: Update a service category
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n       
                \"type\":\"servicecategory\",\r\n        \"id\":
                \"{{servicecategory_id}}\",\r\n        \"attributes\":
                {\r\n            \"name\": \"Test serice category -
                {{$randomInt}}\"\r\n        }\r\n    }\r\n}\r\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: servicecategory_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicecategory_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Services > /servicecategories
      summary: Delete a service category
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: servicecategory_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicecategory_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 31 Jan 2022 16:55:10 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf69f4d73f8317762539990f3557cb6f9
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-0hRJUPQqXQe2hCKiy3Eva3PdE2Z8mNBs';style-src 'self'
                  'nonce-0hRJUPQqXQe2hCKiy3Eva3PdE2Z8mNBs';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 9826747f-db8a-41b4-9118-5879c4e7a091
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/services:
    get:
      tags:
        - Services > /services
      summary: Retrieve a list of services
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values:
            `servicecategory`, `rates`, `adjustments`, `dset`, `metadata`,
            `budgetitems`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Nov 2022 12:57:44 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xd34ed5c47054593f3808eb82d200be61
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-9lvsVGOyBxQEW0leF2jOcWyDIfzcr6NY';style-src 'self'
                  'nonce-9lvsVGOyBxQEW0leF2jOcWyDIfzcr6NY';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 08a5e570-d0ac-4e42-8262-339a89336239
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: service
                    id: '15'
                    attributes:
                      key: CRM Enterprise
                      description: License for CRM Enterprise
                      unit_label: Licenses
                      dset: test.usage
                      type: service_name_in_data
                      usage_col: service_name
                      consumption_col: quantity
                      instance_col: UniqueID
                      interval: day
                      cogs_type: automatic_per_unit
                      proration_type: none
                      charge_model: null
                      charge_model_specific_day: null
                      created_at: '1970-08-23T00:58:21Z'
                      updated_at: '2022-11-01T10:00:47Z'
                      seen_at: (not supported yet)
                      charge_type: automatic_per_unit
                      orphan: false
                    links:
                      self: http://localhost:8012/v1/services/15
                    relationships:
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/adjustments
                          related: http://localhost:8012/v1/services/15/adjustments
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/dset
                          related: http://localhost:8012/v1/services/15/dset
                      dataset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/dataset
                          related: http://localhost:8012/v1/services/15/dataset
                      metadata:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/metadata
                          related: http://localhost:8012/v1/services/15/metadata
                      servicecategory:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/servicecategory
                          related: http://localhost:8012/v1/services/15/servicecategory
                      rates:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/rates
                          related: http://localhost:8012/v1/services/15/rates
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/15/relationships/budgetitems
                          related: http://localhost:8012/v1/services/15/budgetitems
                  - type: service
                    id: '16'
                    attributes:
                      key: MS Office Pro
                      description: Microsoft Office Professional
                      unit_label: Licenses
                      dset: test.usage
                      type: service_name_in_data
                      usage_col: service_name
                      consumption_col: quantity
                      instance_col: UniqueID
                      interval: month
                      cogs_type: automatic_per_unit
                      proration_type: none
                      charge_model: peak
                      charge_model_specific_day: null
                      created_at: '1970-08-23T00:58:21Z'
                      updated_at: '2022-11-01T10:00:47Z'
                      seen_at: (not supported yet)
                      charge_type: automatic_per_unit
                      orphan: false
                    links:
                      self: http://localhost:8012/v1/services/16
                    relationships:
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/adjustments
                          related: http://localhost:8012/v1/services/16/adjustments
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/dset
                          related: http://localhost:8012/v1/services/16/dset
                      dataset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/dataset
                          related: http://localhost:8012/v1/services/16/dataset
                      metadata:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/metadata
                          related: http://localhost:8012/v1/services/16/metadata
                      servicecategory:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/servicecategory
                          related: http://localhost:8012/v1/services/16/servicecategory
                      rates:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/rates
                          related: http://localhost:8012/v1/services/16/rates
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/16/relationships/budgetitems
                          related: http://localhost:8012/v1/services/16/budgetitems
                  - type: service
                    id: '17'
                    attributes:
                      key: VM Large W0
                      description: W0pping Large VM
                      unit_label: VM's
                      dset: test.usage
                      type: service_name_in_data
                      usage_col: service_name
                      consumption_col: quantity
                      instance_col: UniqueID
                      interval: individually
                      cogs_type: automatic_per_unit
                      proration_type: none
                      charge_model: null
                      charge_model_specific_day: null
                      created_at: '1970-08-23T00:58:21Z'
                      updated_at: '2022-11-01T10:00:47Z'
                      seen_at: (not supported yet)
                      charge_type: automatic_per_unit
                      orphan: false
                    links:
                      self: http://localhost:8012/v1/services/17
                    relationships:
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/adjustments
                          related: http://localhost:8012/v1/services/17/adjustments
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/dset
                          related: http://localhost:8012/v1/services/17/dset
                      dataset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/dataset
                          related: http://localhost:8012/v1/services/17/dataset
                      metadata:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/metadata
                          related: http://localhost:8012/v1/services/17/metadata
                      servicecategory:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/servicecategory
                          related: http://localhost:8012/v1/services/17/servicecategory
                      rates:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/rates
                          related: http://localhost:8012/v1/services/17/rates
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/17/relationships/budgetitems
                          related: http://localhost:8012/v1/services/17/budgetitems
                  - type: service
                    id: '18'
                    attributes:
                      key: VM Small T1
                      description: Tiny Small VM
                      unit_label: VM's
                      dset: test.usage
                      type: service_name_in_data
                      usage_col: service_name
                      consumption_col: quantity
                      instance_col: UniqueID
                      interval: individually
                      cogs_type: automatic_per_unit
                      proration_type: none
                      charge_model: null
                      charge_model_specific_day: null
                      created_at: '1970-08-23T00:58:21Z'
                      updated_at: '2022-11-01T10:00:47Z'
                      seen_at: (not supported yet)
                      charge_type: automatic_per_unit
                      orphan: false
                    links:
                      self: http://localhost:8012/v1/services/18
                    relationships:
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/adjustments
                          related: http://localhost:8012/v1/services/18/adjustments
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/dset
                          related: http://localhost:8012/v1/services/18/dset
                      dataset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/dataset
                          related: http://localhost:8012/v1/services/18/dataset
                      metadata:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/metadata
                          related: http://localhost:8012/v1/services/18/metadata
                      servicecategory:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/servicecategory
                          related: http://localhost:8012/v1/services/18/servicecategory
                      rates:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/rates
                          related: http://localhost:8012/v1/services/18/rates
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/18/relationships/budgetitems
                          related: http://localhost:8012/v1/services/18/budgetitems
                  - type: service
                    id: '19'
                    attributes:
                      key: Website Std.
                      description: Standard Website Domain
                      unit_label: Websites
                      dset: test.usage
                      type: service_name_in_data
                      usage_col: service_name
                      consumption_col: quantity
                      instance_col: UniqueID
                      interval: month
                      cogs_type: automatic_per_unit
                      proration_type: full
                      charge_model: peak
                      charge_model_specific_day: null
                      created_at: '1970-08-23T00:58:21Z'
                      updated_at: '2022-11-01T10:00:47Z'
                      seen_at: (not supported yet)
                      charge_type: automatic_per_unit
                      orphan: false
                    links:
                      self: http://localhost:8012/v1/services/19
                    relationships:
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/adjustments
                          related: http://localhost:8012/v1/services/19/adjustments
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/dset
                          related: http://localhost:8012/v1/services/19/dset
                      dataset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/dataset
                          related: http://localhost:8012/v1/services/19/dataset
                      metadata:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/metadata
                          related: http://localhost:8012/v1/services/19/metadata
                      servicecategory:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/servicecategory
                          related: http://localhost:8012/v1/services/19/servicecategory
                      rates:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/rates
                          related: http://localhost:8012/v1/services/19/rates
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/19/relationships/budgetitems
                          related: http://localhost:8012/v1/services/19/budgetitems
                  - type: service
                    id: '20'
                    attributes:
                      key: test  - 134
                      description: test service
                      unit_label: hours
                      dset: test.usage
                      type: service_name_in_header
                      usage_col: unique_key
                      consumption_col: quantity
                      instance_col: hostname
                      interval: month
                      cogs_type: none
                      proration_type: full
                      charge_model: peak
                      charge_model_specific_day: null
                      created_at: '1970-08-23T00:58:21Z'
                      updated_at: '2022-11-01T12:57:19Z'
                      seen_at: (not supported yet)
                      charge_type: manual_per_unit
                      orphan: false
                    links:
                      self: http://localhost:8012/v1/services/20
                    relationships:
                      adjustments:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/adjustments
                          related: http://localhost:8012/v1/services/20/adjustments
                      dset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/dset
                          related: http://localhost:8012/v1/services/20/dset
                      dataset:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/dataset
                          related: http://localhost:8012/v1/services/20/dataset
                      metadata:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/metadata
                          related: http://localhost:8012/v1/services/20/metadata
                      servicecategory:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/servicecategory
                          related: http://localhost:8012/v1/services/20/servicecategory
                      rates:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/rates
                          related: http://localhost:8012/v1/services/20/rates
                      budgetitems:
                        links:
                          self: >-
                            http://localhost:8012/v1/services/20/relationships/budgetitems
                          related: http://localhost:8012/v1/services/20/budgetitems
                meta:
                  pagination:
                    total: 6
                    count: 6
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    http://localhost:8012/v1/services?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    http://localhost:8012/v1/services?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  last: >-
                    http://localhost:8012/v1/services?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
    post:
      tags:
        - Services > /services
      summary: Add a new service
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"service\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"key\": \"test 
                - {{$randomInt}}\",\r\n\t\t\t\"description\": \"test
                service\",\r\n\t\t\t\"unit_label\":
                \"hours\",\r\n\t\t\t\"dset\":
                \"{{dset_id}}\",\r\n\t\t\t\"type\":
                \"service_name_in_header\",\r\n\t\t\t\"usage_col\":
                \"unique_key\",\r\n\t\t\t\"consumption_col\":
                \"quantity\",\r\n\t\t\t\"instance_col\":
                \"hostname\",\r\n\t\t\t\"interval\":
                \"month\",\r\n\t\t\t\"charge_type\":
                \"manual_per_unit\",\r\n\t\t\t\"cogs_type\":
                \"none\",\r\n\t\t\t\"proration_type\":
                \"full\",\r\n\t\t\t\"charge_model\":
                \"peak\"\r\n\t\t},\r\n\t\t\"relationships\":
                {\r\n\t\t\t\"servicecategory\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\":
                \"servicecategory\",\r\n\t\t\t\t\t\"id\":
                \"{{servicecategory_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n   
                \t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Nov 2022 12:57:19 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Service/Services
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xa6fef1134596333e7a4714dde4f3fc5b
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-gt3j6RUUolWhpoP4TEvU2J0ImGSeeQwO';style-src 'self'
                  'nonce-gt3j6RUUolWhpoP4TEvU2J0ImGSeeQwO';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 7d035efc-9e70-4d09-bb04-0d78b35ba0f6
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: service
                  id: '20'
                  attributes:
                    key: test  - 134
                    description: test service
                    unit_label: hours
                    dset: test.usage
                    type: service_name_in_header
                    usage_col: unique_key
                    consumption_col: quantity
                    instance_col: hostname
                    interval: month
                    cogs_type: none
                    proration_type: full
                    charge_model: peak
                    charge_model_specific_day: null
                    created_at: '1970-08-23T00:58:21Z'
                    updated_at: '2022-11-01T12:57:19Z'
                    seen_at: (not supported yet)
                    charge_type: manual_per_unit
                    orphan: false
                  links:
                    self: http://localhost:8012/v1/services/20
                  relationships:
                    adjustments:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/adjustments
                        related: http://localhost:8012/v1/services/20/adjustments
                    dset:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/dset
                        related: http://localhost:8012/v1/services/20/dset
                    dataset:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/dataset
                        related: http://localhost:8012/v1/services/20/dataset
                    metadata:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/metadata
                        related: http://localhost:8012/v1/services/20/metadata
                    servicecategory:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/servicecategory
                        related: http://localhost:8012/v1/services/20/servicecategory
                    rates:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/rates
                        related: http://localhost:8012/v1/services/20/rates
                    budgetitems:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/budgetitems
                        related: http://localhost:8012/v1/services/20/budgetitems
  /v1/services/{service_id}:
    get:
      tags:
        - Services > /services
      summary: Retrieve a service
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values:
            `servicecategory`, `rates`, `adjustments`, `dset`, `metadata`,
            `budgetitems`.
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          example: '{{service_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Nov 2022 12:57:34 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xed8e93b2dea2d304cf3d486a5e948bda
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-cdhiMDgvv7NmOZKQ77olFPdjwEBdSzOj';style-src 'self'
                  'nonce-cdhiMDgvv7NmOZKQ77olFPdjwEBdSzOj';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: ae0b84ef-ec79-448b-9d77-283cc89928cc
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: service
                  id: '20'
                  attributes:
                    key: test  - 134
                    description: test service
                    unit_label: hours
                    dset: test.usage
                    type: service_name_in_header
                    usage_col: unique_key
                    consumption_col: quantity
                    instance_col: hostname
                    interval: month
                    cogs_type: none
                    proration_type: full
                    charge_model: peak
                    charge_model_specific_day: null
                    created_at: '1970-08-23T00:58:21Z'
                    updated_at: '2022-11-01T12:57:19Z'
                    seen_at: (not supported yet)
                    charge_type: manual_per_unit
                    orphan: false
                  links:
                    self: http://localhost:8012/v1/services/20
                  relationships:
                    adjustments:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/adjustments
                        related: http://localhost:8012/v1/services/20/adjustments
                    dset:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/dset
                        related: http://localhost:8012/v1/services/20/dset
                    dataset:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/dataset
                        related: http://localhost:8012/v1/services/20/dataset
                    metadata:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/metadata
                        related: http://localhost:8012/v1/services/20/metadata
                    servicecategory:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/servicecategory
                        related: http://localhost:8012/v1/services/20/servicecategory
                    rates:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/rates
                        related: http://localhost:8012/v1/services/20/rates
                    budgetitems:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/budgetitems
                        related: http://localhost:8012/v1/services/20/budgetitems
    patch:
      tags:
        - Services > /services
      summary: Update a service
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"data\": {\n        \"type\": \"service\",\n       
                \"id\": \"{{service_id}}\",\n        \"attributes\":
                {\n            \"key\": \"{{service_key}}\",\n           
                \"description\": \"modified test service\",\n           
                \"unit_label\": \"hours\",\n\t\t\t\"dset\":
                \"{{dset_id}}\",\n\t\t\t\"type\":
                \"service_name_in_header\",\n\t\t\t\"usage_col\":
                \"unique_key\",\n\t\t\t\"consumption_col\":
                \"quantity\",\n\t\t\t\"instance_col\":
                \"hostname\",\n\t\t\t\"interval\":
                \"month\",\n\t\t\t\"charge_type\":
                \"manual_per_unit\",\n\t\t\t\"cogs_type\":
                \"none\",\n\t\t\t\"proration_type\":
                \"full\",\n\t\t\t\"charge_model\": \"average\"\n        }\n   
                }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          example: '{{service_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Nov 2022 12:58:04 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X50b58369b2f94105ec67cf7aad12a303
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-S1ORsK9fWhdYcfl4KNVrdgIfVU7023PS';style-src 'self'
                  'nonce-S1ORsK9fWhdYcfl4KNVrdgIfVU7023PS';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 1288d91f-9a8a-4b5c-9454-7de97c82f4ae
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: service
                  id: '20'
                  attributes:
                    key: key - 473
                    description: modified test service
                    unit_label: hours
                    dset: test.usage
                    type: service_name_in_header
                    usage_col: unique_key
                    consumption_col: quantity
                    instance_col: hostname
                    interval: month
                    cogs_type: none
                    proration_type: full
                    charge_model: average
                    charge_model_specific_day: null
                    created_at: '1970-08-23T00:58:21Z'
                    updated_at: '2022-11-01T12:58:04Z'
                    seen_at: (not supported yet)
                    charge_type: manual_per_unit
                    orphan: false
                  links:
                    self: http://localhost:8012/v1/services/20
                  relationships:
                    adjustments:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/adjustments
                        related: http://localhost:8012/v1/services/20/adjustments
                    dset:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/dset
                        related: http://localhost:8012/v1/services/20/dset
                    dataset:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/dataset
                        related: http://localhost:8012/v1/services/20/dataset
                    metadata:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/metadata
                        related: http://localhost:8012/v1/services/20/metadata
                    servicecategory:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/servicecategory
                        related: http://localhost:8012/v1/services/20/servicecategory
                    rates:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/rates
                        related: http://localhost:8012/v1/services/20/rates
                    budgetitems:
                      links:
                        self: >-
                          http://localhost:8012/v1/services/20/relationships/budgetitems
                        related: http://localhost:8012/v1/services/20/budgetitems
    delete:
      tags:
        - Services > /services
      summary: Delete a service
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          example: '{{service_id}}'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/services/{service_id}/prepareAffectedReports:
    patch:
      tags:
        - Services > /services
      summary: Prepare affected reports
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          description: Service ID
          example: '{{service_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 11:31:17 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xfdbfd6fd395249d630cdc71f64eb3bf2
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xfdbfd6fd395249d630cdc71f64eb3bf2
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-c5q44AsGHpwV6Bc2iUYKWAgM9woY1KvG';style-src 'self'
                  'nonce-c5q44AsGHpwV6Bc2iUYKWAgM9woY1KvG';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 73d14dae-0ace-4752-9bc5-50e413acb188
          content:
            application/json:
              schema:
                type: object
              example:
                prepare_report:
                  - info:
                      report_name: test
                      range: all
                    data:
                      - report_id: 1
                        dset: test.usage
                        first_date: '20170825'
                        last_date: '20170827'
                        status:
                          - date: '20170825'
                            result: skipped
                            records: 0
                          - date: '20170826'
                            result: skipped
                            records: 0
                          - date: '20170827'
                            result: skipped
                            records: 0
                  - info:
                      report_name: Test report - 976
                      range: all
                    data:
                      - report_id: 2
                        dset: test.usage
                        first_date: '20170825'
                        last_date: '20170827'
                        status:
                          - date: '20170825'
                            result: ok
                            records: 20
                          - date: '20170826'
                            result: ok
                            records: 20
                          - date: '20170827'
                            result: ok
                            records: 20
                  - info:
                      report_name: Test report - 25
                      range: all
                    data:
                      - report_id: 3
                        dset: test.usage
                        first_date: '20170825'
                        last_date: '20170827'
                        status:
                          - date: '20170825'
                            result: ok
                            records: 20
                          - date: '20170826'
                            result: ok
                            records: 20
                          - date: '20170827'
                            result: ok
                            records: 20
                report:
                  - info:
                      report_name: test
                      start_date: '20170825'
                      end_date: '20170827'
                      days_in_range: 4
                      days_missing: 0
                      days_unprepared: 0
                      days_with_errors: 0
                      output_table: pgp_1
                      instance_output_count: 40
                      service_output_count: 40
                      total_output_count: 80
                      result: success
                  - info:
                      report_name: Test report - 976
                      start_date: '20170825'
                      end_date: '20170827'
                      days_in_range: 4
                      days_missing: 0
                      days_unprepared: 0
                      days_with_errors: 0
                      output_table: pgp_2
                      instance_output_count: 40
                      service_output_count: 11
                      total_output_count: 51
                      result: success
                  - info:
                      report_name: Test report - 25
                      start_date: '20170825'
                      end_date: '20170827'
                      days_in_range: 4
                      days_missing: 0
                      days_unprepared: 0
                      days_with_errors: 0
                      output_table: pgp_3
                      instance_output_count: 40
                      service_output_count: 11
                      total_output_count: 51
                      result: success
  /v1/servicesubscriptions:
    get:
      tags:
        - Services > /servicesubscriptions
      summary: Retrieve a list of service subscriptions
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `account`,
            `service`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Services > /servicesubscriptions
      summary: Add a new service subscription
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\":
                \"servicesubscription\",\r\n    \"attributes\": {\r\n     
                \"name\": \"test\",\r\n      \"quantity\": 10.10,\r\n     
                \"rate\": 10.10,\r\n      \"cogs\": 10.10,\r\n      \"type\":
                \"recurring\",\r\n      \"start_date\": \"2017-08-28\",\r\n     
                \"end_date\": \"2017-08-29\",\r\n      \"alt_interval\":
                \"day\",\r\n      \"charge_day\": null,\r\n      \"instance\":
                \"exivity\"\r\n    },\r\n    \"relationships\": {\r\n     
                \"account\": {\r\n        \"data\": {\r\n          \"type\":
                \"account\",\r\n          \"id\": \"{{account_id}}\"\r\n       
                }\r\n      },\r\n      \"service\": {\r\n        \"data\":
                {\r\n          \"type\": \"service\",\r\n          \"id\":
                \"{{service_id}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 11:34:17 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: >-
                  http://localhost:8012/v1/ServiceSubscription/ServiceSubscriptions
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X211679449127f4518765de78c80f1189
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-xJI9IQFv2PldD8OmCyYko7evYu0H6gbK';style-src 'self'
                  'nonce-xJI9IQFv2PldD8OmCyYko7evYu0H6gbK';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: a2e791fc-95e3-4175-ab68-fe2851782a68
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: servicesubscription
                  id: '1'
                  attributes:
                    name: test
                    quantity: 10.1
                    rate: 10.1
                    cogs: 10.1
                    type: recurring
                    start_date: '2017-08-28'
                    charge_day: null
                    end_date: '2017-08-29'
                    alt_interval: day
                    instance: exivity
                  links:
                    self: http://localhost:8012/v1/servicesubscriptions/1
                  relationships:
                    account:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicesubscriptions/1/relationships/account
                        related: >-
                          http://localhost:8012/v1/servicesubscriptions/1/account
                    service:
                      links:
                        self: >-
                          http://localhost:8012/v1/servicesubscriptions/1/relationships/service
                        related: >-
                          http://localhost:8012/v1/servicesubscriptions/1/service
  /v1/servicesubscriptions/{servicesubscription_id}:
    get:
      tags:
        - Services > /servicesubscriptions
      summary: Retrieve a service subscription - check check
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `account`,
            `service`.
        - name: servicesubscription_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicesubscription_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Services > /servicesubscriptions
      summary: Update a service subscriptions
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\":
                \"servicesubscription\",\r\n    \"id\":
                \"{{servicesubscription_id}}\",\r\n    \"attributes\":
                {\r\n      \"name\": \"modified_test\",\r\n      \"quantity\":
                20.20,\r\n      \"rate\": 20.20,\r\n      \"cogs\":
                20.20,\r\n      \"type\": \"one_off\",\r\n      \"start_date\":
                \"2017-08-29\",\r\n      \"alt_interval\": \"month\",\r\n     
                \"instance\": \"exivity-updated\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: servicesubscription_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicesubscription_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Services > /servicesubscriptions
      summary: Delete a service subscriptions
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: servicesubscription_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicesubscription_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 12:21:20 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X6afa5174beb74d138784a5ec75408860
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-w7UyLMjBTNlZZLsQ8BpdYzI8MpPYpy1I';style-src 'self'
                  'nonce-w7UyLMjBTNlZZLsQ8BpdYzI8MpPYpy1I';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 77957464-db7c-476e-a9e1-1fb808fe1e17
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/servicesubscriptions/{servicesubscription_id}/prepareAffectedReports:
    patch:
      tags:
        - Services > /servicesubscriptions
      summary: Prepare affected reports
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: servicesubscription_id
          in: path
          schema:
            type: string
          required: true
          example: '{{servicesubscription_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/rates:
    get:
      tags:
        - Services > /rates
      summary: Retrieve a list of rates
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `service`,
            `account`, `ratetiers`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Services > /rates
      summary: Add a new rate
      description: "Account specific rates can be created through this endpoint by specifying the `account` relationship in the request body, e.g.:\n\n```\n\"relationships\": {\n\t\"service\": { ... },\n\t\"account\": {\n\t\t\"data\": {\n\t\t\t\"type\": \"account\",\n\t\t\t\"id\": \"1\"\n\t\t}\n\t}\n}\n```"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"rate\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"rate\":
                \"1.0\",\r\n\t\t\t\"rate_col\":
                \"rate_col\",\r\n\t\t\t\"fixed\":
                \"2.0\",\r\n\t\t\t\"fixed_col\":
                \"fixed_col\",\r\n\t\t\t\"cogs_rate\":
                \"3.0\",\r\n\t\t\t\"cogs_rate_col\":
                \"cogs_rate_col\",\r\n\t\t\t\"cogs_fixed\":
                \"4.0\",\r\n\t\t\t\"cogs_fixed_col\":
                \"cogs_fixed_col\",\r\n\t\t\t\"effective_date\":
                \"2017-08-28\",\r\n            \"tier_aggregation_level\":
                \"1\"\r\n\t\t},\r\n\t\t\"relationships\":
                {\r\n\t\t\t\"service\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\": \"service\",\r\n\t\t\t\t\t\"id\":
                \"{{service_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 12:48:25 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Rate/Rates
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xd1dbcf262a1a8a58e332e8d86b764a21
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-6JOrDHS0aHFuAbBOsEEBwCwi2GjIzzyK';style-src 'self'
                  'nonce-6JOrDHS0aHFuAbBOsEEBwCwi2GjIzzyK';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 83cb0846-0454-404c-9c26-f0618b4fc7d5
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Add a new rate
                  value:
                    data:
                      type: rate
                      id: '10'
                      attributes:
                        rate: 1
                        rate_col: rate_col
                        min_commit: 0
                        effective_date: '2017-08-28'
                        tier_aggregation_level: 1
                        fixed: 2
                        fixed_col: fixed_col
                        cogs_rate: 3
                        cogs_rate_col: cogs_rate_col
                        cogs_fixed: 4
                        cogs_fixed_col: cogs_fixed_col
                      links:
                        self: http://localhost:8012/v1/rates/10
                      relationships:
                        service:
                          links:
                            self: >-
                              http://localhost:8012/v1/rates/10/relationships/service
                            related: http://localhost:8012/v1/rates/10/service
                        account:
                          links:
                            self: >-
                              http://localhost:8012/v1/rates/10/relationships/account
                            related: http://localhost:8012/v1/rates/10/account
                        ratetiers:
                          links:
                            self: >-
                              http://localhost:8012/v1/rates/10/relationships/ratetiers
                            related: http://localhost:8012/v1/rates/10/ratetiers
                example-1:
                  summary: Add a new rate with an account
                  value:
                    data:
                      type: rate
                      id: '9'
                      attributes:
                        rate: 1
                        rate_col: rate_col
                        min_commit: 0
                        effective_date: '2017-08-27'
                        tier_aggregation_level: 1
                        fixed: 2
                        fixed_col: fixed_col
                        cogs_rate: 3
                        cogs_rate_col: cogs_rate_col
                        cogs_fixed: 4
                        cogs_fixed_col: cogs_fixed_col
                      links:
                        self: http://localhost:8012/v1/rates/9
                      relationships:
                        service:
                          links:
                            self: >-
                              http://localhost:8012/v1/rates/9/relationships/service
                            related: http://localhost:8012/v1/rates/9/service
                        account:
                          links:
                            self: >-
                              http://localhost:8012/v1/rates/9/relationships/account
                            related: http://localhost:8012/v1/rates/9/account
                        ratetiers:
                          links:
                            self: >-
                              http://localhost:8012/v1/rates/9/relationships/ratetiers
                            related: http://localhost:8012/v1/rates/9/ratetiers
  /v1/rates/{rate_id}:
    get:
      tags:
        - Services > /rates
      summary: Retrieve a rate
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `service`,
            `account`, `ratetiers`
        - name: rate_id
          in: path
          schema:
            type: string
          required: true
          description: Rate ID
          example: '{{rate_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 12:44:47 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X8731b074e90a76fd8a316927e7d54002
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-ufbIP398ZLvcQFljjaEBOh6J8KvnnPKP';style-src 'self'
                  'nonce-ufbIP398ZLvcQFljjaEBOh6J8KvnnPKP';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: ec14108f-8f81-4c69-ad27-10d62027584c
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: rate
                  id: '8'
                  attributes:
                    rate: 1
                    rate_col: rate_col
                    min_commit: 0
                    effective_date: '2017-09-27'
                    tier_aggregation_level: 1
                    fixed: 2
                    fixed_col: fixed_col
                    cogs_rate: 3
                    cogs_rate_col: cogs_rate_col
                    cogs_fixed: 4
                    cogs_fixed_col: cogs_fixed_col
                  links:
                    self: http://localhost:8012/v1/rates/8
                  relationships:
                    service:
                      links:
                        self: http://localhost:8012/v1/rates/8/relationships/service
                        related: http://localhost:8012/v1/rates/8/service
                    account:
                      links:
                        self: http://localhost:8012/v1/rates/8/relationships/account
                        related: http://localhost:8012/v1/rates/8/account
                    ratetiers:
                      links:
                        self: >-
                          http://localhost:8012/v1/rates/8/relationships/ratetiers
                        related: http://localhost:8012/v1/rates/8/ratetiers
    patch:
      tags:
        - Services > /rates
      summary: Update a rate
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"rate\",\r\n    \"id\":
                \"{{rate_id}}\",\r\n    \"attributes\": {\r\n     
                \"min_commit\": 50,\r\n      \"rate\": \"10.0\",\r\n     
                \"rate_col\": \"rate_col2\",\r\n      \"fixed\":
                \"20.0\",\r\n      \"fixed_col\": \"fixed_col2\",\r\n     
                \"cogs_rate\": \"30.0\",\r\n      \"cogs_rate_col\":
                \"cogs_rate_col2\",\r\n      \"cogs_fixed\": \"40.0\",\r\n     
                \"cogs_fixed_col\": \"cogs_fixed_col2\"\r\n      \r\n    }\r\n 
                }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: rate_id
          in: path
          schema:
            type: string
          required: true
          example: '{{rate_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Services > /rates
      summary: Delete a rate
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rate_id
          in: path
          schema:
            type: string
          required: true
          example: '{{rate_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 12:40:26 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf3dcf248919675fa9c371c11a52ef871
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-1BF6Fk5A9HGdT86x4uWzaBoyI6ijAdUk';style-src 'self'
                  'nonce-1BF6Fk5A9HGdT86x4uWzaBoyI6ijAdUk';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 9ea319e8-afbf-43bc-94f0-2eef822d40d1
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/rates/{rate_id}/prepareAffectedReports:
    patch:
      tags:
        - Services > /rates
      summary: Prepare affected reports
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rate_id
          in: path
          schema:
            type: string
          required: true
          example: '{{rate_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/ratetiers:
    get:
      tags:
        - Services > /ratetiers
      summary: Retrieve a list of rate tiers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources. Possible values: `rate`.'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Services > /ratetiers
      summary: Add a new rate tier
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"ratetier\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"threshold\":
                \"0\",\r\n\t\t\t\"rate\":
                \"4.0\"\r\n\t\t},\r\n\t\t\"relationships\": {\r\n\t\t\t\"rate\":
                {\r\n\t\t\t\t\"data\": {\r\n\t\t\t\t\t\"type\":
                \"rate\",\r\n\t\t\t\t\t\"id\":
                \"{{rate_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Successful response
          content:
            application/json: {}
  /v1/ratetiers/{ratetier_id}:
    get:
      tags:
        - Services > /ratetiers
      summary: Retrieve a rate tier
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources. Possible values: `rate`.'
        - name: ratetier_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Services > /ratetiers
      summary: Update a rate tier
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"ratetier\",\r\n   
                \"id\": \"{{ratetier_id}}\",\r\n    \"attributes\": {\r\n     
                \"cogs\": 10\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: ratetier_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Services > /ratetiers
      summary: Delete a rate tier
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ratetier_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Successful response
          content:
            application/json: {}
  /v1/adjustments:
    get:
      tags:
        - Services > /adjustments
      summary: Retrieve a list of adjustments
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `account`,
            `services`, `servicecategories`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Services > /adjustments
      summary: Add a new adjustment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: adjustment
                  attributes:
                    name: test
                    amount: '-10'
                    type: relative
                    target: charge
                    first_interval: 2017-01
                    last_interval: 2017-12
                  relationships:
                    account:
                      data:
                        type: account
                        id: '{{account_id}}'
                    services:
                      data:
                        type: service
                        id: '{{service_id}}'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 13:38:09 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Adjustment/Adjustments
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X00e07c52ec0a9a2c4024d18287fbdeca
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-6k30XXcmUg34psJwl2ufoEDuG49zT5Xq';style-src 'self'
                  'nonce-6k30XXcmUg34psJwl2ufoEDuG49zT5Xq';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 86b22c30-805c-49bc-9cb1-64703b5abac8
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: adjustment
                  id: '2'
                  attributes:
                    name: test
                    amount: -10
                    sort: 0
                    type: relative
                    target: charge
                    first_interval: 2017-01
                    last_interval: 2017-12
                  links:
                    self: http://localhost:8012/v1/adjustments/2
                  relationships:
                    account:
                      links:
                        self: >-
                          http://localhost:8012/v1/adjustments/2/relationships/account
                        related: http://localhost:8012/v1/adjustments/2/account
                    services:
                      links:
                        self: >-
                          http://localhost:8012/v1/adjustments/2/relationships/services
                        related: http://localhost:8012/v1/adjustments/2/services
                    servicecategories:
                      links:
                        self: >-
                          http://localhost:8012/v1/adjustments/2/relationships/servicecategories
                        related: >-
                          http://localhost:8012/v1/adjustments/2/servicecategories
  /v1/adjustments/{adjustment_id}:
    get:
      tags:
        - Services > /adjustments
      summary: Retrieve an adjustment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: Include additional related resources
        - name: adjustment_id
          in: path
          schema:
            type: string
          required: true
          example: '{{adjustment_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Services > /adjustments
      summary: Update an adjustment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"adjustment\",\r\n   
                \"id\": \"{{adjustment_id}}\",\r\n    \"attributes\": {\r\n     
                \"name\": \"modified_test\",\r\n      \"amount\":
                \"-20\",\r\n      \"type\": \"absolute\",\r\n      \"target\":
                \"quantity\",\r\n      \"first_interval\": \"2018-01\",\r\n     
                \"last_interval\": \"\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: adjustment_id
          in: path
          schema:
            type: string
          required: true
          example: '{{adjustment_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Services > /adjustments
      summary: Delete an adjustment
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: adjustment_id
          in: path
          schema:
            type: string
          required: true
          example: '{{adjustment_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 14:37:53 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X7a968656dd5c9833df9ef97cdda1f71e
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-ZmubC0GRrYBR7VG0JAlhRWqPCGhyqtN3';style-src 'self'
                  'nonce-ZmubC0GRrYBR7VG0JAlhRWqPCGhyqtN3';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: d6fbc10d-ad48-45c4-bfe6-f738b1b4c466
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/adjustments/{adjustment_id}/prepareAffectedReports:
    patch:
      tags:
        - Services > /adjustments
      summary: Prepare affected reports
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: adjustment_id
          in: path
          schema:
            type: string
          required: true
          example: '{{adjustment_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/accounts:
    get:
      tags:
        - Accounts > /accounts
      summary: Retrieve a list of accounts
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `report`,
            `parent`, `children`, `rates`, `adjustments`, `users`, `metadata`,
            `budgetitems`, `servicesubscriptions`.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.17.4
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.3.10
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Wed, 18 Dec 2019 15:00:59 GMT
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: account
                    id: '1'
                    attributes:
                      name: Mucho Cloud Corp
                      level: 1
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: ''
                      lvl3_key: ''
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/1
                  - type: account
                    id: '2'
                    attributes:
                      name: Wholesale IT Services
                      level: 1
                      lvl1_key: Wholesale IT Services
                      lvl2_key: ''
                      lvl3_key: ''
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/2
                  - type: account
                    id: '3'
                    attributes:
                      name: Fresh Bakery Inc
                      level: 2
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Fresh Bakery Inc
                      lvl3_key: ''
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/3
                  - type: account
                    id: '4'
                    attributes:
                      name: Rusty Bicycles Ltd
                      level: 2
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Rusty Bicycles Ltd
                      lvl3_key: ''
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/4
                  - type: account
                    id: '5'
                    attributes:
                      name: Deegan Daggers
                      level: 2
                      lvl1_key: Wholesale IT Services
                      lvl2_key: Deegan Daggers
                      lvl3_key: ''
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/5
                  - type: account
                    id: '6'
                    attributes:
                      name: Boezem Bezems
                      level: 2
                      lvl1_key: Wholesale IT Services
                      lvl2_key: Boezem Bezems
                      lvl3_key: ''
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/6
                  - type: account
                    id: '7'
                    attributes:
                      name: Europe
                      level: 3
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Fresh Bakery Inc
                      lvl3_key: Europe
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/7
                  - type: account
                    id: '8'
                    attributes:
                      name: Australia
                      level: 3
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Fresh Bakery Inc
                      lvl3_key: Australia
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/8
                  - type: account
                    id: '9'
                    attributes:
                      name: United Kingdom
                      level: 3
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Rusty Bicycles Ltd
                      lvl3_key: United Kingdom
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/9
                  - type: account
                    id: '10'
                    attributes:
                      name: Benelux
                      level: 3
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Rusty Bicycles Ltd
                      lvl3_key: Benelux
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/10
                  - type: account
                    id: '11'
                    attributes:
                      name: Japan
                      level: 3
                      lvl1_key: Wholesale IT Services
                      lvl2_key: Deegan Daggers
                      lvl3_key: Japan
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/11
                  - type: account
                    id: '12'
                    attributes:
                      name: London
                      level: 3
                      lvl1_key: Wholesale IT Services
                      lvl2_key: Deegan Daggers
                      lvl3_key: London
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/12
                  - type: account
                    id: '13'
                    attributes:
                      name: Brighton
                      level: 3
                      lvl1_key: Wholesale IT Services
                      lvl2_key: Deegan Daggers
                      lvl3_key: Brighton
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/13
                  - type: account
                    id: '14'
                    attributes:
                      name: Zeist
                      level: 3
                      lvl1_key: Wholesale IT Services
                      lvl2_key: Boezem Bezems
                      lvl3_key: Zeist
                      lvl4_key: ''
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/14
                  - type: account
                    id: '15'
                    attributes:
                      name: Marketing
                      level: 4
                      lvl1_key: Mucho Cloud Corp
                      lvl2_key: Fresh Bakery Inc
                      lvl3_key: Europe
                      lvl4_key: Marketing
                      lvl5_key: ''
                    links:
                      self: https://dev.exivity.net:8002/v1/accounts/15
                meta:
                  pagination:
                    total: 2015
                    count: 15
                    per_page: 15
                    current_page: 1
                    total_pages: 135
                links:
                  self: >-
                    https://dev.exivity.net:8002/v1/accounts?page%5Blimit%5D=&sort=&filter%5Bname%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    https://dev.exivity.net:8002/v1/accounts?page%5Blimit%5D=&sort=&filter%5Bname%5D=&include=&page%5Boffset%5D=1
                  next: >-
                    https://dev.exivity.net:8002/v1/accounts?page%5Blimit%5D=&sort=&filter%5Bname%5D=&include=&page%5Boffset%5D=2
                  last: >-
                    https://dev.exivity.net:8002/v1/accounts?page%5Blimit%5D=&sort=&filter%5Bname%5D=&include=&page%5Boffset%5D=135
    post:
      tags:
        - Accounts > /accounts
      summary: Add a new account
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"account\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"name\": \"My
                new account\"\r\n\t\t},\r\n\t\t\"relationships\":
                {\r\n\t\t\t\"report\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\": \"report\",\r\n\t\t\t\t\t\"id\":
                \"{{report_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Wed, 24 Jul 2019 09:06:27 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.3.6
            Location:
              schema:
                type: string
                example: https://localhost:8012/v1/account/51
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf09c59da7e0aae44acf4a03b5c141f7f
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Add a new account with a parent
                  value:
                    data:
                      type: account
                      id: '51'
                      attributes:
                        name: My new account
                        level: '2'
                        lvl1_key: My new account
                        lvl2_key: My new account
                        lvl3_key: ''
                        lvl4_key: ''
                        lvl5_key: ''
                      links:
                        self: https://localhost:8012/v1/accounts/51
                example-1:
                  summary: Add a new account
                  value:
                    data:
                      type: account
                      id: '48'
                      attributes:
                        name: My new account
                        level: 1
                        lvl1_key: My new account
                        lvl2_key: ''
                        lvl3_key: ''
                        lvl4_key: ''
                        lvl5_key: ''
                      links:
                        self: http://localhost:8012/v1/accounts/48
                      relationships:
                        adjustments:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/adjustments
                            related: http://localhost:8012/v1/accounts/48/adjustments
                        children:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/children
                            related: http://localhost:8012/v1/accounts/48/children
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/metadata
                            related: http://localhost:8012/v1/accounts/48/metadata
                        parent:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/parent
                            related: http://localhost:8012/v1/accounts/48/parent
                        rates:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/rates
                            related: http://localhost:8012/v1/accounts/48/rates
                        report:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/report
                            related: http://localhost:8012/v1/accounts/48/report
                        users:
                          links:
                            self: >-
                              http://localhost:8012/v1/accounts/48/relationships/users
                            related: http://localhost:8012/v1/accounts/48/users
  /v1/accounts/{account_id}/:
    get:
      tags:
        - Accounts > /accounts
      summary: Retrieve an account
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `report`,
            `parent`, `children`, `rates`, `adjustments`, `users`.
        - name: account_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/accounts/{account_id}:
    patch:
      tags:
        - Accounts > /accounts
      summary: Update an account
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"account\",\r\n    \"id\":
                \"{{account_id}}\",\r\n    \"attributes\": {\r\n      \"name\":
                \"My new account name\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/accounts/{accountId}:
    delete:
      tags:
        - Accounts > /accounts
      summary: Delete an account
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: accountId
          in: path
          schema:
            type: string
          required: true
          example: '{{account_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 14:43:53 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xef2740bc9f5d305e3ed9c9c4fd8892ec
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xef2740bc9f5d305e3ed9c9c4fd8892ec
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-mznUHcXqL2uCNNJL1zvGKUnRdSpPxdk6';style-src 'self'
                  'nonce-mznUHcXqL2uCNNJL1zvGKUnRdSpPxdk6';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 9e03a9ab-b2a6-4344-b576-e27be820d7a4
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/budgets:
    get:
      tags:
        - Accounts > /budgets
      summary: Retrieve a list of budgets
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `revisions`,
            `report`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Accounts > /budgets
      summary: Add a new budget
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"budget\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"interval\":
                \"year\",\r\n\t\t\t\"description\": \"This is a new
                budget\",\r\n\t\t\t\"metric\":
                \"cogs\"\r\n\t\t},\r\n\t\t\"relationships\":
                {\r\n\t\t\t\"report\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\": \"report\",\r\n\t\t\t\t\t\"id\"  :
                \"{{report_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 14:47:24 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Budget/Budgets
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X4642dfbf0e8197bc7838bb3b7598ea2b
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-JWXbpWdPXoQArHPOvr7EGxj8itQqRETA';style-src 'self'
                  'nonce-JWXbpWdPXoQArHPOvr7EGxj8itQqRETA';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: d630bf36-a884-46e8-955d-e9d54e895a5c
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: budget
                  id: '1'
                  attributes:
                    interval: year
                    description: This is a new budget
                    metric: cogs
                  links:
                    self: http://localhost:8012/v1/budgets/1
                  relationships:
                    revisions:
                      links:
                        self: >-
                          http://localhost:8012/v1/budgets/1/relationships/revisions
                        related: http://localhost:8012/v1/budgets/1/revisions
                    items:
                      links:
                        self: http://localhost:8012/v1/budgets/1/relationships/items
                        related: http://localhost:8012/v1/budgets/1/items
                    report:
                      links:
                        self: >-
                          http://localhost:8012/v1/budgets/1/relationships/report
                        related: http://localhost:8012/v1/budgets/1/report
  /v1/budgets/{budget_id}:
    get:
      tags:
        - Accounts > /budgets
      summary: Retrieve a budget
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources: `revisions`'
        - name: budget_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budget_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Accounts > /budgets
      summary: Update a budget
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\": \"budget\",\r\n\t\t\"id\":
                \"{{budget_id}}\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"description\":
                \"modified_test\",\r\n\t\t\t\"interval\":
                \"year\",\r\n\t\t\t\"metric\": \"cogs\"\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: budget_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budget_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Accounts > /budgets
      summary: Delete a budget
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: budget_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budget_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 14:47:47 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xb5e3c6102209ee145b3ded716bae6d3f
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-3QO59sP2EfDbo4N3Qye5FGTCKv8gAeqF';style-src 'self'
                  'nonce-3QO59sP2EfDbo4N3Qye5FGTCKv8gAeqF';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: ba56e379-2cf7-4b86-8fb3-f7505cd1e2f2
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/budgets/{budget_id}/run:
    get:
      tags:
        - Accounts > /budgets
      summary: Run a budget
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: start
          in: query
          schema:
            type: string
          example: '{{start}}'
        - name: end
          in: query
          schema:
            type: string
          example: '{{end}}'
        - name: budget_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budget_id}}'
      responses:
        '422':
          description: Successful response
          content:
            application/json: {}
  /v1/budgetrevisions:
    get:
      tags:
        - Accounts > /budgetrevisions
      summary: Retrieve a list of budgets revisions
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
        - name: page[offset]
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `budget`,
            `items`
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Accounts > /budgetrevisions
      summary: Add a new budget revision
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n        \"type\":\"budgetrevision\",\n       
                \"attributes\": {\n            \"effective_from\":
                \"2019-06-06\"\n        },\n        \"relationships\":
                {\n        \t\"budget\": {\n        \t\t\"data\": {\n       
                \t\t\t\"type\": \"budget\",\n        \t\t\t\"id\":
                \"{{budget_id}}\"\n        \t\t}\n        \t}\n        }\n   
                }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 14:56:09 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/BudgetRevision/BudgetRevisions
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xce1189ea1cf7fd2ec30f6cd57558b796
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-iXn6aXFqVVswIJMEbqAyGIaA5WYmKa42';style-src 'self'
                  'nonce-iXn6aXFqVVswIJMEbqAyGIaA5WYmKa42';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 78a1ddf6-5276-420a-aba3-80cc3d8f6de3
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: budgetrevision
                  id: '1'
                  attributes:
                    effective_from: '2019-06-06'
                  links:
                    self: http://localhost:8012/v1/budgetrevisions/1
                  relationships:
                    budget:
                      links:
                        self: >-
                          http://localhost:8012/v1/budgetrevisions/1/relationships/budget
                        related: http://localhost:8012/v1/budgetrevisions/1/budget
                    items:
                      links:
                        self: >-
                          http://localhost:8012/v1/budgetrevisions/1/relationships/items
                        related: http://localhost:8012/v1/budgetrevisions/1/items
  /v1/budgetrevisions/{budgetrevision_id}:
    get:
      tags:
        - Accounts > /budgetrevisions
      summary: Retrieve a budget revision
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `budget`,
            `items`
        - name: budgetrevision_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetrevision_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Accounts > /budgetrevisions
      summary: Update a budget revision
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n        \"type\":\"budgetrevision\",\n       
                \"id\":\"{{budgetrevision_id}}\",\n        \"attributes\":
                {\n            \"effective_from\": \"2019-08-08\"\n       
                }\n    }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: budgetrevision_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetrevision_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Accounts > /budgetrevisions
      summary: Delete a budget revision
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: budgetrevision_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetrevision_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 14:56:30 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xb3c568ae1d05ed53a172acd6ceddc3ed
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-Bw4JhWvdWtkEmzxXUUaS9DPR6ngrvXsj';style-src 'self'
                  'nonce-Bw4JhWvdWtkEmzxXUUaS9DPR6ngrvXsj';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: cc34fcf4-5221-43bc-9e22-998431c76e9c
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/budgetrevisions/{budgetrevision_id}/validate:
    get:
      tags:
        - Accounts > /budgetrevisions
      summary: Validate a budget revision
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: budgetrevision_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetrevision_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/budgetitems:
    get:
      tags:
        - Accounts > /budgetitems
      summary: Retrieve a list of budgets items
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `revision`,
            `parent`, `children`, `account`, `services`, `servicecategories`
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Accounts > /budgetitems
      summary: Add a new budget item
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n        \"type\":\"budgetitem\",\n       
                \"attributes\": {\n            \"kind\":
                \"account\",\n            \"status\": \"regular\",\n           
                \"percent\": false,\n            \"distribution\":
                \"even\",\n            \"filter\": \"none\",\n           
                \"amount\": 5\n        },\n        \"relationships\": {\n       
                \t\"revision\": {\n        \t\t\"data\": {\n       
                \t\t\t\"type\": \"budgetrevision\",\n        \t\t\t\"id\":
                \"{{budgetrevision_id}}\"\n        \t\t}\n        \t},\n       
                \t\"account\": {\n        \t\t\"data\": {\n       
                \t\t\t\"type\": \"account\",\n        \t\t\t\"id\":
                \"{{account_id}}\"\n        \t\t}\n        \t}\n        }\n   
                }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 26 Aug 2019 09:29:50 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.3.6
            Location:
              schema:
                type: string
                example: https://localhost:8012/v1/budgetitem/6
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X91ef46877eaaf096034f2a823f457554
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Add a new budget item with a parent item
                  value:
                    data:
                      type: budgetitem
                      id: '6'
                      attributes:
                        kind: account
                        status: regular
                        filter: none
                        amount: null
                        percent: false
                        distribution: even
                      links:
                        self: https://localhost:8012/v1/budgetitems/6
                example-1:
                  summary: Add a new budget item
                  value:
                    data:
                      type: budgetitem
                      id: '1'
                      attributes:
                        kind: account
                        status: regular
                        filter: none
                        amount: null
                        percent: false
                        distribution: even
                      links:
                        self: http://localhost:8012/v1/budgetitems/1
                      relationships:
                        revision:
                          links:
                            self: >-
                              http://localhost:8012/v1/budgetitems/1/relationships/revision
                            related: http://localhost:8012/v1/budgetitems/1/revision
                        parent:
                          links:
                            self: >-
                              http://localhost:8012/v1/budgetitems/1/relationships/parent
                            related: http://localhost:8012/v1/budgetitems/1/parent
                        children:
                          links:
                            self: >-
                              http://localhost:8012/v1/budgetitems/1/relationships/children
                            related: http://localhost:8012/v1/budgetitems/1/children
                        account:
                          links:
                            self: >-
                              http://localhost:8012/v1/budgetitems/1/relationships/account
                            related: http://localhost:8012/v1/budgetitems/1/account
                        services:
                          links:
                            self: >-
                              http://localhost:8012/v1/budgetitems/1/relationships/services
                            related: http://localhost:8012/v1/budgetitems/1/services
                        servicecategories:
                          links:
                            self: >-
                              http://localhost:8012/v1/budgetitems/1/relationships/servicecategories
                            related: >-
                              http://localhost:8012/v1/budgetitems/1/servicecategories
    patch:
      tags:
        - Accounts > /budgetitems
      summary: Patch budget items (create, update, delete)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"operations\": [\n\t\t{\n\t\t\t\"op\":
                \"add\",\n\t\t\t\"data\": {\n\t\t       
                \"type\":\"budgetitem\",\n\t\t        \"attributes\":
                {\n\t\t            \"kind\": \"account\",\n\t\t           
                \"status\": \"regular\",\n\t\t            \"percent\":
                0,\n\t\t            \"distribution\": \"even\",\n\t\t           
                \"filter\": \"none\"\n\t\t        },\n\t\t       
                \"relationships\": {\n\t\t        \t\"revision\": {\n\t\t       
                \t\t\"data\": {\n\t\t        \t\t\t\"type\":
                \"budgetrevision\",\n\t\t        \t\t\t\"id\":
                \"{{budgetrevision_id}}\"\n\t\t        \t\t}\n\t\t       
                \t},\n\t\t        \t\"account\": {\n\t\t        \t\t\"data\":
                {\n\t\t        \t\t\t\"type\": \"account\",\n\t\t       
                \t\t\t\"id\": \"{{account_id}}\"\n\t\t        \t\t}\n\t\t       
                \t}\n\t\t        }\n\t\t   
                }\n\t\t},\n\t\t{\n\t\t\t\"op\":\"update\",\n           
                \"data\": {\n                \"type\":
                \"budgetitem\",\n                \"id\":
                \"{{budgetitem_id}}\",\n                \"attributes\":
                {\n                    \"kind\": \"service\"\n               
                }\n            }\n\t\t},\n\t\t{\n\t\t\t\"op\":
                \"delete\",\n            \"data\": {\n            \t\"type\":
                \"budgetitem\",\n            \t\"id\":
                \"{{budgetitem_id}}\"\n            }\n\t\t}\n\t]\n}\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/budgetitems/{item_id}:
    get:
      tags:
        - Accounts > /budgetitems
      summary: Retrieve a budget item
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `revision`,
            `parent`, `children`, `account`, `services`, `servicecategories`
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetitem_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/budgetitems/{budgetitem_id}:
    patch:
      tags:
        - Accounts > /budgetitems
      summary: Update a budget item
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n        \"type\":\"budgetitem\",\n       
                \"id\":\"{{budgetitem_id}}\",\n        \"attributes\":
                {\n            \"amount\": 100\n        }\n    }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: budgetitem_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetitem_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Accounts > /budgetitems
      summary: Delete a budget item
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: budgetitem_id
          in: path
          schema:
            type: string
          required: true
          example: '{{budgetitem_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 15:03:19 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X2d10bd68cfa047c45afbe87b7710704a
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X2d10bd68cfa047c45afbe87b7710704a
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-nVmJSJKWNXNfXKeRYyEI5PYgEMET6msh';style-src 'self'
                  'nonce-nVmJSJKWNXNfXKeRYyEI5PYgEMET6msh';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: f193a080-1aee-41b1-9348-b30f871609bb
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/extractors:
    get:
      tags:
        - Data pipelines > /extractors
      summary: Retrieve a list of extractors
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Data pipelines > /extractors
      summary: Add a new extractor
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"name\": \"Extractor test - {{$randomInt}}\",\r\n 
                \"contents\": \"print Hello\\nvar key1 = value1\\npublic var
                key2 = value2\\npublic encrypt var key3 = 0\"\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:10:13 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X6aefe4e5adf9d01d43582439fc404e08
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X6aefe4e5adf9d01d43582439fc404e08
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-JTPxct1sF9uJic7zoh0dqDasPy4TcZIV';style-src 'self'
                  'nonce-JTPxct1sF9uJic7zoh0dqDasPy4TcZIV';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 5bc92130-d345-4a31-9644-f620a63d8e5d
          content:
            application/json:
              schema:
                type: object
              example:
                name: MyExtractor
                contents: |-
                  print Hello
                  var key1 = value1
                  public var key2 = value2
                  public encrypt var key3 = 0
                variables:
                  - name: key2
                    value: value2
                    type: normal
                    line: 3
                    comment: ''
                  - name: key3
                    value: <encrypted>
                    type: encrypted
                    line: 4
                    comment: ''
                hash: 1c264e7285b12cb21e14bfe4f916808fa08c8dd5
                last_modified: '2022-02-04T09:10:13Z'
  /v1/extractors/{extractor_name}:
    get:
      tags:
        - Data pipelines > /extractors
      summary: Retrieve an extractor
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: extractor_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:11:18 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X62bb6384361e96c4b8f46ec55195a6e1
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X62bb6384361e96c4b8f46ec55195a6e1
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-PGEpabRd3GLvY9RRlsSI7UioCMgF59Xw';style-src 'self'
                  'nonce-PGEpabRd3GLvY9RRlsSI7UioCMgF59Xw';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: cad80ab2-5da0-4d59-b26d-3bc38dcc1761
          content:
            application/json:
              schema:
                type: object
              example:
                name: MyExtractor
                contents: |-
                  print Hello
                  var key1 = value1
                  public var key2 = value2
                  public encrypted var key3 = fV5WxHB6IA7M2BjrAx0jLA==
                variables:
                  - name: key2
                    value: value2
                    type: normal
                    line: 3
                    comment: ''
                  - name: key3
                    value: <encrypted>
                    type: encrypted
                    line: 4
                    comment: ''
                hash: 04460da520d3cf3ef36263f645fe7e46d18b91fa
                last_modified: '2022-02-04T09:10:13Z'
    patch:
      tags:
        - Data pipelines > /extractors
      summary: Update an extractor (variables)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"variables\": [\r\n        {\r\n            \"name\":
                \"key2\",\r\n            \"value\": \"value2\",\r\n           
                \"type\": \"normal\"\r\n        },\r\n        {\r\n           
                \"name\": \"key3\",\r\n            \"value\":
                \"value3\",\r\n            \"type\": \"normal\"\r\n       
                }\r\n    ]\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: extractor_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data pipelines > /extractors
      summary: Delete an extractor
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: extractor_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:31:06 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X076bcabd4e5d38f1744b64000238a633
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X076bcabd4e5d38f1744b64000238a633
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-nnmG6LsqtgpBsYx1lTjerb8j5qc3XPgq';style-src 'self'
                  'nonce-nnmG6LsqtgpBsYx1lTjerb8j5qc3XPgq';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: e708f866-9154-4c2d-aab5-02ef714b4b00
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/jobs:
    post:
      tags:
        - Data pipelines > /extractors
      summary: Run an extractor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: job
                  attributes:
                    type: extract
                    id: '{{extractor_name}}'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: arguments
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/transformers:
    get:
      tags:
        - Data pipelines > /transformers
      summary: Retrieve a list of transformers
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Data pipelines > /transformers
      summary: Add a new transformer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"name\": \"Transformer test {{$randomInt}}\",\r\n 
                \"contents\": \"# script here\"\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 15:53:47 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X99d7ae859bfee38b9ccd03ab94e7e457
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X99d7ae859bfee38b9ccd03ab94e7e457
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-SKAIwKRPZ9TnJ53bYDN6G1VbTYhQDYAz';style-src 'self'
                  'nonce-SKAIwKRPZ9TnJ53bYDN6G1VbTYhQDYAz';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: f04bbeab-35e2-46d8-94b1-ba21a6f080b4
          content:
            application/json:
              schema:
                type: object
              example:
                name: Transformer_test_465
                contents: '# script here'
                hash: d76e9395d92c0263e8462f7a3aaa4f11cd45df35
                last_modified: '2022-02-01T15:53:47Z'
  /v1/transformers/{transformer_name}:
    get:
      tags:
        - Data pipelines > /transformers
      summary: Retrieve a transformer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: transformer_name
          in: path
          schema:
            type: string
          required: true
          example: '{{transformer_name}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:33:22 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X027857f61af915f5292f12a937f44b41
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X027857f61af915f5292f12a937f44b41
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-1x4eaqsvMBwZClaDUSq89SQHWEgBzW3J';style-src 'self'
                  'nonce-1x4eaqsvMBwZClaDUSq89SQHWEgBzW3J';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 5eee3947-4125-4173-90b7-7d84cd02abb8
          content:
            application/json:
              schema:
                type: object
              example:
                name: test
                contents: "# usage data\r\nimport usage from test\r\noption services = overwrite\r\nfinish\r\n\r\noption services = overwrite\r\n\r\nservices {\r\n    service_type = automatic\r\n    description_col = description\r\n    category_col = category\r\n    instance_col = UniqueID\r\n    usages_col = service_name\r\n    rate_col = rate\r\n    cogs_col = cogs\r\n    interval_col  = interval\r\n    model_col = model\r\n    unit_label_col = unit\r\n    consumption_col = quantity\r\n}\r\n"
                hash: b46ac2d312397e9343a8f59360f361197ca89273
                last_modified: '2022-02-04T09:09:16Z'
    patch:
      tags:
        - Data pipelines > /transformers
      summary: Update a transformer
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\r\n  \"contents\": \"# modified script here\"\r\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: transformer_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data pipelines > /transformers
      summary: Delete a transformer
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: transformer_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:38:03 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X0deb90e36eed194b117bdd583b7e16d1
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X0deb90e36eed194b117bdd583b7e16d1
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-PxhO5QqkqpupROWRKpVh2W9udAUiaxnF';style-src 'self'
                  'nonce-PxhO5QqkqpupROWRKpVh2W9udAUiaxnF';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: d55ebbc5-d9cf-4400-b23e-32a24f7a248d
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/transformers/{transformer_name}/run:
    post:
      tags:
        - Data pipelines > /transformers
      summary: Run a transformer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: date
          in: query
          schema:
            type: string
          description: Date to run the fransformer for (in `YYYY-MM-DD` format).
          example: '{{date}}'
        - name: start_date
          in: query
          schema:
            type: string
          description: >-
            If the transformer should be run for a range of dates, the start
            date to run the fransformer for (in `YYYY-MM-DD` format).
        - name: end_date
          in: query
          schema:
            type: string
          description: >-
            If the transformer should be run for a range of dates, the end date
            to run the fransformer for (in `YYYY-MM-DD` format).
        - name: limit
          in: query
          schema:
            type: string
          description: Limit the number of records to preview, defaults to `10`.
        - name: break_at
          in: query
          schema:
            type: string
          description: >-
            When in preview mode, stop executing the transformer before this
            line.
        - name: preview
          in: query
          schema:
            type: string
          description: >-
            If set to `1`, all statements which modify the system will be
            skipped and the default dataset will be included with the response.
        - name: snapshot_deset
          in: query
          schema:
            type: string
          description: >-
            With preview only  - name of dset to preview. If not selected,
            default dset will be used.
        - name: environment_id
          in: query
          schema:
            type: string
          description: Environment ID (optional)
        - name: transformer_name
          in: path
          schema:
            type: string
          required: true
          example: '{{transformer_name}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/dsets:
    get:
      tags:
        - Data pipelines > /dsets
      summary: Retrieve a list of datasets
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `services`,
            `reports`, `metadatadefinition`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/dsets/{name}:
    get:
      tags:
        - Data pipelines > /dsets
      summary: Retrieve a dataset
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: name
          in: path
          schema:
            type: string
          required: true
          example: '{{dset_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Data pipelines > /dsets
      summary: Update an dataset
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n    \"data\": {\r\n        \"type\": \"dset\",\r\n       
                \"id\": \"{{dset_id}}\",\r\n        \"relationships\":
                {\r\n            \"metadatadefinition\": {\r\n               
                \"data\": {\r\n                    \"type\":
                \"metadatadefinition\",\r\n                    \"id\":
                \"{{metadatadefinition_id}}\"\r\n               
                }\r\n            }\r\n        }\r\n    }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: ''
          in: query
          schema:
            type: string
        - name: name
          in: path
          schema:
            type: string
          required: true
          example: '{{dset_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data pipelines > /dsets
      summary: Delete a dataset
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            The start of the date range (inclusive) you want to delete from the
            dataset. If not specified, use the first date of the dataset.
          example: '{{start}}'
        - name: end
          in: query
          schema:
            type: string
          description: >-
            The end of the date range (inclusive) you want to delete from the
            dataset. If not specified, use the last date of the dataset.
          example: '{{end}}'
        - name: name
          in: path
          schema:
            type: string
          required: true
          example: '{{dset_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/file:
    post:
      tags:
        - Data pipelines > /file
      summary: Upload a file
      description: >-
        Only the following file types are accepted:


        - csv

        - txt

        - json

        - xml


        Uploaded files are stored as
        `%EXIVITY_HOME_PATH%/import/[group]/[yyyy]/[mm]/[dd]_uploaded_[sequence].[extension]`,
        where _sequence_ is a 3 characters long numberic string with padded
        zeros (e.g. `001` or `026`).


        _Note: starting with Exivity v3.0.0, this endpoint will no longer
        include the `/import/` prefix in the returned JSON response._
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: File to be uploaded
                  format: binary
                group:
                  type: string
                  description: Optional parameter to specify group (default=generic)
                date:
                  type: string
                  description: >-
                    Optional parameter to specify date in YYYY-MM-DD format
                    (default=current date)
                sequence:
                  type: string
                  description: >-
                    Optional parameter to specify sequence (default=1 or auto
                    incrementing if current sequence is already in use)
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Thu, 02 Jun 2022 14:24:50 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X365cdf2ad1db92de04da287ab112e77a
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X365cdf2ad1db92de04da287ab112e77a
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-DFpgcrIqVXHLOadu2ZbbB8aTm8MLwvT2';style-src 'self'
                  'nonce-DFpgcrIqVXHLOadu2ZbbB8aTm8MLwvT2';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: cda7e03a-e1c7-470c-9a65-92155220f0ad
          content:
            application/json:
              schema:
                type: object
              example:
                filename: /generic/2022/06/02_uploaded_001.txt
  /v1/file/a.txt:
    put:
      tags:
        - Data pipelines > /file
      summary: Upload a file into a folder
      description: "Only the following file types are accepted:\r\n\r\n- csv\r\n- txt\r\n- json\r\n- xml\r\n\r\nUploaded files are stored as `%EXIVITY_HOME_PATH%/import/[path]`, where the `path` is derived from the request URL. Existing files will be overwritten."
      requestBody:
        content:
          text/plain: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/x-www-form-urlencoded
      responses:
        '400':
          description: Successful response
          content:
            application/json: {}
  /v1/file/{folder}:
    get:
      tags:
        - Data pipelines > /file
      summary: List files in folder
      description: >-
        List the files in a given folder.  

        Example:


        - /v1/file/generic

        - /v1/file/generic/2023
            

        All files are stored in the `%EXIVITY_HOME_PATH%/import` folder. So
        **/v1/file/generic** would return the files from
        `%EXIVITY_HOME_PATH%/import/generic`.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder
          in: path
          schema:
            type: string
          required: true
          description: Folder path
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Thu, 01 Jun 2023 10:28:21 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.6
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xa27a8d61715227559d70d17795dd716e
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xa27a8d61715227559d70d17795dd716e
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-dLpwQNl8MwCnAHrwG3Y9sNoVgVn3FWxK';style-src 'self'
                  'nonce-dLpwQNl8MwCnAHrwG3Y9sNoVgVn3FWxK';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: c26fc692-8bb4-490d-a8ea-06d3f3f7a44d
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: List files in specific folder
                  value:
                    data:
                      - type: file
                        name: 01_uploaded_001.txt
                        path: /generic/2023/06
                example-1:
                  summary: List files in root folder
                  value:
                    data:
                      - type: folder
                        name: generic
                        path: /
                        children:
                          - type: folder
                            name: '2023'
                            path: /generic
                            children:
                              - type: folder
                                name: '06'
                                path: /generic/2023
                                children:
                                  - type: file
                                    name: 01_uploaded_001.txt
                                    path: /generic/2023/06
                      - type: folder
                        name: temp
                        path: /
                        children:
                          - type: folder
                            name: '2023'
                            path: /temp
                            children:
                              - type: folder
                                name: '06'
                                path: /temp/2023
                                children:
                                  - type: file
                                    name: 01_uploaded_001.txt
                                    path: /temp/2023/06
                                  - type: file
                                    name: 01_uploaded_002.txt
                                    path: /temp/2023/06
  /v1/file/{folder}/{filename}:
    get:
      tags:
        - Data pipelines > /file
      summary: Retrieve file
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder
          in: path
          schema:
            type: string
          required: true
        - name: filename
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data pipelines > /file
      summary: Delete a file
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder
          in: path
          schema:
            type: string
          required: true
        - name: filename
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Successful response
          content:
            application/json: {}
  /v1/metadatadefinitions:
    get:
      tags:
        - Data pipelines > /metadatadefinitions
      summary: Retrieve a list of metadata definitions
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[name]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `metadata`,
            `datasets`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Data pipelines > /metadatadefinitions
      summary: Add a new metadata definition
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"metadatadefinition\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"name\": \"Test definition\",\r\n\t\t\t\"fields\":
                [\r\n\t\t\t\t{\r\n\t\t\t\t  \"name\": \"country\",\r\n\t\t\t\t 
                \"type\":
                \"string\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 15:53:37 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: >-
                  http://localhost:8012/v1/MetadataDefinition/MetadataDefinitions
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X410554f4a7443d5db3fe846ed959c80f
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-YcJ4NZjHsqcGYUPZtoCiDLfj8pzjCegN';style-src 'self'
                  'nonce-YcJ4NZjHsqcGYUPZtoCiDLfj8pzjCegN';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: ced32353-e701-473d-b967-2ced43bc1858
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Add a new metadata definition (string)
                  value:
                    data:
                      type: metadatadefinition
                      id: '2'
                      attributes:
                        name: Test definition
                        fields:
                          - name: country
                            type: string
                      links:
                        self: http://localhost:8012/v1/metadatadefinitions/2
                      relationships:
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/2/relationships/metadata
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/2/metadata
                        datasets:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/2/relationships/datasets
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/2/datasets
                example-1:
                  summary: Add a new metadata definition (string with regex validation)
                  value:
                    data:
                      type: metadatadefinition
                      id: '5'
                      attributes:
                        name: Test definition
                        fields:
                          - name: colour
                            type: string
                            validate: /([a-z])\w+/
                      links:
                        self: http://localhost:8012/v1/metadatadefinitions/5
                      relationships:
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/5/relationships/metadata
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/5/metadata
                        datasets:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/5/relationships/datasets
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/5/datasets
                example-2:
                  summary: Add a new metadata definition (list)
                  value:
                    data:
                      type: metadatadefinition
                      id: '6'
                      attributes:
                        name: Country
                        fields:
                          - list:
                              - France
                              - The Netherlands
                              - Germany
                              - Spain
                              - Japan
                            name: country
                            type: list
                      links:
                        self: http://localhost:8012/v1/metadatadefinitions/6
                      relationships:
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/6/relationships/metadata
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/6/metadata
                        datasets:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/6/relationships/datasets
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/6/datasets
                example-3:
                  summary: Add a new metadata definition (date)
                  value:
                    data:
                      type: metadatadefinition
                      id: '7'
                      attributes:
                        name: Date Of Birth
                        fields:
                          - name: dob
                            type: date
                      links:
                        self: http://localhost:8012/v1/metadatadefinitions/7
                      relationships:
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/7/relationships/metadata
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/7/metadata
                        datasets:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/7/relationships/datasets
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/7/datasets
                example-4:
                  summary: Add a new metadata definition (numeric)
                  value:
                    data:
                      type: metadatadefinition
                      id: '8'
                      attributes:
                        name: Number
                        fields:
                          - name: cars
                            type: numeric
                      links:
                        self: http://localhost:8012/v1/metadatadefinitions/8
                      relationships:
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/8/relationships/metadata
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/8/metadata
                        datasets:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/8/relationships/datasets
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/8/datasets
                example-5:
                  summary: Add a new metadata definition (mulitple)
                  value:
                    data:
                      type: metadatadefinition
                      id: '9'
                      attributes:
                        name: Employee
                        fields:
                          - list:
                              - France
                              - The Netherlands
                              - Germany
                              - Spain
                              - Japan
                            name: country
                            type: list
                          - name: colour
                            type: string
                            validate: /([a-z])\w+/
                          - name: dob
                            type: date
                          - name: cars
                            type: date
                      links:
                        self: http://localhost:8012/v1/metadatadefinitions/9
                      relationships:
                        metadata:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/9/relationships/metadata
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/9/metadata
                        datasets:
                          links:
                            self: >-
                              http://localhost:8012/v1/metadatadefinitions/9/relationships/datasets
                            related: >-
                              http://localhost:8012/v1/metadatadefinitions/9/datasets
  /v1/metadatadefinitions/{metadatadefinition_id}/:
    get:
      tags:
        - Data pipelines > /metadatadefinitions
      summary: Retrieve a metadata definition
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: Include additional related resources.
        - name: metadatadefinition_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:40:42 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xdc8a5a604634bc6ca3f98917f5b7e5d6
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-HX1KoKuxsFcwIrwNsTNLcNTDn9hXxdWT';style-src 'self'
                  'nonce-HX1KoKuxsFcwIrwNsTNLcNTDn9hXxdWT';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 20d378f7-ff64-4908-8b35-5cb38deba070
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: metadatadefinition
                  id: '1'
                  attributes:
                    name: Test definition
                    fields:
                      - name: country
                        type: string
                  links:
                    self: http://localhost:8012/v1/metadatadefinitions/1
                  relationships:
                    metadata:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadatadefinitions/1/relationships/metadata
                        related: >-
                          http://localhost:8012/v1/metadatadefinitions/1/metadata
                    datasets:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadatadefinitions/1/relationships/datasets
                        related: >-
                          http://localhost:8012/v1/metadatadefinitions/1/datasets
  /v1/metadatadefinitions/{metadata_definition_id}:
    patch:
      tags:
        - Data pipelines > /metadatadefinitions
      summary: Update a metadata definition
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"metadatadefinition\",\r\n\t\t\"id\":
                \"{{metadatadefinition_id}}\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"name\": \"Modified test definition -
                {{$guid}}\",\r\n\t\t\t\"fields\":
                [\r\n\t\t\t\t{\r\n\t\t\t        \"name\":
                \"country\",\r\n\t\t\t\t    \"type\":
                \"string\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n                   
                \"name\": \"city\",\r\n\t\t\t\t    \"type\":
                \"string\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: metadata_definition_id
          in: path
          schema:
            type: string
          required: true
          example: '{{metadatadefinition_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 05 Sep 2023 11:39:51 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xbec6399d6191b7c2c2b98ba3aa9e4628
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-BsqM6lmC8Svr7UZJdWBVj9hTIesxBf30';style-src 'self'
                  'nonce-BsqM6lmC8Svr7UZJdWBVj9hTIesxBf30';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: d0956825-9c46-4a0f-9bd3-b41321382212
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: metadatadefinition
                  id: '2'
                  attributes:
                    name: >-
                      Modified test definition -
                      c9bb0f79-c9fb-41f5-8f5b-2d22b614063f
                    fields:
                      - name: country
                        type: string
                      - name: city
                        type: string
                  links:
                    self: http://localhost:8012/v1/metadatadefinitions/2
                  relationships:
                    metadata:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadatadefinitions/2/relationships/metadata
                        related: >-
                          http://localhost:8012/v1/metadatadefinitions/2/metadata
                    datasets:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadatadefinitions/2/relationships/datasets
                        related: >-
                          http://localhost:8012/v1/metadatadefinitions/2/datasets
  /v1/metadatadefinitions/{metadatadefinition_id}:
    delete:
      tags:
        - Data pipelines > /metadatadefinitions
      summary: Delete a metadata definition
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metadatadefinition_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 09:40:54 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X139dbee20c0bda4b2ee56c281a7d4b54
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X139dbee20c0bda4b2ee56c281a7d4b54
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-HCg5ycOXmMkOqbbzSPoiYqOuJJ3ojKL7';style-src 'self'
                  'nonce-HCg5ycOXmMkOqbbzSPoiYqOuJJ3ojKL7';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: dd52f7e2-ae6c-4c9b-b710-ebf74d584d3f
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/metadata:
    post:
      tags:
        - Data pipelines > /metadata
      summary: Add new metadata
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"metadata\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"values\":
                {\r\n\t\t\t\t\"country\": \"The
                Netherlands\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"relationships\":
                {\r\n\t\t\t\"definition\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\":
                \"metadatadefinition\",\r\n\t\t\t\t\t\"id\":
                \"{{metadatadefinition_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 01 Feb 2022 15:53:23 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Metadata/Metadatas
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X46f67613b6e44fd564ef6becd22f3e84
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-LtMFNMZ6vC0ljOsq5At3GR6f80gdp3cs';style-src 'self'
                  'nonce-LtMFNMZ6vC0ljOsq5At3GR6f80gdp3cs';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: d75207f6-2909-4a20-99fd-40a1ff1d78eb
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: metadata
                  id: '1'
                  attributes:
                    values:
                      country: The Netherlands
                  links:
                    self: http://localhost:8012/v1/metadata/1
                  relationships:
                    accounts:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadata/1/relationships/accounts
                        related: http://localhost:8012/v1/metadata/1/accounts
                    definition:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadata/1/relationships/definition
                        related: http://localhost:8012/v1/metadata/1/definition
                    services:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadata/1/relationships/services
                        related: http://localhost:8012/v1/metadata/1/services
    get:
      tags:
        - Data pipelines > /metadata
      summary: Retrieve a list of metadata
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[name]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `definition`,
            `accounts`, `services`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/metadata/{metadata_id}/:
    get:
      tags:
        - Data pipelines > /metadata
      summary: Retrieve metadata
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: Include additional related resources.
        - name: metadata_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:14:50 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X66262b81b794a2c4746d392d58ba5d45
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-NnLDJjSh3VHljBQuaGf1YQlI6lFlhJQP';style-src 'self'
                  'nonce-NnLDJjSh3VHljBQuaGf1YQlI6lFlhJQP';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: c12eaef4-f368-43c5-9c8a-7dd29f6892f4
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: metadata
                  id: '2'
                  attributes:
                    values:
                      country: The Netherlands
                  links:
                    self: http://localhost:8012/v1/metadata/2
                  relationships:
                    accounts:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadata/2/relationships/accounts
                        related: http://localhost:8012/v1/metadata/2/accounts
                    definition:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadata/2/relationships/definition
                        related: http://localhost:8012/v1/metadata/2/definition
                    services:
                      links:
                        self: >-
                          http://localhost:8012/v1/metadata/2/relationships/services
                        related: http://localhost:8012/v1/metadata/2/services
  /v1/metadata/{metadata_id}:
    patch:
      tags:
        - Data pipelines > /metadata
      summary: Update metadata
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"metadata\",\r\n\t\t\"id\":
                \"{{metadata_id}}\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"values\": {\r\n\t\t\t\t\"country\": \"The
                Netherlands\",\r\n\t\t\t\t\"city\":
                \"Zeist\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: metadata_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data pipelines > /metadata
      summary: Delete metadata
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metadata_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:14:59 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xb3c42d2f6ee17b42e0ceed441e5bcfe2
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xb3c42d2f6ee17b42e0ceed441e5bcfe2
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-zxkcCdbp5stfPsUjbWfSsqSu0oq7mE7r';style-src 'self'
                  'nonce-zxkcCdbp5stfPsUjbWfSsqSu0oq7mE7r';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: cd36133a-0b78-4db0-8e58-4cdd8d8819f3
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/workflows:
    post:
      tags:
        - Data pipelines > /workflows
      summary: Add a new workflow
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\": \"workflow\",\r\n   
                \t\"attributes\": {\r\n    \t\t\"name\":
                \"test\",\r\n            \"description\": \"This is test
                task\"\r\n    \t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:17:15 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Workflow/Workflows
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf0eb0fc1c1bb9b1038766023915ef353
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-mcMqOAds8DaCyx3Qi2n8Q50WleEDOaC2';style-src 'self'
                  'nonce-mcMqOAds8DaCyx3Qi2n8Q50WleEDOaC2';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: d045e665-1040-4955-80eb-8824e124763b
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflow
                  id: '1'
                  attributes:
                    name: test
                    description: This is test task
                    created_at: '2022-02-04T10:17:15Z'
                    updated_at: '2022-02-04T10:17:15Z'
                  links:
                    self: http://localhost:8012/v1/workflows/1
                  relationships:
                    runs:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/1/relationships/runs
                        related: http://localhost:8012/v1/workflows/1/runs
                    steps:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/1/relationships/steps
                        related: http://localhost:8012/v1/workflows/1/steps
                    schedules:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/1/relationships/schedules
                        related: http://localhost:8012/v1/workflows/1/schedules
    get:
      tags:
        - Data pipelines > /workflows
      summary: Retrieve a list of workflows
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `steps`,
            `schedules`, `runs`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 25 Feb 2019 13:24:02 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.1.21
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: workflow
                    id: '24'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-19T09:35:02+00:00'
                      updated_at: '2019-02-19T09:35:03+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/24
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/24/relationships/runs
                          related: https://localhost:8012/v1/workflows/24/runs
                        data:
                          - type: workflowrun
                            id: '2'
                          - type: workflowrun
                            id: '3'
                  - type: workflow
                    id: '25'
                    attributes:
                      name: test
                      description: This is test task
                      locked: false
                      created_at: '2019-02-19T09:35:59+00:00'
                      updated_at: '2019-02-19T13:26:14+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/25
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/25/relationships/runs
                          related: https://localhost:8012/v1/workflows/25/runs
                        data: []
                  - type: workflow
                    id: '31'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-19T10:27:14+00:00'
                      updated_at: '2019-02-19T10:27:15+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/31
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/31/relationships/runs
                          related: https://localhost:8012/v1/workflows/31/runs
                        data: []
                  - type: workflow
                    id: '37'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-19T10:31:07+00:00'
                      updated_at: '2019-02-19T10:31:08+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/37
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/37/relationships/runs
                          related: https://localhost:8012/v1/workflows/37/runs
                        data:
                          - type: workflowrun
                            id: '7'
                          - type: workflowrun
                            id: '10'
                  - type: workflow
                    id: '41'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-19T12:12:34+00:00'
                      updated_at: '2019-02-19T12:12:39+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/41
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/41/relationships/runs
                          related: https://localhost:8012/v1/workflows/41/runs
                        data: []
                  - type: workflow
                    id: '45'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-19T12:40:54+00:00'
                      updated_at: '2019-02-19T12:41:00+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/45
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/45/relationships/runs
                          related: https://localhost:8012/v1/workflows/45/runs
                        data:
                          - type: workflowrun
                            id: '1'
                  - type: workflow
                    id: '46'
                    attributes:
                      name: test
                      description: This is test task
                      locked: false
                      created_at: '2019-02-19T13:49:51+00:00'
                      updated_at: '2019-02-19T13:49:51+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/46
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/46/relationships/runs
                          related: https://localhost:8012/v1/workflows/46/runs
                        data:
                          - type: workflowrun
                            id: '5'
                  - type: workflow
                    id: '47'
                    attributes:
                      name: test
                      description: This is test task
                      locked: false
                      created_at: '2019-02-19T13:50:14+00:00'
                      updated_at: '2019-02-19T13:50:14+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/47
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/47/relationships/runs
                          related: https://localhost:8012/v1/workflows/47/runs
                        data: []
                  - type: workflow
                    id: '51'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-20T16:01:21+00:00'
                      updated_at: '2019-02-20T16:01:26+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/51
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/51/relationships/runs
                          related: https://localhost:8012/v1/workflows/51/runs
                        data: []
                  - type: workflow
                    id: '57'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-25T08:23:01+00:00'
                      updated_at: '2019-02-25T08:23:06+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/57
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/57/relationships/runs
                          related: https://localhost:8012/v1/workflows/57/runs
                        data: []
                  - type: workflow
                    id: '61'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-25T08:26:24+00:00'
                      updated_at: '2019-02-25T08:26:28+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/61
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/61/relationships/runs
                          related: https://localhost:8012/v1/workflows/61/runs
                        data: []
                  - type: workflow
                    id: '65'
                    attributes:
                      name: modified test
                      description: This is a modified test task
                      locked: false
                      created_at: '2019-02-25T12:26:01+00:00'
                      updated_at: '2019-02-25T12:26:05+00:00'
                    links:
                      self: https://localhost:8012/v1/workflows/65
                    relationships:
                      runs:
                        links:
                          self: >-
                            https://localhost:8012/v1/workflows/65/relationships/runs
                          related: https://localhost:8012/v1/workflows/65/runs
                        data: []
                included:
                  - type: workflowrun
                    id: '2'
                    attributes:
                      start:
                        date: '2019-02-19 14:34:52.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      end:
                        date: '2019-02-19 14:34:52.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      status: 3
                    links:
                      self: https://localhost:8012/v1/workflowruns/2
                  - type: workflowrun
                    id: '3'
                    attributes:
                      start:
                        date: '2019-02-19 14:35:00.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      end:
                        date: '2019-02-19 14:35:00.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      status: 5
                    links:
                      self: https://localhost:8012/v1/workflowruns/3
                  - type: workflowrun
                    id: '7'
                    attributes:
                      start:
                        date: '2019-02-20 14:33:27.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      end:
                        date: '2019-02-20 14:33:27.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      status: 5
                    links:
                      self: https://localhost:8012/v1/workflowruns/7
                  - type: workflowrun
                    id: '10'
                    attributes:
                      start:
                        date: '2019-02-20 14:33:28.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      end:
                        date: '2019-02-20 14:33:28.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      status: 5
                    links:
                      self: https://localhost:8012/v1/workflowruns/10
                  - type: workflowrun
                    id: '1'
                    attributes:
                      start:
                        date: '2019-02-19 14:34:52.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      end:
                        date: '2019-02-19 14:34:52.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      status: 3
                    links:
                      self: https://localhost:8012/v1/workflowruns/1
                  - type: workflowrun
                    id: '5'
                    attributes:
                      start:
                        date: '2019-02-19 14:35:03.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      end:
                        date: '2019-02-19 14:35:03.000000'
                        timezone_type: 1
                        timezone: '+00:00'
                      status: 5
                    links:
                      self: https://localhost:8012/v1/workflowruns/5
                meta:
                  pagination:
                    total: 12
                    count: 12
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    https://localhost:8012/v1/workflows?page%5Blimit%5D=&page%5Bruns%5D%5Blimit%5D=2&sort=&filter%5Battribute%5D=&include=runs&page%5Boffset%5D=1
                  first: >-
                    https://localhost:8012/v1/workflows?page%5Blimit%5D=&page%5Bruns%5D%5Blimit%5D=2&sort=&filter%5Battribute%5D=&include=runs&page%5Boffset%5D=1
                  last: >-
                    https://localhost:8012/v1/workflows?page%5Blimit%5D=&page%5Bruns%5D%5Blimit%5D=2&sort=&filter%5Battribute%5D=&include=runs&page%5Boffset%5D=1
  /v1/workflows/{workflowId}:
    get:
      tags:
        - Data pipelines > /workflows
      summary: Retrieve a workflow
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
        - name: workflowId
          in: path
          schema:
            type: string
          required: true
          example: '{{workflow_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:17:28 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xd1982c0f1100b0a0b535a059a81ce4b4
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-w5Fy8XS9tHYNbwbhTZWhYEaVBXUCYczo';style-src 'self'
                  'nonce-w5Fy8XS9tHYNbwbhTZWhYEaVBXUCYczo';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 78cde0d4-0baa-42f7-87cf-3ddef16cf24c
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflow
                  id: '1'
                  attributes:
                    name: test
                    description: This is test task
                    created_at: '2022-02-04T10:17:15Z'
                    updated_at: '2022-02-04T10:17:15Z'
                  links:
                    self: http://localhost:8012/v1/workflows/1
                  relationships:
                    runs:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/1/relationships/runs
                        related: http://localhost:8012/v1/workflows/1/runs
                    steps:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/1/relationships/steps
                        related: http://localhost:8012/v1/workflows/1/steps
                    schedules:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/1/relationships/schedules
                        related: http://localhost:8012/v1/workflows/1/schedules
  /v1/workflows/{workflow_id}:
    patch:
      tags:
        - Data pipelines > /workflows
      summary: Update a workflow
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"workflow\",\r\n   
                \"id\": \"{{workflow_id}}\",\r\n    \"attributes\":
                {\r\n\t\t\"name\": \"modified test\",\r\n\t\t\"description\":
                \"This is a modified test task\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 05 Sep 2023 11:50:06 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf5104d68289bf7d35541c03ae96a0500
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-HVrIhXAL0PYWAim7CZXnUUtMSSqaVOpS';style-src 'self'
                  'nonce-HVrIhXAL0PYWAim7CZXnUUtMSSqaVOpS';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 5c4f3acb-fae7-4715-80e4-7c8dedb48bbc
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflow
                  id: '5'
                  attributes:
                    name: modified test
                    description: This is a modified test task
                    created_at: '2023-09-05T11:49:59Z'
                    updated_at: '2023-09-05T11:50:06Z'
                  links:
                    self: http://localhost:8012/v1/workflows/5
                  relationships:
                    runs:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/5/relationships/runs
                        related: http://localhost:8012/v1/workflows/5/runs
                    steps:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/5/relationships/steps
                        related: http://localhost:8012/v1/workflows/5/steps
                    schedules:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflows/5/relationships/schedules
                        related: http://localhost:8012/v1/workflows/5/schedules
    delete:
      tags:
        - Data pipelines > /workflows
      summary: Delete a workflow
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:17:34 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X94456b43569c7281fbecb72012ce3015
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X94456b43569c7281fbecb72012ce3015
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-mmH3VsECX3NzfrxAc5UE9HOFpNvn5Vlm';style-src 'self'
                  'nonce-mmH3VsECX3NzfrxAc5UE9HOFpNvn5Vlm';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 56808d47-a632-446e-afa6-caae5123cfcf
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/workflows/{workflow_id}/run:
    post:
      tags:
        - Data pipelines > /workflows
      summary: Run a workflow
      description: >-
        Once a workflow has been created and steps have been added, you can now
        run the workflow. See `workflow_runs` and `workflow_step_logs` to view
        the output of a run.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '""'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: date
          in: query
          schema:
            type: string
          description: >-
            The date to manually run the workflow for (in `YYYY-MM-DD` format).
            Defaults to the current date.
        - name: workflow_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:31:31 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X012ac040ceef439202bd4999e5bfd728
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X012ac040ceef439202bd4999e5bfd728
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-2jjra9G5pnWd42XU1P74p91rRNMpN1ue';style-src 'self'
                  'nonce-2jjra9G5pnWd42XU1P74p91rRNMpN1ue';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: b07457fc-6fb8-4b12-ba3a-4d0d5be8b9b5
          content:
            application/json:
              schema:
                type: object
              example:
                output: []
                status: true
  /v1/workflowschedules:
    post:
      tags:
        - Data pipelines > /workflowschedules
      summary: Add a new schedule
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"workflowschedule\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"start_time\":
                \"{{tomorrow}}\",\r\n\t\t\t\"timezone\":
                \"Europe/Amsterdam\",\r\n\t\t\t\"adjust_for_dst\":
                true,\r\n\t\t\t\"frequency\":
                \"daily\",\r\n\t\t\t\"frequency_modifier\":
                2\r\n\t\t},\r\n\t\t\"relationships\": {\r\n\t\t\t\"workflow\":
                {\r\n\t\t\t\t\"data\": {\r\n\t\t\t\t\t\"type\":
                \"workflow\",\r\n\t\t\t\t\t\"id\":
                \"{{workflow_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:19:40 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/WorkflowSchedule/WorkflowSchedules
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X048f5350fd08da3544c5dcdac7de1a1b
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-zUBusmtAXMAsCA7SWmHpbWUlmqW6XvRJ';style-src 'self'
                  'nonce-zUBusmtAXMAsCA7SWmHpbWUlmqW6XvRJ';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 4fea186b-9645-4046-b044-31b6691c79c3
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflowschedule
                  id: '1'
                  attributes:
                    start_time: '2020-01-01T18:00:00Z'
                    timezone: Europe/Amsterdam
                    adjust_for_dst: true
                    frequency: daily
                    frequency_modifier: 2
                    next_run: '1970-01-01T00:00:00Z'
                  links:
                    self: http://localhost:8012/v1/workflowschedules/1
                  relationships:
                    workflow:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowschedules/1/relationships/workflow
                        related: http://localhost:8012/v1/workflowschedules/1/workflow
    get:
      tags:
        - Data pipelines > /workflowschedules
      summary: Retrieve a list of schedules
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources. Possible values: `workflow`.'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/workflowschedules/{workflowschedule_id}:
    get:
      tags:
        - Data pipelines > /workflowschedules
      summary: Retrieve a schedule
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: Include additional related resources
        - name: workflowschedule_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:20:11 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X8080573c708fcfb6e9767116beee1fee
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-jB9Dj5jU9Ij1DUGA00aopqi1sOBerhPr';style-src 'self'
                  'nonce-jB9Dj5jU9Ij1DUGA00aopqi1sOBerhPr';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 5ca9458d-a33a-4dac-aeba-d0895a034c1a
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflowschedule
                  id: '1'
                  attributes:
                    start_time: '2020-01-01T18:00:00Z'
                    timezone: Europe/Amsterdam
                    adjust_for_dst: true
                    frequency: daily
                    frequency_modifier: 2
                    next_run: '2022-02-05T18:00:00Z'
                  links:
                    self: http://localhost:8012/v1/workflowschedules/1
                  relationships:
                    workflow:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowschedules/1/relationships/workflow
                        related: http://localhost:8012/v1/workflowschedules/1/workflow
    patch:
      tags:
        - Data pipelines > /workflowschedules
      summary: Update a schedule
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\":
                \"workflowschedule\",\r\n    \"id\":
                \"{{workflowschedule_id}}\",\r\n    \"attributes\": {\r\n     
                \"timezone\": \"Europe/London\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: workflowschedule_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data pipelines > /workflowschedules
      summary: Delete a schedule
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workflowschedule_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:20:33 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf9ccd5b7be1e9d625536fd2da8bd0564
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xf9ccd5b7be1e9d625536fd2da8bd0564
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-PaZLwZmsBKrW4TYSO1tGBkRHKlBbeZSF';style-src 'self'
                  'nonce-PaZLwZmsBKrW4TYSO1tGBkRHKlBbeZSF';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: b9dac2e2-ceb4-402a-83d8-e13ff8ddd3ba
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/workflowsteps:
    post:
      tags:
        - Data pipelines > /workflowsteps
      summary: Add a new budget step (development only)
      description: |-
        #### Options

        | **attribute** | **type** | **mutability** | **description** |
        | --- | --- | --- | --- |
        | budget_id | numeric | 📝 editable | Required |
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n    \"data\": {\r\n        \"type\":
                \"workflowstep\",\r\n        \"attributes\": {\r\n           
                \"type\": \"evaluate_budget\",\r\n            \"timeout\":
                600,\r\n            \"options\": {\r\n               
                \"budget_id\": \"234\"\r\n            }\r\n        },\r\n       
                \"relationships\": {\r\n            \"workflow\":
                {\r\n                \"data\": {\r\n                   
                \"type\": \"workflow\",\r\n                    \"id\":
                \"{{workflow_id}}\"\r\n                }\r\n           
                },\r\n            \"previous\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\": \"workflowstep\",\r\n\t\t\t\t\t\"id\":
                \"{{workflowstep_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n       
                }\r\n    }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 12 Sep 2023 10:20:46 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/WorkflowStep/WorkflowSteps
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X73987a2d7a5c059750e4a0962872dce9
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-XLKILcZIBwPi2gzPAhfU8Huu0v5Sjcze';style-src 'self'
                  'nonce-XLKILcZIBwPi2gzPAhfU8Huu0v5Sjcze';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: a8f8c44d-8224-476e-a4e7-0e47865475be
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflowstep
                  id: '27'
                  attributes:
                    type: evaluate_budget
                    options:
                      budget_id: '1'
                    timeout: 600
                    wait: true
                  links:
                    self: http://localhost:8012/v1/workflowsteps/27
                  relationships:
                    workflow:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/27/relationships/workflow
                        related: http://localhost:8012/v1/workflowsteps/27/workflow
                    steplogs:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/27/relationships/steplogs
                        related: http://localhost:8012/v1/workflowsteps/27/steplogs
                    previous:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/27/relationships/previous
                        related: http://localhost:8012/v1/workflowsteps/27/previous
    get:
      tags:
        - Data pipelines > /workflowsteps
      summary: Retrieve a list of steps
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `workflow`,
            `steplogs`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Thu, 14 Apr 2022 14:36:43 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X90990ab50795a57558b2c0441a1e8dcb
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-FVMzub1Eed1xzTheMGxmZ7owkgWEDoHO';style-src 'self'
                  'nonce-FVMzub1Eed1xzTheMGxmZ7owkgWEDoHO';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 9ed02746-64e3-4937-9154-48727cc248f0
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: workflowstep
                    id: '20'
                    attributes:
                      prev: null
                      next: '19'
                      type: proximity
                      options:
                        command: exivity:gc
                        arguments: ''
                      timeout: 600
                      wait: true
                      sort: 0
                    links:
                      self: http://localhost:8012/v1/workflowsteps/20
                    relationships:
                      workflow:
                        links:
                          self: >-
                            http://localhost:8012/v1/workflowsteps/20/relationships/workflow
                          related: http://localhost:8012/v1/workflowsteps/20/workflow
                      steplogs:
                        links:
                          self: >-
                            http://localhost:8012/v1/workflowsteps/20/relationships/steplogs
                          related: http://localhost:8012/v1/workflowsteps/20/steplogs
                  - type: workflowstep
                    id: '19'
                    attributes:
                      prev: '20'
                      next: null
                      type: proximity
                      options:
                        command: exivity:gc
                        arguments: ''
                      timeout: 600
                      wait: true
                      sort: 0
                    links:
                      self: http://localhost:8012/v1/workflowsteps/19
                    relationships:
                      workflow:
                        links:
                          self: >-
                            http://localhost:8012/v1/workflowsteps/19/relationships/workflow
                          related: http://localhost:8012/v1/workflowsteps/19/workflow
                      steplogs:
                        links:
                          self: >-
                            http://localhost:8012/v1/workflowsteps/19/relationships/steplogs
                          related: http://localhost:8012/v1/workflowsteps/19/steplogs
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    http://localhost:8012/v1/workflowsteps?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    http://localhost:8012/v1/workflowsteps?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  last: >-
                    http://localhost:8012/v1/workflowsteps?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
  /v1/workflowsteps/{workflowstep_id}:
    get:
      tags:
        - Data pipelines > /workflowsteps
      summary: Retrieve a step
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `steplogs`,
            `workflow`.
        - name: workflowstep_id
          in: path
          schema:
            type: string
          required: true
          example: '{{proximity_workflowstep_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Thu, 14 Apr 2022 14:35:34 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf01dd318783334a864c9b84b4eb2cdb5
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-b2zRiIZ7nq2NNPihTgGBPRDyxvH3QADi';style-src 'self'
                  'nonce-b2zRiIZ7nq2NNPihTgGBPRDyxvH3QADi';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 0ce36394-0f1f-4605-b7cb-76a40587a444
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflowstep
                  id: '19'
                  attributes:
                    prev: null
                    next: null
                    type: proximity
                    options:
                      command: exivity:gc
                      arguments: ''
                    timeout: 600
                    wait: true
                    sort: 0
                  links:
                    self: http://localhost:8012/v1/workflowsteps/19
                  relationships:
                    workflow:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/19/relationships/workflow
                        related: http://localhost:8012/v1/workflowsteps/19/workflow
                    steplogs:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/19/relationships/steplogs
                        related: http://localhost:8012/v1/workflowsteps/19/steplogs
    patch:
      tags:
        - Data pipelines > /workflowsteps
      summary: Update a step
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n    \"data\": {\r\n        \"type\":
                \"workflowstep\",\r\n        \"id\":
                \"{{execute_workflowstep_id}}\",\r\n        \"attributes\":
                {\r\n            \"options\": {\r\n                \"command\":
                \"echo \\\"testing\\\"\"\r\n            }\r\n        }\r\n   
                }\r\n}\r\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: workflowstep_id
          in: path
          schema:
            type: string
          required: true
          example: '{{execute_workflowstep_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 05 Sep 2023 15:12:29 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xdf934bedde43dee25891d357e40c8187
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-Etg2xNhOWz0cnqvR27gIq1Ge0KKvs8OM';style-src 'self'
                  'nonce-Etg2xNhOWz0cnqvR27gIq1Ge0KKvs8OM';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: fe5807f6-a477-45ce-806d-c43df4e5c88f
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: workflowstep
                  id: '91'
                  attributes:
                    type: execute
                    options:
                      command: echo "testing"
                    timeout: 600
                    wait: true
                  links:
                    self: http://localhost:8012/v1/workflowsteps/91
                  relationships:
                    workflow:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/91/relationships/workflow
                        related: http://localhost:8012/v1/workflowsteps/91/workflow
                    steplogs:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/91/relationships/steplogs
                        related: http://localhost:8012/v1/workflowsteps/91/steplogs
                    previous:
                      links:
                        self: >-
                          http://localhost:8012/v1/workflowsteps/91/relationships/previous
                        related: http://localhost:8012/v1/workflowsteps/91/previous
    delete:
      tags:
        - Data pipelines > /workflowsteps
      summary: Delete a step
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workflowstep_id
          in: path
          schema:
            type: string
          required: true
          example: '{{proximity_workflowstep_id}}'
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:33:40 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X64eb6aebad991aaf3deffca888631f93
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X64eb6aebad991aaf3deffca888631f93
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-2BbEytlXcgoOAOl2sdJlceNEwNrovvfc';style-src 'self'
                  'nonce-2BbEytlXcgoOAOl2sdJlceNEwNrovvfc';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 4f251025-cf47-41ca-ae6b-34bb5b3af567
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/workflowsteps/{workflowstep_id}/logs:
    get:
      tags:
        - Data pipelines > /workflowsteps
      summary: Fetch step logs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workflowstep_id
          in: path
          schema:
            type: string
          required: true
          example: '{{workflowstep_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:33:11 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X6d31f78559410b1af9f570f0f81a89a3
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X6d31f78559410b1af9f570f0f81a89a3
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-5dH3IGWcQadd9ckGMMC4M563HISZfL9k';style-src 'self'
                  'nonce-5dH3IGWcQadd9ckGMMC4M563HISZfL9k';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 6ad16fe0-b4c8-434b-922e-da6479f2f597
          content:
            application/json:
              schema:
                type: object
              example:
                logs:
                  - start_timestamp: '2022-02-04T10:31:31Z'
                    end_timestamp: '2022-02-04T10:31:31Z'
                    success: false
                    status: 3
                    command: >-
                      {"job_id":2,"params":"\"testing\"","program":"echo","timeout":600,"to_date":20220204,"user_id":"469e01d8-1c95-4923-8bc6-1aebfdf30bc8","from_date":20220204}
                    output: ''
                    logfile: null
  /v1/workflowruns:
    get:
      tags:
        - Data pipelines > /workflowruns
      summary: Retrieve a list of workflow runs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `workflow`,
            `steplogs`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.3.0
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 23 Apr 2024 09:57:43 GMT
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X361912fffeaa0aa3ea79862de40908f0
            X-Clockwork-Version:
              schema:
                type: integer
                example: '9'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-DZCsXW8MaOvlYNw0adl9lCK8zEWWan4w';style-src 'self'
                  'nonce-DZCsXW8MaOvlYNw0adl9lCK8zEWWan4w';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: b5df2af0-d951-4fbf-bd15-bb49e03b3da1
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: workflowrun
                    id: '7'
                    attributes:
                      start_date: '2024-04-23T09:57:42Z'
                      end_date: '2024-04-23T09:57:42Z'
                      status: failed
                    links:
                      self: http://localhost:8012/v1/workflowruns/7
                    relationships:
                      steplogs:
                        links:
                          self: >-
                            http://localhost:8012/v1/workflowruns/7/relationships/steplogs
                          related: http://localhost:8012/v1/workflowruns/7/steplogs
                      workflow:
                        links:
                          self: >-
                            http://localhost:8012/v1/workflowruns/7/relationships/workflow
                          related: http://localhost:8012/v1/workflowruns/7/workflow
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    http://localhost:8012/v1/workflowruns?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    http://localhost:8012/v1/workflowruns?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  last: >-
                    http://localhost:8012/v1/workflowruns?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
  /v1/workflowruns/{workflowrun_id}:
    get:
      tags:
        - Data pipelines > /workflowruns
      summary: Retrieve a workflow run
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `steplogs`,
            `workflow`
        - name: workflowrun_id
          in: path
          schema:
            type: string
          required: true
          example: '{{workflowrun_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/workflowsteplogs:
    get:
      tags:
        - Data pipelines > /workflowsteplogs
      summary: Retrieve a list of workflow step logs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `run`,
            `step`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/workflowsteplogs/{workflowsteplog_id}:
    get:
      tags:
        - Data pipelines > /workflowsteplogs
      summary: Retrieve a workflow step log
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `run`,
            `step`.
        - name: workflowsteplog_id
          in: path
          schema:
            type: string
          required: true
          example: '{{workflowsteplog_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/notificationchannels:
    get:
      tags:
        - Profile > /notificationchannels
      summary: Get all notification channels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: 'Possible values: `subscriptions`, `user`.'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Profile > /notificationchannels
      summary: Create a new channel
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n       
                \"type\":\"notificationchannel\",\n        \"attributes\":
                {\n            \"type\": \"mail\",\n            \"name\":
                \"E-mail for someone\",\n            \"info\": {\n           
                \t\"recipient\": \"someone@exivity.com\"\n            }\n       
                },\n        \"relationships\": {\n        \t\"user\": {\n       
                \t\t\"data\": {\n        \t\t\t\"type\": \"user\",\n       
                \t\t\t\"id\": \"{{user_id}}\"\n        \t\t}\n       
                \t}\n        }\n    }\n}\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Wed, 03 Jul 2019 08:30:32 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.3.6
            Location:
              schema:
                type: string
                example: https://localhost:8012/v1/notificationchannel/5
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xe5f83c7faa917c5a431a80222d484915
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Phone number
                  value:
                    data:
                      type: notificationchannel
                      id: '5'
                      attributes:
                        name: My phone number
                        type: nexmo
                        info:
                          recipient: '+31612345678'
                      links:
                        self: https://localhost:8012/v1/notificationchannels/5
                example-1:
                  summary: Slack channel
                  value:
                    data:
                      type: notificationchannel
                      id: '7'
                      attributes:
                        name: My slack channel
                        type: slack
                        info:
                          recipient: >-
                            https://hooks.slack.com/services/abc123def456ghi789jkl
                      links:
                        self: https://localhost:8012/v1/notificationchannels/7
                example-2:
                  summary: Email address
                  value:
                    data:
                      type: notificationchannel
                      id: '6'
                      attributes:
                        name: E-mail for someone
                        type: mail
                        info:
                          recipient: someone@example.com
                          cc: null
                          bcc: null
                      links:
                        self: https://localhost:8012/v1/notificationchannels/6
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/notificationchannels/{notification_channel_id}:
    get:
      tags:
        - Profile > /notificationchannels
      summary: Get a channel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          example: subscriptions,user
        - name: notification_channel_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Profile > /notificationchannels
      summary: Edit a channel
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"notificationchannel\",\r\n\t\t\"id\":
                \"{{notification_channel_id}}\",\r\n\t\t\"attributes\":
                {\r\n            \"info\": {\r\n            \t\"recipient\":
                \"anybody@exivity.com\"\r\n        \t}\r\n        }\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: notification_channel_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Profile > /notificationchannels
      summary: Delete a channel
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: notification_channel_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 12:35:30 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xf770f9b2f4b14bfed3fce893c27eeac2
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xf770f9b2f4b14bfed3fce893c27eeac2
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-TNpMmGvxQag0NrwbKtzQMfbBbml5EMuE';style-src 'self'
                  'nonce-TNpMmGvxQag0NrwbKtzQMfbBbml5EMuE';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 9eb267d5-e72b-4be9-b880-8a2680113543
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/notificationsubscriptions:
    get:
      tags:
        - Profile > /notificationsubscriptions
      summary: Get all notifications subscriptions
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Profile > /notificationsubscriptions
      summary: Create new notification subscription
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"data\": {\n       
                \"type\":\"notificationsubscription\",\n        \"attributes\":
                {\n            \"name\": \"Important workflow has
                ended\",\n            \"type\": \"workflow_ended\",\n           
                \"info\": {\n            \t\"follow\": [\"*\"],\n           
                \t\"only_status\": [\"successful\", \"failed\"]\n           
                }\n        },\n        \"relationships\": {\n        \t\"user\":
                {\n        \t\t\"data\": {\n        \t\t\t\"type\":
                \"user\",\n        \t\t\t\"id\": \"{{user_id}}\"\n       
                \t\t}\n        \t},\n        \t\"channels\": {\n       
                \t\t\"data\": {\n        \t\t\t\"type\": \"channel\",\n       
                \t\t\t\"id\": \"{{notification_channel_id}}\"\n       
                \t\t}\n        \t}\n        }\n    }\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 18 Mar 2019 14:58:01 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.1.21
            Location:
              schema:
                type: string
                example: https://localhost:8012/v1/notificationsubscription/7
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: ''
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Create a new notification subscription with channel
                  value:
                    data:
                      type: notificationsubscription
                      id: '7'
                      attributes:
                        name: Important workflow has ended
                        type: workflow.ended
                        info:
                          follow:
                            - '*'
                          only_status:
                            - successful
                            - failed
                      links:
                        self: https://localhost:8012/v1/notificationsubscriptions/7
                example-1:
                  summary: Create workflow subscription with file attachement
                  value:
                    data:
                      type: notificationsubscription
                      id: '4'
                      attributes:
                        name: Important workflow has ended
                        type: workflow_ended
                        enabled: true
                        info:
                          follow:
                            - '*'
                          only_status:
                            - successful
                            - failed
                          files:
                            filename:
                              - extractor_[0-9]{,2}\.[a-z0-9]{2,4}
                              - transformer_[0-9]{,2}\.[a-z0-9]{2,4}
                            edited_since_workflow_started: true
                            compress_attachments: false
                      links:
                        self: http://localhost:8012/1/notificationsubscriptions/4
                      relationships:
                        user:
                          links:
                            self: >-
                              http://localhost:8012/1/notificationsubscription/4/relationships/user
                            related: >-
                              http://localhost:8012/1/notificationsubscription/4/user
                example-2:
                  summary: Create new budget_evaluated notificaiton subscription
                  value:
                    data:
                      type: notificationsubscription
                      id: '4'
                      attributes:
                        name: Important workflow has ended
                        type: budget_evaluated
                        enabled: true
                        info:
                          budget_id: 1
                          threshold_percentage: 80
                          only_once: true
                          account_ids:
                            - 1
                            - 2
                            - 3
                      links:
                        self: http://localhost:8012/1/notificationsubscriptions/4
                      relationships:
                        user:
                          links:
                            self: >-
                              http://localhost:8012/1/notificationsubscription/4/relationships/user
                            related: >-
                              http://localhost:8012/1/notificationsubscription/4/user
                        channels:
                          links:
                            self: >-
                              http://localhost:8012/1/notificationsubscription/4/relationships/channels
                            related: >-
                              http://localhost:8012/1/notificationsubscription/4/channels
                example-3:
                  summary: Create new report_published notificaiton subscription
                  value:
                    data:
                      type: notificationsubscription
                      id: '5'
                      attributes:
                        name: Important workflow has ended
                        type: report_published
                        enabled: true
                        info:
                          report_id: 2
                          report_type: separate
                          account_depth: 1
                          date_settings: previous_month
                          format: csv
                      links:
                        self: http://localhost:8012/1/notificationsubscriptions/5
                      relationships:
                        user:
                          links:
                            self: >-
                              http://localhost:8012/1/notificationsubscription/5/relationships/user
                            related: >-
                              http://localhost:8012/1/notificationsubscription/5/user
                        channels:
                          links:
                            self: >-
                              http://localhost:8012/1/notificationsubscription/5/relationships/channels
                            related: >-
                              http://localhost:8012/1/notificationsubscription/5/channels
  /v1/notificationsubscriptions/{notification_subscritpion_id}:
    get:
      tags:
        - Profile > /notificationsubscriptions
      summary: Get a notification subscription by ID
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          example: channels
        - name: notification_subscritpion_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Profile > /notificationsubscriptions
      summary: Edit a notification subscription
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"notificationsubscription\",\r\n\t\t\"id\":
                \"{{notification_subscritpion_id}}\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"name\": \"Super important budget
                overruns\"\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: notification_subscritpion_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Profile > /notificationsubscriptions
      summary: Delete a notification subscription
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: notification_subscritpion_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 12:36:03 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: Xc3610a09c6ac164f8ad10ee1094d8d57
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xc3610a09c6ac164f8ad10ee1094d8d57
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-8GouHED3q1ovg26nRa1gnR6cQI3bqqqA';style-src 'self'
                  'nonce-8GouHED3q1ovg26nRa1gnR6cQI3bqqqA';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 944a136c-a96d-4837-b74a-d6853860a593
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/notifications:
    get:
      tags:
        - Profile > /notifications
      summary: Get all database notification
      description: Get all database notification for auth user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/users/me:
    get:
      tags:
        - Administration > /users > /users/me
      summary: Retrieve the current user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Administration > /users > /users/me
      summary: Update the current user
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"user\",\r\n    \"id\":
                \"{{user_id}}\",\r\n    \"attributes\": {\r\n     
                \"email_address\": \"tester@exivity.com\",\r\n     
                \"current_password\": \"exivity\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/users/me/key:
    post:
      tags:
        - Administration > /users > /users/me
      summary: Generate a new key
      description: "⚠️ Available since v3.0.0.\r\n\r\nThis will invalidate all previously issued tokens."
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/users/me/state:
    patch:
      tags:
        - Administration > /users > /users/me
      summary: Update the current users app state
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\r\n\t\"state\": {\r\n\t\t\"key\": \"value\"\r\n\t}\r\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app
          in: query
          schema:
            type: string
          description: The client to update the state for. One of `glass`, `lens`.
          example: glass
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Administration > /users > /users/me
      summary: Delete the current users app state
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app
          in: query
          schema:
            type: string
          example: glass
      responses:
        '204':
          description: Successful response
          content:
            application/json: {}
  /v1/users:
    get:
      tags:
        - Administration > /users
      summary: Retrieve a list of users
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `usergroup`,
            `accounts`.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Administration > /users
      summary: Add a new user
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"user\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"username\": \"User
                - {{$randomInt}}\",\r\n\t\t\t\"email_address\":
                \"someone_{{$randomInt}}@exivity.com\",\r\n\t\t\t\"password\":
                \"super-complex-password\",\r\n\t\t\t\"account_access_type\":
                \"custom\"\r\n\t\t},\r\n\t\t\"relationships\":
                {\r\n\t\t\t\"usergroup\": {\r\n\t\t\t\t\"data\":
                {\r\n\t\t\t\t\t\"type\": \"usergroup\",\r\n\t\t\t\t\t\"id\":
                \"{{usergroup_id}}\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Successful response
          content:
            application/json: {}
  /v1/users/{new_user_id}:
    get:
      tags:
        - Administration > /users
      summary: Retrieve a user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values: `usergroup`,
            `accounts`, `channels`, `notificationsubscriptions`.
        - name: new_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Administration > /users
      summary: Update a user
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"user\",\r\n    \"id\":
                \"{{new_user_id}}\",\r\n    \"attributes\": {\r\n     
                \"username\": \"modified_user - {{$randomInt}}\",\r\n     
                \"email_address\":
                \"someone+modified_{{$randomInt}}@exivity.com\",\r\n     
                \"account_access_type\": \"all\"\r\n    }\r\n  }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: new_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Tue, 09 Nov 2021 16:20:01 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  report-uri
                  https://sentry.io/api/120999/security/?sentry_key=7935c59cd7ad4e169ed97fac6d9c5f9d;base-uri
                  'self';connect-src 'self';default-src 'self';form-action
                  'self';img-src 'self' data:;media-src 'self';object-src
                  'none';script-src 'self'
                  'nonce-deA0a21he0JbtFJxaHyEB83rQFyLn7Qt';style-src 'self'
                  'nonce-deA0a21he0JbtFJxaHyEB83rQFyLn7Qt';font-src 'self' data:
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: user
                  id: 4deaa843-6c62-4534-97b6-27bbf29d7ad8
                  attributes:
                    username: modified_user - 700
                    email_address: someone+modified_504@exivity.com
                    account_access_type: all
                    source: ldap
                    display_name: modified_user - 700
                  links:
                    self: >-
                      http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8
                  relationships:
                    usergroup:
                      links:
                        self: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/relationships/usergroup
                        related: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/usergroup
                    accounts:
                      links:
                        self: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/relationships/accounts
                        related: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/accounts
                    channels:
                      links:
                        self: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/relationships/channels
                        related: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/channels
                    notificationchannels:
                      links:
                        self: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/relationships/notificationchannels
                        related: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/notificationchannels
                    notificationsubscriptions:
                      links:
                        self: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/relationships/notificationsubscriptions
                        related: >-
                          http://localhost:8012/v1/users/4deaa843-6c62-4534-97b6-27bbf29d7ad8/notificationsubscriptions
    delete:
      tags:
        - Administration > /users
      summary: Delete a user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: new_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Successful response
          content:
            application/json: {}
  /v1/users/{new_user_id}/key:
    post:
      tags:
        - Administration > /users
      summary: Generate a new key
      description: "⚠️ Available since v3.0.0.\r\n\r\nThis will invalidate all previously issued tokens."
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: new_user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/usergroups:
    get:
      tags:
        - Administration > /usergroups
      summary: Retrieve a list of usergroups
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Administration > /usergroups
      summary: Add a new usergroup
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"usergroup\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"name\":
                \"testers\",\r\n\t\t\t\"permissions\":
                [\"manage_users\"]\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:40:11 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Usergroup/Usergroups
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X323af56c4fb301e0486c88f7c4cf7d0f
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-gv1trTAypt554N11EfFQfK9dcSjC6qST';style-src 'self'
                  'nonce-gv1trTAypt554N11EfFQfK9dcSjC6qST';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: a0b70752-55d1-419c-84f6-9172f8cdb7b8
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: usergroup
                  id: '2'
                  attributes:
                    name: testers
                    permissions:
                      - manage_users
                  links:
                    self: http://localhost:8012/v1/usergroups/2
                  relationships:
                    users:
                      links:
                        self: >-
                          http://localhost:8012/v1/usergroups/2/relationships/users
                        related: http://localhost:8012/v1/usergroups/2/users
  /v1/usergroups/{usergroup_id}:
    get:
      tags:
        - Administration > /usergroups
      summary: Retrieve a usergroup
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: usergroup_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:40:32 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X8e2cf05b5cd5d28f0319aed6d61ea6e4
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-qcMmTIePg06esIKTgCSO8vmZl4fgiUjw';style-src 'self'
                  'nonce-qcMmTIePg06esIKTgCSO8vmZl4fgiUjw';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 2909f9bd-0202-4722-acaa-3776609fef85
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: usergroup
                  id: '2'
                  attributes:
                    name: testers
                    permissions:
                      - manage_users
                  links:
                    self: http://localhost:8012/v1/usergroups/2
                  relationships:
                    users:
                      links:
                        self: >-
                          http://localhost:8012/v1/usergroups/2/relationships/users
                        related: http://localhost:8012/v1/usergroups/2/users
    patch:
      tags:
        - Administration > /usergroups
      summary: Update a usergroup
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n    \"data\": {\r\n        \"type\":
                \"usergroup\",\r\n        \"id\":
                \"{{usergroup_id}}\",\r\n        \"attributes\":
                {\r\n\t\t\t\"name\":
                \"modified_testers\",\r\n\t\t\t\"permissions\":
                [\"manage_users\", \"manage_settings\"]\r\n\t\t}\r\n    }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: usergroup_id
          in: path
          schema:
            type: string
          required: true
          example: '{{usergroup_id}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Mon, 09 May 2022 10:28:21 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xeb8203777b90fdf0e1e9f834b8aeb98e
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-zu6uqk7kFL4mWW7Fyx99cPvEG6xL5x3B';style-src 'self'
                  'nonce-zu6uqk7kFL4mWW7Fyx99cPvEG6xL5x3B';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: cfc5135e-02f5-41d7-adc9-b24e179a9399
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: usergroup
                  id: '5'
                  attributes:
                    name: testers
                    permissions:
                      - manage_users
                  links:
                    self: http://localhost:8012/v1/usergroups/5
                  relationships:
                    users:
                      links:
                        self: >-
                          http://localhost:8012/v1/usergroups/5/relationships/users
                        related: http://localhost:8012/v1/usergroups/5/users
    delete:
      tags:
        - Administration > /usergroups
      summary: Delete a usergroup
      description: >-
        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: usergroup_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:40:42 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            X-Clockwork-Id:
              schema:
                type: string
                example: X5757b8b223cea381c78dbfac006c549b
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X5757b8b223cea381c78dbfac006c549b
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-dUKQckVyuTqNsgURsVw38PE9CJ7TzLt9';style-src 'self'
                  'nonce-dUKQckVyuTqNsgURsVw38PE9CJ7TzLt9';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: ca72d4c1-80a9-4097-97ce-dfe5f401bdec
          content:
            text/plain:
              schema:
                type: string
              example: null
  /v1/configuration:
    get:
      tags:
        - Administration > /configuration
      summary: Retrieve configuration (unauthenticated)
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Administration > /configuration
      summary: Update configuration
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{  \r\n   \"configuration\":{  \r\n      \"APP_NAME\":
                \"MyNewApp\"\r\n   }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:42:02 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xfb8bd0c7529c9f7d1524cb7938d08cf0
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xfb8bd0c7529c9f7d1524cb7938d08cf0
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-ZxZ3arF8c5wF7DLRU0xZYQjjTvDSFgN2';style-src 'self'
                  'nonce-ZxZ3arF8c5wF7DLRU0xZYQjjTvDSFgN2';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 6bc23c80-b769-43b7-b889-97a88b1d6c53
          content:
            application/json:
              schema:
                type: object
              example:
                code: 200
                message: Configuration saved.
                configuration:
                  APP_DEBUG: false
                  APP_NAME: Exivity
                  APP_LOGO: null
                  APP_ICON: null
                  APP_FAVICON: null
                  APP_COLOUR: '#00a8d8'
                  APP_CSS: ''
                  APP_DOCUMENTATION: true
                  APP_LANGUAGE: en
                  PUBLIC_ROOT: https://localhost:8001
                  SSO_LOGIN_METHOD: local_user_or_ldap
                  USE_LOCAL_STORAGE: false
                  ANALYTICS: true
                  ANALYTICS_EXTRA_PROPERTY: null
                  ERROR_TRACKING: true
                  BETA_FEATURES: false
                  TOKEN_TTL: 4 hours
                  ALLOW_PERSISTENT_TOKENS: false
                  USE_CACHE: true
                  CURRENCY: EUR
                  CURRENCY_FORMAT: €
                  DECIMAL_SEPARATOR: .
                  CSV_DELIMITER: ','
                  CSV_DECIMAL_SEPARATOR: .
                  THOUSAND_SEPARATOR: ','
                  RATE_PRECISION: 8
                  REPORT_PRECISION: 2
                  SUMMARY_PRECISION: 2
                  QUANTITY_PRECISION: 6
                  PERCENTAGE_PRECISION: 2
                  DATE_FORMAT: dd-MM-yyyy
                  SUMMARY_ADDRESS: null
                  SUMMARY_IMAGE: null
                  SUMMARY_TITLE: Summary
                  SUMMARY_EXTRA: Updated from Postman Test
                  SUMMARY_MIN_COMMIT: Uplift for minimum commitment of {quantity} {label}
                  GRAPH_MAX_SERIES: 15
                  REPORT_START_MONTH: 1
                  DISCLAIMER_ENABLED: false
                  DISCLAIMER_TITLE: Disclaimer
                  DISCLAIMER_TEXT: ''
                  DISCLAIMER_AGREE_BUTTON_TEXT: I agree
                  PASSWORD_POLICY: length_dictionary
                  ADDITIONAL_CORS_ORIGINS: null
                  MAX_LOGIN_ATTEMPTS: 5
                  LOGIN_ATTEMPTS_INTERVAL: null
                  BLOCK_LOGIN_DURATION: 15 minutes
  /v1/audit:
    get:
      tags:
        - Administration > /audit
      summary: Get audit trail
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            The start of the date range (inclusive) you want to view the audit
            trail for in `YYYY-MM-DD` format. Defaults to the current date.
        - name: end
          in: query
          schema:
            type: string
          description: >-
            The end of the date range (inclusive) you want to view the audit
            trail for in `YYYY-MM-DD` format. Defaults to the current date.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:42:26 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xbd735fb17da1598c1b617ec8c413c3c5
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xbd735fb17da1598c1b617ec8c413c3c5
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-DH2PEZATWmaGBgxCM53PwH7iDkQeZrea';style-src 'self'
                  'nonce-DH2PEZATWmaGBgxCM53PwH7iDkQeZrea';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 11e17ef9-bb2f-41ac-8997-2044a10914b0
          content:
            application/json:
              schema:
                type: object
              example:
                audit:
                  - id: 1
                    user_id: ''
                    user_name: ''
                    component: proximity
                    category: usergroup
                    action: create
                    message: Usergroup 'admins' with id=1 created
                    created_at: '2022-02-04T09:07:26Z'
                  - id: 2
                    user_id: ''
                    user_name: ''
                    component: proximity
                    category: user
                    action: create
                    message: >-
                      User 'admin' with id=469e01d8-1c95-4923-8bc6-1aebfdf30bc8
                      created
                    created_at: '2022-02-04T09:07:27Z'
  /v1/log:
    get:
      tags:
        - Administration > /log
      summary: Retrieve logfiles
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: component
          in: query
          schema:
            type: string
          description: >-
            Required, in: use, transcript, edify, proximity, chronos, pigeon,
            horizon, merlin, griffon
          example: '{{component}}'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:43:45 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X0f122269ff964353786cbc4fff1c7831
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X0f122269ff964353786cbc4fff1c7831
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-cmsbVJxxI00gD7AjOZboZDAtPfNh6RHm';style-src 'self'
                  'nonce-cmsbVJxxI00gD7AjOZboZDAtPfNh6RHm';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 9cd267cb-12f9-4ee2-aa23-e3f811aa004a
          content:
            application/json:
              schema:
                type: object
              example:
                logfiles:
                  - filename: proximity-2022-02-04.log
                    created: '2022-02-04T08:53:05Z'
                    metadata: []
                    lines:
                      - date: '2022-02-04T08:53:05.260+00:00'
                        level: 200
                        message: App\Audit::write
                        metadata:
                          appName: local
                          request-id: b05307d1-dfc7-4d43-b1af-73b73c921c86
                          message: Failed login attempt for 'admin' from ::1
                          url: /v1/auth/token?app=
                          ip: '::1'
                          http_method: POST
                          server: localhost
                          referrer: null
                      - date: '2022-02-04T10:04:30.640+00:00'
                        level: 200
                        message: The name has already been taken.
                        metadata:
                          appName: local
                          request-id: b721bf44-973d-4531-999a-3b5fcd6862f0
                          rules:
                            name: required|string|unique:metadata_definition,name
                            fields: required|array
                            fields.*.name: required|string
                            fields.*.type: required|in:string,list,numeric,date
                            fields.*.list: required_if:fields.*.type,list
                          url: /v1/metadatadefinitions
                          ip: '::1'
                          http_method: POST
                          server: localhost
                          referrer: null
  /v1/dump/data:
    get:
      tags:
        - Administration > /dump
      summary: Get a full data dump
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          description: Specify either text/csv or application/json.
          example: text/csv
        - name: models
          in: query
          schema:
            type: string
          description: Optionally provide a comma separated list of models to include.
        - name: progress
          in: query
          schema:
            type: string
          description: Use progress separators within dump, can be 0 or 1. Defaults to 1.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/system/licence:
    get:
      tags:
        - Administration > /system > /licence
      summary: Check licence
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:27:15 +0000, Wed, 14 Feb 2018 10:27:15 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: a089800cd6c1b11c33b854a251694d98
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                status: expired
                message: The current license was valid until January 31, 2017.
                hash: 4062176ea1471472332ab3afbc2d5dc58af621b7
                expiresAfter: '2017-01-31'
                payload:
                  start: '2017-01-01'
                  end: '2017-01-31'
                  type: all
                  limits:
                    account_limit: '1'
                    service_limit: '1'
    patch:
      tags:
        - Administration > /system > /licence
      summary: Update licence
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n  \"licence\": \"{{licence}}\"\n}"'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:23:47 +0000, Wed, 14 Feb 2018 10:23:47 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: c6b7d899a9439eb8ec11ed209dd47c69
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                status: valid
                message: The current licence is valid until July 1, 2027.
                hash: 83b44524e07b8cb94f110010dd15fa82b352d1fa
                expiresAfter: '2027-07-01'
                payload:
                  _version: '1'
                  start: '2021-06-01'
                  end: '2027-07-01'
                  limits: '{}'
  /v1/system/cache:
    get:
      tags:
        - Administration > /system > /cache
      summary: Get cache information
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:30:01 +0000, Wed, 14 Feb 2018 10:30:01 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: df70786eedbca0f8fa5fae6872d8321c
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  proximity:
                    size: (not running)
                  edify:
                    size: (unknown)
    delete:
      tags:
        - Administration > /system > /cache
      summary: Delete cache
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: component
          in: query
          schema:
            type: string
          description: >-
            Optionally specify a component to delete the caches for. Available
            options: `proximity`, `edify`.
      responses:
        '204':
          description: No Content
          headers:
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:35:02 +0000, Wed, 14 Feb 2018 10:35:02 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v1/system/saml:
    get:
      tags:
        - Administration > /system > /saml
      summary: Get SAML configuration
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Administration > /system > /saml
      summary: Update SAML configuration
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{  \r\n   \"configuration\":{  \r\n      \"SAML_ENTITY_ID\":
                \"https://test\",\r\n      \"SAML_X509_CERTIFICATE\":
                \"...\"\r\n   }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/system/services/:
    get:
      tags:
        - Administration > /system > /services
      summary: Get system services config
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.3.0
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 14:23:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xca216bec4b574aaa9674875037096db0
            X-Clockwork-Version:
              schema:
                type: integer
                example: '9'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: Xca216bec4b574aaa9674875037096db0
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-4NJshgzhPzByydyFbIVEPvXoFFjPKI7U';style-src 'self'
                  'nonce-4NJshgzhPzByydyFbIVEPvXoFFjPKI7U';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 50d44c84-a28d-4ea4-b792-ab0f9e26d13e
          content:
            application/json:
              schema:
                type: object
              example:
                configuration:
                  LDAP_ACCOUNT_PREFIX: null
                  LDAP_ACCOUNT_SUFFIX: null
                  LDAP_BASE_DN: null
                  LDAP_DEFAULT_USERGROUP_ID: null
                  LDAP_EMAIL_FIELD: mail
                  LDAP_ENCRYPTION: null
                  LDAP_HOSTS: null
                  LDAP_PORT: '389'
                  LDAP_TIMEOUT: '5'
                  LDAP_USERNAME_FIELD: samAccountName
                  MAIL_DRIVER: SMTP
                  MAIL_ENCRYPTION: tls
                  MAIL_FROM_ADDRESS: null
                  MAIL_FROM_NAME: MyApp
                  MAIL_HOST: null
                  MAIL_MAX_FILESIZE: '2e+7'
                  MAIL_PASSWORD: '********'
                  MAIL_PORT: '465'
                  MAIL_USERNAME: null
                  NEXMO_FROM_NUMBER: EXIVITY
                  NEXMO_KEY: null
                  NEXMO_SECRET: '********'
    patch:
      tags:
        - Administration > /system > /services
      summary: Update system services config
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{  \r\n   \"configuration\":{  \r\n      \"MAIL_FROM_NAME\":
                \"MyApp\"\r\n   }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.3.0
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 27 Feb 2024 14:23:06 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Clockwork-Id:
              schema:
                type: string
                example: X4088466fa1eab1bfe624eb653f2d98a4
            X-Clockwork-Version:
              schema:
                type: integer
                example: '9'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            phpdebugbar-id:
              schema:
                type: string
                example: X4088466fa1eab1bfe624eb653f2d98a4
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-zv35WcSJs8Lo7LLbzDKyOZMRdN7BhrCU';style-src 'self'
                  'nonce-zv35WcSJs8Lo7LLbzDKyOZMRdN7BhrCU';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 5b84e15e-ce08-4b99-8e08-fb48ebcbd14a
          content:
            application/json:
              schema:
                type: object
              example:
                code: 200
                message: Configuration saved.
                configuration:
                  LDAP_ACCOUNT_PREFIX: null
                  LDAP_ACCOUNT_SUFFIX: null
                  LDAP_BASE_DN: null
                  LDAP_DEFAULT_USERGROUP_ID: null
                  LDAP_EMAIL_FIELD: mail
                  LDAP_ENCRYPTION: null
                  LDAP_HOSTS: null
                  LDAP_PORT: '389'
                  LDAP_TIMEOUT: '5'
                  LDAP_USERNAME_FIELD: samAccountName
                  MAIL_DRIVER: SMTP
                  MAIL_ENCRYPTION: tls
                  MAIL_FROM_ADDRESS: null
                  MAIL_FROM_NAME: MyApp
                  MAIL_HOST: null
                  MAIL_MAX_FILESIZE: '2e+7'
                  MAIL_PASSWORD: '********'
                  MAIL_PORT: '465'
                  MAIL_USERNAME: null
                  NEXMO_FROM_NUMBER: EXIVITY
                  NEXMO_KEY: null
                  NEXMO_SECRET: '********'
  /v1/system:
    get:
      tags:
        - Administration > /system
      summary: Get system overview (unauthenticated)
      description: >-
        ⚠️ This endpoint is deprecated and may be removed in future versions of
        Exivity. Use `/system/version` and `/system/flags` instead.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:41:34 +0000, Wed, 14 Feb 2018 10:41:34 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: 761895ecc35993dc557ff3149dc64d58
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  version: 1.2.0
                  components:
                    exivityd:
                      ref: v1.0.0
                      hash: 89747002f3daa264fd58782f820854414c2b71f9
                    db:
                      ref: v1.0.0
                      hash: 2c25fbe3b49608b745c5337787c8845ed8f9504a
                    use:
                      ref: v1.2.0
                      hash: 7e937cbc5b8ccb1557c0108af4c48aad8735fe53
                    transcript:
                      ref: v1.1.0
                      hash: f9a9db7c57896cefd2a6a4d96aacbe294d67e29f
                    edify:
                      ref: v1.0.2
                      hash: 34017a9bebe5b42290534d0c5ab6988759eb25f6
                    glass:
                      ref: v1.1.0
                      hash: ea3b0d344ddd80227f40a00baf8b8af5691a2e8d
                    proximity:
                      ref: v1.0.3
                      hash: 72ae7b190714f69918575d5c1baa212db962fea8
                      api: v1
                    eternity:
                      ref: v1.0.1
                      hash: 6d0ff2b38d15d9832297bc16c807320e035ddb96
  /v1/system/version:
    get:
      tags:
        - Administration > /system
      summary: Get version information (unauthenticated)
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:41:34 +0000, Wed, 14 Feb 2018 10:41:34 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: 761895ecc35993dc557ff3149dc64d58
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  version: 1.2.0
                  components:
                    exivityd:
                      ref: v1.0.0
                      hash: 89747002f3daa264fd58782f820854414c2b71f9
                    db:
                      ref: v1.0.0
                      hash: 2c25fbe3b49608b745c5337787c8845ed8f9504a
                    use:
                      ref: v1.2.0
                      hash: 7e937cbc5b8ccb1557c0108af4c48aad8735fe53
                    transcript:
                      ref: v1.1.0
                      hash: f9a9db7c57896cefd2a6a4d96aacbe294d67e29f
                    edify:
                      ref: v1.0.2
                      hash: 34017a9bebe5b42290534d0c5ab6988759eb25f6
                    glass:
                      ref: v1.1.0
                      hash: ea3b0d344ddd80227f40a00baf8b8af5691a2e8d
                    proximity:
                      ref: v1.0.3
                      hash: 72ae7b190714f69918575d5c1baa212db962fea8
                      api: v1
                    eternity:
                      ref: v1.0.1
                      hash: 6d0ff2b38d15d9832297bc16c807320e035ddb96
  /v1/system/flags:
    get:
      tags:
        - Administration > /system
      summary: Get available flags
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:41:34 +0000, Wed, 14 Feb 2018 10:41:34 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: 761895ecc35993dc557ff3149dc64d58
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  version: 1.2.0
                  components:
                    exivityd:
                      ref: v1.0.0
                      hash: 89747002f3daa264fd58782f820854414c2b71f9
                    db:
                      ref: v1.0.0
                      hash: 2c25fbe3b49608b745c5337787c8845ed8f9504a
                    use:
                      ref: v1.2.0
                      hash: 7e937cbc5b8ccb1557c0108af4c48aad8735fe53
                    transcript:
                      ref: v1.1.0
                      hash: f9a9db7c57896cefd2a6a4d96aacbe294d67e29f
                    edify:
                      ref: v1.0.2
                      hash: 34017a9bebe5b42290534d0c5ab6988759eb25f6
                    glass:
                      ref: v1.1.0
                      hash: ea3b0d344ddd80227f40a00baf8b8af5691a2e8d
                    proximity:
                      ref: v1.0.3
                      hash: 72ae7b190714f69918575d5c1baa212db962fea8
                      api: v1
                    eternity:
                      ref: v1.0.1
                      hash: 6d0ff2b38d15d9832297bc16c807320e035ddb96
  /v1/system/third-party-licences:
    get:
      tags:
        - Administration > /system
      summary: Get third party licences
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            cache-control:
              schema:
                type: string
                example: no-cache, private
            connection:
              schema:
                type: string
                example: close
            content-type:
              schema:
                type: string
                example: application/json
            date:
              schema:
                type: string
                example: Wed, 14 Feb 2018 10:37:42 +0000, Wed, 14 Feb 2018 10:37:42 GMT
            host:
              schema:
                type: string
                example: localhost:8002
            phpdebugbar-id:
              schema:
                type: string
                example: efaa89faf52487b85b36df11a8f142d2
            x-powered-by:
              schema:
                type: string
                example: PHP/7.1.4
          content:
            application/json:
              schema:
                type: object
              example:
                use: ...
                transcript: ...
                edify: ...
                proximity: ...
                glass: ...
  /v1/translations/{locale}/{filename}:
    put:
      tags:
        - Administration > /translations
      summary: Create translation
      description: >-
        ⚠️ This endpoint is deprecated and may be removed in future versions of
        Exivity.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"hello\": \"Hello
                World\",\r\n\t\t\"bye\": \"Goodbye\",\r\n\t\t\"happy\":
                true\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: locale
          in: path
          schema:
            type: string
          required: true
          description: ISO 639-1 two letter code representation of names of language
          example: en
        - name: filename
          in: path
          schema:
            type: string
          required: true
          example: words
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Administration > /translations
      summary: Get translation
      description: >-
        ⚠️ This endpoint is deprecated and may be removed in future versions of
        Exivity.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: locale
          in: path
          schema:
            type: string
          required: true
          description: ISO 639-1 two letter code representation of names of language
          example: en
        - name: filename
          in: path
          schema:
            type: string
          required: true
          example: words
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Administration > /translations
      summary: Update translation
      description: >-
        ⚠️ This endpoint is deprecated and may be removed in future versions of
        Exivity.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"hello\": \"Hello
                World\",\r\n        \"bye\": \"Goodbye\",\r\n        \"happy\":
                2\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: locale
          in: path
          schema:
            type: string
          required: true
          description: ISO 639-1 two letter code representation of names of language
          example: en
        - name: filename
          in: path
          schema:
            type: string
          required: true
          example: works
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/environments:
    get:
      tags:
        - Administration > /environments
      summary: Retrieve a list of environments
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources. Possible values: `variables`.'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Administration > /environments
      summary: Add a new environment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"environment\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"name\":
                \"test\",\r\n\t\t\t\"default_flag\": true\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:51:58 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Environment/Environments
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X512aea4af93e782e75d410526f1f3486
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-NiHxxY2MVXCsEDNMRwOnbZmMcJTcTpvy';style-src 'self'
                  'nonce-NiHxxY2MVXCsEDNMRwOnbZmMcJTcTpvy';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: f2adcad8-c028-463c-ae42-32f7d3e6be12
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: environment
                  id: '2'
                  attributes:
                    name: test
                    default_flag: true
                  links:
                    self: http://localhost:8012/v1/environments/2
                  relationships:
                    variables:
                      links:
                        self: >-
                          http://localhost:8012/v1/environments/2/relationships/variables
                        related: http://localhost:8012/v1/environments/2/variables
  /v1/environments/{environment_id}:
    get:
      tags:
        - Administration > /environments
      summary: Retrieve an environment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources. Possible values: `variables`.'
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:52:12 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xb5af9380e916f1d37e37cb832d3c1d4f
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-sHqz5syJn4c26yYIhDZsBYHVFUP9PO7b';style-src 'self'
                  'nonce-sHqz5syJn4c26yYIhDZsBYHVFUP9PO7b';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 2870f925-b210-4c9b-8919-f452b9c6201b
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: environment
                  id: '2'
                  attributes:
                    name: test
                    default_flag: true
                  links:
                    self: http://localhost:8012/v1/environments/2
                  relationships:
                    variables:
                      links:
                        self: >-
                          http://localhost:8012/v1/environments/2/relationships/variables
                        related: http://localhost:8012/v1/environments/2/variables
    patch:
      tags:
        - Administration > /environments
      summary: Update an environment
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n  \"data\": {\r\n    \"type\": \"environment\",\r\n   
                \"id\": \"{{environment_id}}\",\r\n    \"attributes\":
                {\r\n      \"name\": \"Updated environment name -
                {{$randomInt}}\",\r\n      \"default_flag\": false\r\n    }\r\n 
                }\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Administration > /environments
      summary: Delete an environment
      description: >-
        You can't delete the default environment.


        On success, a `HTTP 204 No Content success status response` will be
        returned.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
          example: '{{environment_id}}'
      responses:
        '204':
          description: Successful response
          content:
            application/json: {}
  /v1/variables:
    get:
      tags:
        - Administration > /variables
      summary: Retrieve a list of variables
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: page[limit]
          in: query
          schema:
            type: string
          description: Limit the amount of results returned
        - name: page[offset]
          in: query
          schema:
            type: string
          description: Return this page of the results
        - name: sort
          in: query
          schema:
            type: string
          description: Sort results by this attribute
        - name: filter[attribute]
          in: query
          schema:
            type: string
          description: Optionally [filter](#working-with-the-api) results by this attribute
        - name: include
          in: query
          schema:
            type: string
          description: >-
            Include additional related resources. Possible values:
            `environment`.
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:50:39 GMT
            Connection:
              schema:
                type: string
                example: close
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: X2a3c4061bdfd1160c940b37513275288
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-o2ChsSJZdytZbrS3r0YgyXSRWBw33Xjf';style-src 'self'
                  'nonce-o2ChsSJZdytZbrS3r0YgyXSRWBw33Xjf';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: a8c95676-b515-4092-a60c-73e6fbf5ec8b
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: variable
                    id: '1'
                    attributes:
                      name: USERNAME
                      value: admin
                      encrypted: false
                    links:
                      self: http://localhost:8012/v1/variables/1
                    relationships:
                      environment:
                        links:
                          self: >-
                            http://localhost:8012/v1/variables/1/relationships/environment
                          related: http://localhost:8012/v1/variables/1/environment
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 15
                    current_page: 1
                    total_pages: 1
                links:
                  self: >-
                    http://localhost:8012/v1/variables?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  first: >-
                    http://localhost:8012/v1/variables?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
                  last: >-
                    http://localhost:8012/v1/variables?page%5Blimit%5D=&sort=&filter%5Battribute%5D=&include=&page%5Boffset%5D=1
    post:
      tags:
        - Administration > /variables
      summary: Add a new variable
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\":
                \"variable\",\r\n\t\t\"attributes\": {\r\n\t\t\t\"name\":
                \"USERNAME\",\r\n\t\t\t\"value\":
                \"admin\"\r\n\t\t},\r\n\t\t\"relationships\": {\r\n       
                \t\"environment\": {\r\n        \t\t\"data\": {\r\n       
                \t\t\t\"type\": \"environment\",\r\n        \t\t\t\"id\":
                \"{{environment_id}}\"\r\n        \t\t}\r\n       
                \t}\r\n        }\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: localhost:8012
            Date:
              schema:
                type: string
                example: Fri, 04 Feb 2022 10:50:23 GMT
            Connection:
              schema:
                type: string
                example: close
            Location:
              schema:
                type: string
                example: http://localhost:8012/v1/Variable/Variables
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/vnd.api+json
            X-Clockwork-Id:
              schema:
                type: string
                example: Xcb2e8c3491365fe0e87a4d79201c3578
            X-Clockwork-Version:
              schema:
                type: integer
                example: '1'
            X-Clockwork-Path:
              schema:
                type: string
                example: _debugbar/clockwork/
            X-XSS-Protection:
              schema:
                type: string
                example: 1; mode=block
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Feature-Policy:
              schema:
                type: string
                example: autoplay 'none'; camera 'none'
            Referrer-Policy:
              schema:
                type: string
                example: strict-origin
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  base-uri 'self';connect-src 'self';default-src
                  'self';form-action 'self';img-src 'self' data:;media-src
                  'self';object-src 'none';script-src 'self'
                  'nonce-pUFBkahh6JTDf4qIV8Qdz9w25WaUG7tN';style-src 'self'
                  'nonce-pUFBkahh6JTDf4qIV8Qdz9w25WaUG7tN';font-src 'self' data:
            Request-Id:
              schema:
                type: string
                example: 25f670be-f4a9-49c8-a00d-aee3edd695f6
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: variable
                  id: '1'
                  attributes:
                    name: USERNAME
                    value: admin
                    encrypted: false
                  links:
                    self: http://localhost:8012/v1/variables/1
                  relationships:
                    environment:
                      links:
                        self: >-
                          http://localhost:8012/v1/variables/1/relationships/environment
                        related: http://localhost:8012/v1/variables/1/environment
  /v1/variables/{variable_id}:
    get:
      tags:
        - Administration > /variables
      summary: Retrieve a variable
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: include
          in: query
          schema:
            type: string
          description: 'Include additional related resources. Possible values: `variables`.'
        - name: variable_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Administration > /variables
      summary: Update a variable
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\r\n\t\"data\": {\r\n\t\t\"type\": \"variable\",\r\n\t   
                \"id\": \"{{variable_id}}\",\r\n\t\t\"attributes\":
                {\r\n\t\t\t\"name\": \"USERNAME\",\r\n\t\t\t\"value\":
                \"alice\",\r\n\t\t\t\"encrypted\": false\r\n\t\t}\r\n\t}\r\n}"
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/vnd.api+json
        - name: variable_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Administration > /variables
      summary: Delete a variable
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: variable_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Successful response
          content:
            application/json: {}
  /v1/failed-jobs:
    get:
      tags:
        - Administration > /failed-jobs
      summary: Get all failed jobs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
